
main.elf:     file format elf32-or32

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .vectors      00000e1c  00000000  00000000  00002000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .text         00004ec4  00001000  00001000  00003000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000418  00005ec4  00005ec4  00007ec4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .data         000000f0  000062dc  000062dc  000082dc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .bss          00000330  000063cc  000063cc  000083cc  2**2
                  ALLOC
  5 .stack        00002000  000066fc  000066fc  000083cc  2**0
                  CONTENTS
  6 .debug_abbrev 0000132b  00000000  00000000  0000a3cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00003e12  00000000  00000000  0000b6f7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000040b9  00000000  00000000  0000f509  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000a14  00000000  00000000  000135c4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_pubnames 00000766  00000000  00000000  00013fd8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_pubtypes 00000434  00000000  00000000  0001473e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_aranges 000001c0  00000000  00000000  00014b72  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00000a40  00000000  00000000  00014d32  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .comment      00000051  00000000  00000000  00015772  2**0
                  CONTENTS, READONLY
 15 .debug_loc    00004c89  00000000  00000000  000157c3  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 000004a0  00000000  00000000  0001a44c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .vectors:

00000000 <.vectors>:
	...
 100:	18 00 00 00 	l.movhi r0,0x0
 104:	18 20 00 00 	l.movhi r1,0x0
 108:	18 40 00 00 	l.movhi r2,0x0
 10c:	18 60 00 00 	l.movhi r3,0x0
 110:	18 80 00 00 	l.movhi r4,0x0
 114:	18 a0 00 00 	l.movhi r5,0x0
 118:	18 c0 00 00 	l.movhi r6,0x0
 11c:	18 e0 00 00 	l.movhi r7,0x0
 120:	19 00 00 00 	l.movhi r8,0x0
 124:	19 20 00 00 	l.movhi r9,0x0
 128:	19 40 00 00 	l.movhi r10,0x0
 12c:	19 60 00 00 	l.movhi r11,0x0
 130:	19 80 00 00 	l.movhi r12,0x0
 134:	19 a0 00 00 	l.movhi r13,0x0
 138:	19 c0 00 00 	l.movhi r14,0x0
 13c:	19 e0 00 00 	l.movhi r15,0x0
 140:	1a 00 00 00 	l.movhi r16,0x0
 144:	1a 20 00 00 	l.movhi r17,0x0
 148:	1a 40 00 00 	l.movhi r18,0x0
 14c:	1a 60 00 00 	l.movhi r19,0x0
 150:	1a 80 00 00 	l.movhi r20,0x0
 154:	1a a0 00 00 	l.movhi r21,0x0
 158:	1a c0 00 00 	l.movhi r22,0x0
 15c:	1a e0 00 00 	l.movhi r23,0x0
 160:	1b 00 00 00 	l.movhi r24,0x0
 164:	1b 20 00 00 	l.movhi r25,0x0
 168:	1b 40 00 00 	l.movhi r26,0x0
 16c:	1b 60 00 00 	l.movhi r27,0x0
 170:	1b 80 00 00 	l.movhi r28,0x0
 174:	1b a0 00 00 	l.movhi r29,0x0
 178:	1b c0 00 00 	l.movhi r30,0x0
 17c:	1b e0 00 00 	l.movhi r31,0x0
 180:	a8 20 00 01 	l.ori r1,r0,0x1
 184:	c0 00 08 11 	l.mtspr r0,r1,0x11
 188:	c1 40 00 00 	l.mtspr r0,r0,0x5000
 18c:	18 20 00 00 	l.movhi r1,0x0
 190:	a8 21 86 fc 	l.ori r1,r1,0x86fc
 194:	9c 40 ff fd 	l.addi r2,r0,0xfffffffd
 198:	e0 21 10 03 	l.and r1,r1,r2
 19c:	18 80 00 00 	l.movhi r4,0x0
 1a0:	a8 84 10 48 	l.ori r4,r4,0x1048
 1a4:	44 00 20 00 	l.jr r4
 1a8:	15 00 00 00 	l.nop 0x0
	...
 200:	9c 21 ff 00 	l.addi r1,r1,0xffffff00
 204:	d4 01 18 04 	l.sw 0x4(r1),r3
 208:	d4 01 20 08 	l.sw 0x8(r1),r4
 20c:	b4 60 00 10 	l.mfspr r3,r0,0x10
 210:	b4 80 00 20 	l.mfspr r4,r0,0x20
 214:	00 00 03 9e 	l.j 108c <default_exception_handler>
 218:	15 00 00 00 	l.nop 0x0
	...
 300:	9c 21 ff 00 	l.addi r1,r1,0xffffff00
 304:	d4 01 18 04 	l.sw 0x4(r1),r3
 308:	d4 01 20 08 	l.sw 0x8(r1),r4
 30c:	b4 60 00 10 	l.mfspr r3,r0,0x10
 310:	b4 80 00 20 	l.mfspr r4,r0,0x20
 314:	00 00 03 5e 	l.j 108c <default_exception_handler>
 318:	15 00 00 00 	l.nop 0x0
	...
 400:	9c 21 ff 00 	l.addi r1,r1,0xffffff00
 404:	d4 01 18 04 	l.sw 0x4(r1),r3
 408:	d4 01 20 08 	l.sw 0x8(r1),r4
 40c:	b4 60 00 10 	l.mfspr r3,r0,0x10
 410:	b4 80 00 20 	l.mfspr r4,r0,0x20
 414:	00 00 03 1e 	l.j 108c <default_exception_handler>
 418:	15 00 00 00 	l.nop 0x0
	...
 500:	9c 21 ff 00 	l.addi r1,r1,0xffffff00
 504:	d4 01 18 04 	l.sw 0x4(r1),r3
 508:	d4 01 20 08 	l.sw 0x8(r1),r4
 50c:	b4 60 00 10 	l.mfspr r3,r0,0x10
 510:	b4 80 00 20 	l.mfspr r4,r0,0x20
 514:	00 00 02 de 	l.j 108c <default_exception_handler>
 518:	15 00 00 00 	l.nop 0x0
	...
 600:	9c 21 ff 00 	l.addi r1,r1,0xffffff00
 604:	d4 01 18 04 	l.sw 0x4(r1),r3
 608:	d4 01 20 08 	l.sw 0x8(r1),r4
 60c:	b4 60 00 10 	l.mfspr r3,r0,0x10
 610:	b4 80 00 20 	l.mfspr r4,r0,0x20
 614:	00 00 02 9e 	l.j 108c <default_exception_handler>
 618:	15 00 00 00 	l.nop 0x0
	...
 700:	9c 21 ff 00 	l.addi r1,r1,0xffffff00
 704:	d4 01 18 04 	l.sw 0x4(r1),r3
 708:	d4 01 20 08 	l.sw 0x8(r1),r4
 70c:	b4 60 00 10 	l.mfspr r3,r0,0x10
 710:	b4 80 00 20 	l.mfspr r4,r0,0x20
 714:	00 00 02 5e 	l.j 108c <default_exception_handler>
 718:	15 00 00 00 	l.nop 0x0
	...
 800:	9c 21 ff 00 	l.addi r1,r1,0xffffff00
 804:	d4 01 18 04 	l.sw 0x4(r1),r3
 808:	d4 01 20 08 	l.sw 0x8(r1),r4
 80c:	b4 60 00 10 	l.mfspr r3,r0,0x10
 810:	b4 80 00 20 	l.mfspr r4,r0,0x20
 814:	00 00 02 1e 	l.j 108c <default_exception_handler>
 818:	15 00 00 00 	l.nop 0x0
	...
 900:	9c 21 ff 00 	l.addi r1,r1,0xffffff00
 904:	d4 01 18 04 	l.sw 0x4(r1),r3
 908:	d4 01 20 08 	l.sw 0x8(r1),r4
 90c:	b4 60 00 10 	l.mfspr r3,r0,0x10
 910:	b4 80 00 20 	l.mfspr r4,r0,0x20
 914:	00 00 01 de 	l.j 108c <default_exception_handler>
 918:	15 00 00 00 	l.nop 0x0
	...
 a00:	9c 21 ff 00 	l.addi r1,r1,0xffffff00
 a04:	d4 01 18 04 	l.sw 0x4(r1),r3
 a08:	d4 01 20 08 	l.sw 0x8(r1),r4
 a0c:	b4 60 00 10 	l.mfspr r3,r0,0x10
 a10:	b4 80 00 20 	l.mfspr r4,r0,0x20
 a14:	00 00 01 9e 	l.j 108c <default_exception_handler>
 a18:	15 00 00 00 	l.nop 0x0
	...
 b00:	9c 21 ff 00 	l.addi r1,r1,0xffffff00
 b04:	d4 01 18 04 	l.sw 0x4(r1),r3
 b08:	d4 01 20 08 	l.sw 0x8(r1),r4
 b0c:	b4 60 00 10 	l.mfspr r3,r0,0x10
 b10:	b4 80 00 20 	l.mfspr r4,r0,0x20
 b14:	00 00 01 5e 	l.j 108c <default_exception_handler>
 b18:	15 00 00 00 	l.nop 0x0
	...
 c00:	9c 21 ff 00 	l.addi r1,r1,0xffffff00
 c04:	d4 01 18 04 	l.sw 0x4(r1),r3
 c08:	d4 01 20 08 	l.sw 0x8(r1),r4
 c0c:	b4 60 00 10 	l.mfspr r3,r0,0x10
 c10:	b4 80 00 20 	l.mfspr r4,r0,0x20
 c14:	00 00 01 1e 	l.j 108c <default_exception_handler>
 c18:	15 00 00 00 	l.nop 0x0
	...
 d00:	9c 21 ff 00 	l.addi r1,r1,0xffffff00
 d04:	d4 01 18 04 	l.sw 0x4(r1),r3
 d08:	d4 01 20 08 	l.sw 0x8(r1),r4
 d0c:	b4 60 00 10 	l.mfspr r3,r0,0x10
 d10:	b4 80 00 20 	l.mfspr r4,r0,0x20
 d14:	00 00 00 de 	l.j 108c <default_exception_handler>
 d18:	15 00 00 00 	l.nop 0x0
	...
 e00:	9c 21 ff 00 	l.addi r1,r1,0xffffff00
 e04:	d4 01 18 04 	l.sw 0x4(r1),r3
 e08:	d4 01 20 08 	l.sw 0x8(r1),r4
 e0c:	b4 60 00 10 	l.mfspr r3,r0,0x10
 e10:	b4 80 00 20 	l.mfspr r4,r0,0x20
 e14:	00 00 00 9e 	l.j 108c <default_exception_handler>
 e18:	15 00 00 00 	l.nop 0x0

Disassembly of section .text:

00001000 <Suma>:

#include <stdio.h>


int Suma(int a, int b, int c, int d, int e, int f,int g){
	if(g>4)	return (a+b+c+d)-(e+f);
    1000:	85 61 00 00 	l.lwz r11,0x0(r1)
    1004:	bd ab 00 04 	l.sflesi r11,0x4
    1008:	0c 00 00 08 	l.bnf 1028 <Suma+0x28>
    100c:	15 00 00 00 	l.nop 0x0
	else return (a+b+c+d+e)-f;
    1010:	e1 64 18 00 	l.add r11,r4,r3
    1014:	e1 6b 28 00 	l.add r11,r11,r5
    1018:	e1 6b 30 00 	l.add r11,r11,r6
    101c:	e1 6b 38 00 	l.add r11,r11,r7
	}
    1020:	44 00 48 00 	l.jr r9
    1024:	e1 6b 40 02 	l.sub r11,r11,r8

#include <stdio.h>


int Suma(int a, int b, int c, int d, int e, int f,int g){
	if(g>4)	return (a+b+c+d)-(e+f);
    1028:	e1 64 18 00 	l.add r11,r4,r3
    102c:	e1 6b 28 00 	l.add r11,r11,r5
    1030:	e1 6b 30 00 	l.add r11,r11,r6
    1034:	e1 6b 38 02 	l.sub r11,r11,r7
	else return (a+b+c+d+e)-f;
	}
    1038:	44 00 48 00 	l.jr r9
    103c:	e1 6b 40 02 	l.sub r11,r11,r8

00001040 <main>:
int r;	
	
	r = Suma(a, b, c, d, e, f, g);
//	printf("El Resultado es : %d", r);
	return 0;
}
    1040:	44 00 48 00 	l.jr r9
    1044:	9d 60 00 00 	l.addi r11,r0,0x0

00001048 <_start>:
    1048:	04 00 01 60 	l.jal 15c8 <_cache_init>
    104c:	15 00 00 00 	l.nop 0x0
    1050:	18 a0 00 00 	l.movhi r5,0x0
    1054:	a8 a5 63 cc 	l.ori r5,r5,0x63cc
    1058:	18 c0 00 00 	l.movhi r6,0x0
    105c:	a8 c6 66 fc 	l.ori r6,r6,0x66fc
    1060:	d4 05 00 00 	l.sw 0x0(r5),r0
    1064:	e4 85 30 00 	l.sfltu r5,r6
    1068:	13 ff ff fe 	l.bf 1060 <_start+0x18>
    106c:	9c a5 00 04 	l.addi r5,r5,0x4
    1070:	e0 60 00 04 	l.or r3,r0,r0
    1074:	e0 80 00 04 	l.or r4,r0,r0
    1078:	07 ff ff f2 	l.jal 1040 <main>
    107c:	15 00 00 00 	l.nop 0x0
    1080:	9c 6b 00 00 	l.addi r3,r11,0x0
    1084:	04 00 01 16 	l.jal 14dc <exit>
    1088:	15 00 00 00 	l.nop 0x0

0000108c <default_exception_handler>:
    108c:	d4 01 10 00 	l.sw 0x0(r1),r2
    1090:	d4 01 28 0c 	l.sw 0xc(r1),r5
    1094:	d4 01 30 10 	l.sw 0x10(r1),r6
    1098:	d4 01 38 14 	l.sw 0x14(r1),r7
    109c:	d4 01 40 18 	l.sw 0x18(r1),r8
    10a0:	d4 01 48 1c 	l.sw 0x1c(r1),r9
    10a4:	d4 01 50 20 	l.sw 0x20(r1),r10
    10a8:	d4 01 58 24 	l.sw 0x24(r1),r11
    10ac:	d4 01 60 28 	l.sw 0x28(r1),r12
    10b0:	d4 01 68 2c 	l.sw 0x2c(r1),r13
    10b4:	d4 01 70 30 	l.sw 0x30(r1),r14
    10b8:	d4 01 78 34 	l.sw 0x34(r1),r15
    10bc:	d4 01 80 38 	l.sw 0x38(r1),r16
    10c0:	d4 01 88 3c 	l.sw 0x3c(r1),r17
    10c4:	d4 01 90 40 	l.sw 0x40(r1),r18
    10c8:	d4 01 98 44 	l.sw 0x44(r1),r19
    10cc:	d4 01 a0 48 	l.sw 0x48(r1),r20
    10d0:	d4 01 a8 4c 	l.sw 0x4c(r1),r21
    10d4:	d4 01 b0 50 	l.sw 0x50(r1),r22
    10d8:	d4 01 b8 54 	l.sw 0x54(r1),r23
    10dc:	d4 01 c0 58 	l.sw 0x58(r1),r24
    10e0:	d4 01 c8 5c 	l.sw 0x5c(r1),r25
    10e4:	d4 01 d0 60 	l.sw 0x60(r1),r26
    10e8:	d4 01 d8 64 	l.sw 0x64(r1),r27
    10ec:	d4 01 e0 68 	l.sw 0x68(r1),r28
    10f0:	d4 01 e8 6c 	l.sw 0x6c(r1),r29
    10f4:	d4 01 f0 70 	l.sw 0x70(r1),r30
    10f8:	d4 01 f8 74 	l.sw 0x74(r1),r31
    10fc:	d4 01 00 78 	l.sw 0x78(r1),r0
    1100:	04 00 00 2e 	l.jal 11b8 <default_exception_handler_c>
    1104:	15 00 00 00 	l.nop 0x0
    1108:	84 41 00 00 	l.lwz r2,0x0(r1)
    110c:	84 61 00 04 	l.lwz r3,0x4(r1)
    1110:	84 81 00 08 	l.lwz r4,0x8(r1)
    1114:	84 a1 00 0c 	l.lwz r5,0xc(r1)
    1118:	84 c1 00 10 	l.lwz r6,0x10(r1)
    111c:	84 e1 00 14 	l.lwz r7,0x14(r1)
    1120:	85 01 00 18 	l.lwz r8,0x18(r1)
    1124:	85 21 00 1c 	l.lwz r9,0x1c(r1)
    1128:	85 41 00 20 	l.lwz r10,0x20(r1)
    112c:	85 61 00 24 	l.lwz r11,0x24(r1)
    1130:	85 81 00 28 	l.lwz r12,0x28(r1)
    1134:	85 a1 00 2c 	l.lwz r13,0x2c(r1)
    1138:	85 c1 00 30 	l.lwz r14,0x30(r1)
    113c:	85 e1 00 34 	l.lwz r15,0x34(r1)
    1140:	86 01 00 38 	l.lwz r16,0x38(r1)
    1144:	86 21 00 3c 	l.lwz r17,0x3c(r1)
    1148:	86 41 00 40 	l.lwz r18,0x40(r1)
    114c:	86 61 00 44 	l.lwz r19,0x44(r1)
    1150:	86 81 00 48 	l.lwz r20,0x48(r1)
    1154:	86 a1 00 4c 	l.lwz r21,0x4c(r1)
    1158:	86 c1 00 50 	l.lwz r22,0x50(r1)
    115c:	86 e1 00 54 	l.lwz r23,0x54(r1)
    1160:	87 01 00 58 	l.lwz r24,0x58(r1)
    1164:	87 21 00 5c 	l.lwz r25,0x5c(r1)
    1168:	87 41 00 60 	l.lwz r26,0x60(r1)
    116c:	87 61 00 64 	l.lwz r27,0x64(r1)
    1170:	87 81 00 68 	l.lwz r28,0x68(r1)
    1174:	87 a1 00 6c 	l.lwz r29,0x6c(r1)
    1178:	87 c1 00 70 	l.lwz r30,0x70(r1)
    117c:	87 e1 00 74 	l.lwz r31,0x74(r1)
    1180:	84 01 00 78 	l.lwz r0,0x78(r1)
    1184:	9c 21 01 00 	l.addi r1,r1,0x100
    1188:	24 00 00 00 	l.rfe 
    118c:	15 00 00 00 	l.nop 0x0

00001190 <add_handler>:
				    0};    // 13
  

void
add_handler(unsigned long vector, void (*handler) (void))
{
    1190:	d7 e1 17 fc 	l.sw 0xfffffffc(r1),r2
  except_handlers[vector] = handler;
    1194:	18 40 00 00 	l.movhi r2,0x0
    1198:	b8 63 00 02 	l.slli r3,r3,0x2
    119c:	a8 42 63 58 	l.ori r2,r2,0x6358
				    0};    // 13
  

void
add_handler(unsigned long vector, void (*handler) (void))
{
    11a0:	9c 21 ff fc 	l.addi r1,r1,0xfffffffc
  except_handlers[vector] = handler;
    11a4:	e0 63 10 00 	l.add r3,r3,r2
    11a8:	d4 03 20 00 	l.sw 0x0(r3),r4
}
    11ac:	9c 21 00 04 	l.addi r1,r1,0x4
    11b0:	44 00 48 00 	l.jr r9
    11b4:	84 41 ff fc 	l.lwz r2,0xfffffffc(r1)

000011b8 <default_exception_handler_c>:

void 
default_exception_handler_c(unsigned exception_address,unsigned epc)
{
    11b8:	d7 e1 87 f8 	l.sw 0xfffffff8(r1),r16
  int exception_no = (exception_address >> 8) & 0x1f;
    11bc:	ba 03 00 46 	l.srli r16,r3,0x6
  except_handlers[vector] = handler;
}

void 
default_exception_handler_c(unsigned exception_address,unsigned epc)
{
    11c0:	d7 e1 77 f4 	l.sw 0xfffffff4(r1),r14
    11c4:	a9 c4 00 00 	l.ori r14,r4,0x0
  int exception_no = (exception_address >> 8) & 0x1f;
  if (except_handlers[exception_no])
    11c8:	18 80 00 00 	l.movhi r4,0x0
    11cc:	a6 10 00 7c 	l.andi r16,r16,0x7c
    11d0:	a8 84 63 58 	l.ori r4,r4,0x6358
  except_handlers[vector] = handler;
}

void 
default_exception_handler_c(unsigned exception_address,unsigned epc)
{
    11d4:	d7 e1 17 f0 	l.sw 0xfffffff0(r1),r2
    11d8:	a8 43 00 00 	l.ori r2,r3,0x0
  int exception_no = (exception_address >> 8) & 0x1f;
  if (except_handlers[exception_no])
    11dc:	e0 70 20 00 	l.add r3,r16,r4
  except_handlers[vector] = handler;
}

void 
default_exception_handler_c(unsigned exception_address,unsigned epc)
{
    11e0:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  int exception_no = (exception_address >> 8) & 0x1f;
  if (except_handlers[exception_no])
    11e4:	84 a3 00 00 	l.lwz r5,0x0(r3)
    11e8:	bc 05 00 00 	l.sfeqi r5,0x0
    11ec:	10 00 00 08 	l.bf 120c <default_exception_handler_c+0x54>
    11f0:	9c 21 ff e8 	l.addi r1,r1,0xffffffe8
  printf("EPC = 0x%.8x\n", epc);
  report(exception_address);
  report(epc);
  __asm__("l.nop 1");
  for(;;);
}
    11f4:	9c 21 00 18 	l.addi r1,r1,0x18
    11f8:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    11fc:	84 41 ff f0 	l.lwz r2,0xfffffff0(r1)
    1200:	85 c1 ff f4 	l.lwz r14,0xfffffff4(r1)
default_exception_handler_c(unsigned exception_address,unsigned epc)
{
  int exception_no = (exception_address >> 8) & 0x1f;
  if (except_handlers[exception_no])
    {	    
	    (*except_handlers[exception_no])();
    1204:	44 00 28 00 	l.jr r5
    1208:	86 01 ff f8 	l.lwz r16,0xfffffff8(r1)
	    return;
    }

  // init uart here, incase it hasn't been
  uart_init(DEFAULT_UART);
    120c:	04 00 01 31 	l.jal 16d0 <uart_init>
    1210:	a8 65 00 00 	l.ori r3,r5,0x0
	  
  printf("EPC = 0x%.8x\n", exception_address);
    1214:	18 60 00 00 	l.movhi r3,0x0
    1218:	d4 01 10 00 	l.sw 0x0(r1),r2
    121c:	04 00 05 9a 	l.jal 2884 <printf_to_uart>
    1220:	a8 63 61 5c 	l.ori r3,r3,0x615c
	  
  // Output initial messaging using low-level functions incase
  // something really bad happened.
  printf("%s%s", exception_strings[exception_no], 
    1224:	18 80 00 00 	l.movhi r4,0x0
    1228:	a8 84 62 dc 	l.ori r4,r4,0x62dc
    122c:	e0 70 20 00 	l.add r3,r16,r4
    1230:	84 83 00 00 	l.lwz r4,0x0(r3)
    1234:	18 60 00 00 	l.movhi r3,0x0
    1238:	d4 01 20 00 	l.sw 0x0(r1),r4
    123c:	18 80 00 00 	l.movhi r4,0x0
    1240:	a8 63 61 6a 	l.ori r3,r3,0x616a
    1244:	a8 84 61 6f 	l.ori r4,r4,0x616f
    1248:	04 00 05 8f 	l.jal 2884 <printf_to_uart>
    124c:	d4 01 20 04 	l.sw 0x4(r1),r4
	 STR_EXCEPTION_OCCURED);
	  
  // Icing on the cake using fancy functions
  printf("EPC = 0x%.8x\n", epc);
    1250:	18 60 00 00 	l.movhi r3,0x0
    1254:	d4 01 70 00 	l.sw 0x0(r1),r14
    1258:	04 00 05 8b 	l.jal 2884 <printf_to_uart>
    125c:	a8 63 61 5c 	l.ori r3,r3,0x615c
  report(exception_address);
    1260:	04 00 00 9b 	l.jal 14cc <report>
    1264:	a8 62 00 00 	l.ori r3,r2,0x0
  report(epc);
    1268:	04 00 00 99 	l.jal 14cc <report>
    126c:	a8 6e 00 00 	l.ori r3,r14,0x0
  __asm__("l.nop 1");
    1270:	15 00 00 01 	l.nop 0x1
    1274:	00 00 00 00 	l.j 1274 <default_exception_handler_c+0xbc>
    1278:	15 00 00 00 	l.nop 0x0

0000127c <int_init>:
/* Interrupt handlers table */
struct ihnd int_handlers[MAX_INT_HANDLERS];

/* Initialize routine */
int int_init()
{
    127c:	18 60 00 00 	l.movhi r3,0x0
    1280:	d7 e1 17 fc 	l.sw 0xfffffffc(r1),r2
    1284:	a8 63 63 d0 	l.ori r3,r3,0x63d0
    1288:	9c 21 ff fc 	l.addi r1,r1,0xfffffffc
  int i;

  for(i = 0; i < MAX_INT_HANDLERS; i++) {
    int_handlers[i].handler = 0;
    128c:	9c 40 00 00 	l.addi r2,r0,0x0
    1290:	d4 03 10 00 	l.sw 0x0(r3),r2
    int_handlers[i].arg = 0;
    1294:	d4 03 10 04 	l.sw 0x4(r3),r2
/* Initialize routine */
int int_init()
{
  int i;

  for(i = 0; i < MAX_INT_HANDLERS; i++) {
    1298:	18 40 00 00 	l.movhi r2,0x0
    int_handlers[i].handler = 0;
    int_handlers[i].arg = 0;
    129c:	9c 63 00 08 	l.addi r3,r3,0x8
/* Initialize routine */
int int_init()
{
  int i;

  for(i = 0; i < MAX_INT_HANDLERS; i++) {
    12a0:	a8 42 64 d0 	l.ori r2,r2,0x64d0
    12a4:	e4 23 10 00 	l.sfne r3,r2
    12a8:	13 ff ff f9 	l.bf 128c <int_init+0x10>
    12ac:	9d 60 00 00 	l.addi r11,r0,0x0
    int_handlers[i].handler = 0;
    int_handlers[i].arg = 0;
  }
  
  return 0;
}
    12b0:	9c 21 00 04 	l.addi r1,r1,0x4
    12b4:	44 00 48 00 	l.jr r9
    12b8:	84 41 ff fc 	l.lwz r2,0xfffffffc(r1)

000012bc <int_add>:

/* Add interrupt handler */ 
int int_add(unsigned long irq, void (* handler)(void *), void *arg)
{
    12bc:	d7 e1 17 f8 	l.sw 0xfffffff8(r1),r2
    12c0:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
    12c4:	a8 43 00 00 	l.ori r2,r3,0x0
    12c8:	9c 21 ff f8 	l.addi r1,r1,0xfffffff8
  if(irq >= MAX_INT_HANDLERS)
    12cc:	bc 43 00 1f 	l.sfgtui r3,0x1f
    12d0:	10 00 00 10 	l.bf 1310 <int_add+0x54>
    12d4:	9d 60 ff ff 	l.addi r11,r0,0xffffffff
    return -1;

  int_handlers[irq].handler = handler;
    12d8:	18 e0 00 00 	l.movhi r7,0x0
    12dc:	b8 c3 00 03 	l.slli r6,r3,0x3
    12e0:	a8 e7 63 d0 	l.ori r7,r7,0x63d0
  int_handlers[irq].arg = arg;

  mtspr(SPR_PICMR, mfspr(SPR_PICMR) | (0x00000001L << irq));
    12e4:	9c 60 48 00 	l.addi r3,r0,0x4800
int int_add(unsigned long irq, void (* handler)(void *), void *arg)
{
  if(irq >= MAX_INT_HANDLERS)
    return -1;

  int_handlers[irq].handler = handler;
    12e8:	e0 c6 38 00 	l.add r6,r6,r7
    12ec:	d4 06 20 00 	l.sw 0x0(r6),r4
  int_handlers[irq].arg = arg;

  mtspr(SPR_PICMR, mfspr(SPR_PICMR) | (0x00000001L << irq));
    12f0:	04 00 00 6f 	l.jal 14ac <mfspr>
    12f4:	d4 06 28 04 	l.sw 0x4(r6),r5
    12f8:	9c 80 00 01 	l.addi r4,r0,0x1
    12fc:	9c 60 48 00 	l.addi r3,r0,0x4800
    1300:	e0 44 10 08 	l.sll r2,r4,r2
    1304:	04 00 00 67 	l.jal 14a0 <mtspr>
    1308:	e0 8b 10 04 	l.or r4,r11,r2
    
  return 0;
    130c:	9d 60 00 00 	l.addi r11,r0,0x0
}
    1310:	9c 21 00 08 	l.addi r1,r1,0x8
    1314:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    1318:	44 00 48 00 	l.jr r9
    131c:	84 41 ff f8 	l.lwz r2,0xfffffff8(r1)

00001320 <int_disable>:

/* Disable interrupt */ 
int int_disable(unsigned long irq)
{
    1320:	d7 e1 17 f8 	l.sw 0xfffffff8(r1),r2
    1324:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
    1328:	a8 43 00 00 	l.ori r2,r3,0x0
    132c:	9c 21 ff f8 	l.addi r1,r1,0xfffffff8
  if(irq >= MAX_INT_HANDLERS)
    1330:	bc 43 00 1f 	l.sfgtui r3,0x1f
    1334:	10 00 00 0b 	l.bf 1360 <int_disable+0x40>
    1338:	9d 60 ff ff 	l.addi r11,r0,0xffffffff
    return -1;
  
  mtspr(SPR_PICMR, mfspr(SPR_PICMR) & ~(0x00000001L << irq));
    133c:	04 00 00 5c 	l.jal 14ac <mfspr>
    1340:	9c 60 48 00 	l.addi r3,r0,0x4800
    1344:	9c 80 00 01 	l.addi r4,r0,0x1
    1348:	9c 60 48 00 	l.addi r3,r0,0x4800
    134c:	e0 44 10 08 	l.sll r2,r4,r2
    1350:	ac 82 ff ff 	l.xori r4,r2,0xffffffff
    1354:	04 00 00 53 	l.jal 14a0 <mtspr>
    1358:	e0 8b 20 03 	l.and r4,r11,r4
  
  return 0;
    135c:	9d 60 00 00 	l.addi r11,r0,0x0
}
    1360:	9c 21 00 08 	l.addi r1,r1,0x8
    1364:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    1368:	44 00 48 00 	l.jr r9
    136c:	84 41 ff f8 	l.lwz r2,0xfffffff8(r1)

00001370 <int_enable>:

/* Enable interrupt */ 
int int_enable(unsigned long irq)
{
    1370:	d7 e1 17 f8 	l.sw 0xfffffff8(r1),r2
    1374:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
    1378:	a8 43 00 00 	l.ori r2,r3,0x0
    137c:	9c 21 ff f8 	l.addi r1,r1,0xfffffff8
  if(irq >= MAX_INT_HANDLERS)
    1380:	bc 43 00 1f 	l.sfgtui r3,0x1f
    1384:	10 00 00 0a 	l.bf 13ac <int_enable+0x3c>
    1388:	9d 60 ff ff 	l.addi r11,r0,0xffffffff
    return -1;

  mtspr(SPR_PICMR, mfspr(SPR_PICMR) | (0x00000001L << irq));
    138c:	04 00 00 48 	l.jal 14ac <mfspr>
    1390:	9c 60 48 00 	l.addi r3,r0,0x4800
    1394:	9c 80 00 01 	l.addi r4,r0,0x1
    1398:	9c 60 48 00 	l.addi r3,r0,0x4800
    139c:	e0 44 10 08 	l.sll r2,r4,r2
    13a0:	04 00 00 40 	l.jal 14a0 <mtspr>
    13a4:	e0 8b 10 04 	l.or r4,r11,r2
  
  return 0;
    13a8:	9d 60 00 00 	l.addi r11,r0,0x0
}
    13ac:	9c 21 00 08 	l.addi r1,r1,0x8
    13b0:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    13b4:	44 00 48 00 	l.jr r9
    13b8:	84 41 ff f8 	l.lwz r2,0xfffffff8(r1)

000013bc <int_main>:

/* Main interrupt handler */
void int_main()
{
    13bc:	d7 e1 17 e8 	l.sw 0xffffffe8(r1),r2
    13c0:	d7 e1 77 ec 	l.sw 0xffffffec(r1),r14
    13c4:	d7 e1 97 f4 	l.sw 0xfffffff4(r1),r18
    13c8:	d7 e1 a7 f8 	l.sw 0xfffffff8(r1),r20
    13cc:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
    13d0:	d7 e1 87 f0 	l.sw 0xfffffff0(r1),r16
  unsigned long picsr = mfspr(SPR_PICSR);
    13d4:	9c 60 48 02 	l.addi r3,r0,0x4802
  return 0;
}

/* Main interrupt handler */
void int_main()
{
    13d8:	9c 21 ff e8 	l.addi r1,r1,0xffffffe8
  unsigned long picsr = mfspr(SPR_PICSR);
    13dc:	04 00 00 34 	l.jal 14ac <mfspr>
    13e0:	19 c0 00 00 	l.movhi r14,0x0
  unsigned long i = 0;

  mtspr(SPR_PICSR, 0);
    13e4:	9c 80 00 00 	l.addi r4,r0,0x0
    13e8:	9c 60 48 02 	l.addi r3,r0,0x4802
    13ec:	a9 ce 63 d0 	l.ori r14,r14,0x63d0
}

/* Main interrupt handler */
void int_main()
{
  unsigned long picsr = mfspr(SPR_PICSR);
    13f0:	aa 8b 00 00 	l.ori r20,r11,0x0
  unsigned long i = 0;
    13f4:	a8 44 00 00 	l.ori r2,r4,0x0

  mtspr(SPR_PICSR, 0);
    13f8:	04 00 00 2a 	l.jal 14a0 <mtspr>
    13fc:	9e 40 00 01 	l.addi r18,r0,0x1

  while(i < 32) {
    if((picsr & (0x01L << i)) && (int_handlers[i].handler != 0)) {
    1400:	e2 12 10 08 	l.sll r16,r18,r2
    1404:	e0 70 a0 03 	l.and r3,r16,r20
    1408:	bc 03 00 00 	l.sfeqi r3,0x0
    140c:	10 00 00 0e 	l.bf 1444 <int_main+0x88>
    1410:	9c 42 00 01 	l.addi r2,r2,0x1
    1414:	84 8e 00 00 	l.lwz r4,0x0(r14)
    1418:	bc 04 00 00 	l.sfeqi r4,0x0
    141c:	10 00 00 0b 	l.bf 1448 <int_main+0x8c>
    1420:	bc 22 00 20 	l.sfnei r2,0x20
      (*int_handlers[i].handler)(int_handlers[i].arg); 
    1424:	48 00 20 00 	l.jalr r4
    1428:	84 6e 00 04 	l.lwz r3,0x4(r14)
#ifdef OR1200_INT_CHECK_BIT_CLEARED
      // Ensure PICSR bit is cleared, incase it takes some time for the
      // IRQ line going low to propagate back to PIC
      while (mfspr(SPR_PICSR) & (0x00000001L << i))
#endif
	      mtspr(SPR_PICSR, mfspr(SPR_PICSR) & ~(0x00000001L << i));
    142c:	04 00 00 20 	l.jal 14ac <mfspr>
    1430:	9c 60 48 02 	l.addi r3,r0,0x4802
    1434:	ac 90 ff ff 	l.xori r4,r16,0xffffffff
    1438:	9c 60 48 02 	l.addi r3,r0,0x4802
    143c:	04 00 00 19 	l.jal 14a0 <mtspr>
    1440:	e0 8b 20 03 	l.and r4,r11,r4
  unsigned long picsr = mfspr(SPR_PICSR);
  unsigned long i = 0;

  mtspr(SPR_PICSR, 0);

  while(i < 32) {
    1444:	bc 22 00 20 	l.sfnei r2,0x20
    1448:	13 ff ff ee 	l.bf 1400 <int_main+0x44>
    144c:	9d ce 00 08 	l.addi r14,r14,0x8
#endif
	      mtspr(SPR_PICSR, mfspr(SPR_PICSR) & ~(0x00000001L << i));
    }
    i++;
  }
}
    1450:	9c 21 00 18 	l.addi r1,r1,0x18
    1454:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    1458:	84 41 ff e8 	l.lwz r2,0xffffffe8(r1)
    145c:	85 c1 ff ec 	l.lwz r14,0xffffffec(r1)
    1460:	86 01 ff f0 	l.lwz r16,0xfffffff0(r1)
    1464:	86 41 ff f4 	l.lwz r18,0xfffffff4(r1)
    1468:	44 00 48 00 	l.jr r9
    146c:	86 81 ff f8 	l.lwz r20,0xfffffff8(r1)

00001470 <lo_dmmu_en>:
    1470:	b4 60 00 11 	l.mfspr r3,r0,0x11
    1474:	a8 63 00 20 	l.ori r3,r3,0x20
    1478:	c0 00 18 40 	l.mtspr r0,r3,0x40
    147c:	c0 00 48 20 	l.mtspr r0,r9,0x20
    1480:	24 00 00 00 	l.rfe 
    1484:	15 00 00 00 	l.nop 0x0

00001488 <lo_immu_en>:
    1488:	b4 60 00 11 	l.mfspr r3,r0,0x11
    148c:	a8 63 00 40 	l.ori r3,r3,0x40
    1490:	c0 00 18 40 	l.mtspr r0,r3,0x40
    1494:	c0 00 48 20 	l.mtspr r0,r9,0x20
    1498:	24 00 00 00 	l.rfe 
    149c:	15 00 00 00 	l.nop 0x0

000014a0 <mtspr>:

/* For writing into SPR. */
void 
mtspr(unsigned long spr, unsigned long value)
{	
  asm("l.mtspr\t\t%0,%1,0": : "r" (spr), "r" (value));
    14a0:	c0 03 20 00 	l.mtspr r3,r4,0x0
}
    14a4:	44 00 48 00 	l.jr r9
    14a8:	15 00 00 00 	l.nop 0x0

000014ac <mfspr>:
/* For reading SPR. */
unsigned long 
mfspr(unsigned long spr)
{	
  unsigned long value;
  asm("l.mfspr\t\t%0,%1,0" : "=r" (value) : "r" (spr));
    14ac:	b5 63 00 00 	l.mfspr r11,r3,0x0
  return value;
}
    14b0:	44 00 48 00 	l.jr r9
    14b4:	15 00 00 00 	l.nop 0x0

000014b8 <sim_putc>:

/* Print out a character via simulator */
void 
sim_putc(unsigned char c)
{
    14b8:	a4 63 00 ff 	l.andi r3,r3,0xff
  asm("l.addi\tr3,%0,0": :"r" (c));
    14bc:	9c 63 00 00 	l.addi r3,r3,0x0
  asm("l.nop %0": :"K" (NOP_PUTC));
    14c0:	15 00 00 04 	l.nop 0x4
}
    14c4:	44 00 48 00 	l.jr r9
    14c8:	15 00 00 00 	l.nop 0x0

000014cc <report>:

/* print long */
void 
report(unsigned long value)
{
  asm("l.addi\tr3,%0,0": :"r" (value));
    14cc:	9c 63 00 00 	l.addi r3,r3,0x0
  asm("l.nop %0": :"K" (NOP_REPORT));
    14d0:	15 00 00 02 	l.nop 0x2
}
    14d4:	44 00 48 00 	l.jr r9
    14d8:	15 00 00 00 	l.nop 0x0

000014dc <exit>:

/* Loops/exits simulation */
void 
exit (int i)
{
  asm("l.add r3,r0,%0": : "r" (i));
    14dc:	e0 60 18 00 	l.add r3,r0,r3
  asm("l.nop %0": :"K" (NOP_EXIT));
    14e0:	15 00 00 01 	l.nop 0x1
    14e4:	00 00 00 00 	l.j 14e4 <exit+0x8>
    14e8:	15 00 00 00 	l.nop 0x0

000014ec <cpu_enable_user_interrupts>:
/* For reading SPR. */
unsigned long 
mfspr(unsigned long spr)
{	
  unsigned long value;
  asm("l.mfspr\t\t%0,%1,0" : "=r" (value) : "r" (spr));
    14ec:	9c 60 00 11 	l.addi r3,r0,0x11
    14f0:	b4 83 00 00 	l.mfspr r4,r3,0x0
/* Enable user interrupts */
void
cpu_enable_user_interrupts(void)
{
  /* Enable interrupts in supervisor register */
  mtspr (SPR_SR, mfspr (SPR_SR) | SPR_SR_IEE);
    14f4:	a8 84 00 04 	l.ori r4,r4,0x4

/* For writing into SPR. */
void 
mtspr(unsigned long spr, unsigned long value)
{	
  asm("l.mtspr\t\t%0,%1,0": : "r" (spr), "r" (value));
    14f8:	c0 03 20 00 	l.mtspr r3,r4,0x0
void
cpu_enable_user_interrupts(void)
{
  /* Enable interrupts in supervisor register */
  mtspr (SPR_SR, mfspr (SPR_SR) | SPR_SR_IEE);
}
    14fc:	44 00 48 00 	l.jr r9
    1500:	15 00 00 00 	l.nop 0x0

00001504 <cpu_enable_timer>:

/* For writing into SPR. */
void 
mtspr(unsigned long spr, unsigned long value)
{	
  asm("l.mtspr\t\t%0,%1,0": : "r" (spr), "r" (value));
    1504:	18 80 60 07 	l.movhi r4,0x6007
    1508:	9c 60 50 00 	l.addi r3,r0,0x5000
    150c:	a8 84 a1 20 	l.ori r4,r4,0xa120
    1510:	c0 03 20 00 	l.mtspr r3,r4,0x0
/* For reading SPR. */
unsigned long 
mfspr(unsigned long spr)
{	
  unsigned long value;
  asm("l.mfspr\t\t%0,%1,0" : "=r" (value) : "r" (spr));
    1514:	9c 60 00 11 	l.addi r3,r0,0x11
    1518:	b4 83 00 00 	l.mfspr r4,r3,0x0
/* Enable tick timer and interrupt generation */
void 
cpu_enable_timer(void)
{
  mtspr(SPR_TTMR, SPR_TTMR_IE | SPR_TTMR_RT | ((IN_CLK/TICKS_PER_SEC) & SPR_TTMR_PERIOD));
  mtspr(SPR_SR, SPR_SR_TEE | mfspr(SPR_SR));
    151c:	a8 84 00 02 	l.ori r4,r4,0x2

/* For writing into SPR. */
void 
mtspr(unsigned long spr, unsigned long value)
{	
  asm("l.mtspr\t\t%0,%1,0": : "r" (spr), "r" (value));
    1520:	c0 03 20 00 	l.mtspr r3,r4,0x0
cpu_enable_timer(void)
{
  mtspr(SPR_TTMR, SPR_TTMR_IE | SPR_TTMR_RT | ((IN_CLK/TICKS_PER_SEC) & SPR_TTMR_PERIOD));
  mtspr(SPR_SR, SPR_SR_TEE | mfspr(SPR_SR));

}
    1524:	44 00 48 00 	l.jr r9
    1528:	15 00 00 00 	l.nop 0x0

0000152c <cpu_disable_timer>:

/* Disable tick timer and interrupt generation */
void 
cpu_disable_timer(void)
{
    152c:	d7 e1 17 fc 	l.sw 0xfffffffc(r1),r2
  // Disable timer: clear it all!
  mtspr (SPR_SR, mfspr (SPR_SR) & ~SPR_SR_TEE);
    1530:	9c 40 ff fd 	l.addi r2,r0,0xfffffffd
/* For reading SPR. */
unsigned long 
mfspr(unsigned long spr)
{	
  unsigned long value;
  asm("l.mfspr\t\t%0,%1,0" : "=r" (value) : "r" (spr));
    1534:	9c 60 00 11 	l.addi r3,r0,0x11
}

/* Disable tick timer and interrupt generation */
void 
cpu_disable_timer(void)
{
    1538:	9c 21 ff fc 	l.addi r1,r1,0xfffffffc
/* For reading SPR. */
unsigned long 
mfspr(unsigned long spr)
{	
  unsigned long value;
  asm("l.mfspr\t\t%0,%1,0" : "=r" (value) : "r" (spr));
    153c:	b4 83 00 00 	l.mfspr r4,r3,0x0
/* Disable tick timer and interrupt generation */
void 
cpu_disable_timer(void)
{
  // Disable timer: clear it all!
  mtspr (SPR_SR, mfspr (SPR_SR) & ~SPR_SR_TEE);
    1540:	e0 84 10 03 	l.and r4,r4,r2

/* For writing into SPR. */
void 
mtspr(unsigned long spr, unsigned long value)
{	
  asm("l.mtspr\t\t%0,%1,0": : "r" (spr), "r" (value));
    1544:	c0 03 20 00 	l.mtspr r3,r4,0x0
    1548:	9c 80 00 00 	l.addi r4,r0,0x0
    154c:	9c 60 50 00 	l.addi r3,r0,0x5000
    1550:	c0 03 20 00 	l.mtspr r3,r4,0x0
{
  // Disable timer: clear it all!
  mtspr (SPR_SR, mfspr (SPR_SR) & ~SPR_SR_TEE);
  mtspr(SPR_TTMR, 0);

}
    1554:	9c 21 00 04 	l.addi r1,r1,0x4
    1558:	44 00 48 00 	l.jr r9
    155c:	84 41 ff fc 	l.lwz r2,0xfffffffc(r1)

00001560 <cpu_timer_tick>:

/* Timer increment - called by interrupt routine */
void 
cpu_timer_tick(void)
{
  timer_ticks++;
    1560:	18 60 00 00 	l.movhi r3,0x0
    1564:	a8 63 64 d0 	l.ori r3,r3,0x64d0
    1568:	84 83 00 00 	l.lwz r4,0x0(r3)
    156c:	9c 84 00 01 	l.addi r4,r4,0x1
    1570:	d4 03 20 00 	l.sw 0x0(r3),r4

/* For writing into SPR. */
void 
mtspr(unsigned long spr, unsigned long value)
{	
  asm("l.mtspr\t\t%0,%1,0": : "r" (spr), "r" (value));
    1574:	18 80 60 07 	l.movhi r4,0x6007
    1578:	9c 60 50 00 	l.addi r3,r0,0x5000
    157c:	a8 84 a1 20 	l.ori r4,r4,0xa120
    1580:	c0 03 20 00 	l.mtspr r3,r4,0x0
{
  timer_ticks++;
  // Reset timer mode register to interrupt with same interval
  mtspr(SPR_TTMR, SPR_TTMR_IE | SPR_TTMR_RT | 
	((IN_CLK/TICKS_PER_SEC) & SPR_TTMR_PERIOD));
}
    1584:	44 00 48 00 	l.jr r9
    1588:	15 00 00 00 	l.nop 0x0

0000158c <cpu_reset_timer_ticks>:

/* Reset tick counter */
void 
cpu_reset_timer_ticks(void)
{
  timer_ticks=0;
    158c:	18 60 00 00 	l.movhi r3,0x0
}

/* Reset tick counter */
void 
cpu_reset_timer_ticks(void)
{
    1590:	d7 e1 17 fc 	l.sw 0xfffffffc(r1),r2
  timer_ticks=0;
    1594:	a8 63 64 d0 	l.ori r3,r3,0x64d0
    1598:	9c 40 00 00 	l.addi r2,r0,0x0
}

/* Reset tick counter */
void 
cpu_reset_timer_ticks(void)
{
    159c:	9c 21 ff fc 	l.addi r1,r1,0xfffffffc
  timer_ticks=0;
    15a0:	d4 03 10 00 	l.sw 0x0(r3),r2
}
    15a4:	9c 21 00 04 	l.addi r1,r1,0x4
    15a8:	44 00 48 00 	l.jr r9
    15ac:	84 41 ff fc 	l.lwz r2,0xfffffffc(r1)

000015b0 <cpu_get_timer_ticks>:

/* Get tick counter */
unsigned long 
cpu_get_timer_ticks(void)
{
    15b0:	18 60 00 00 	l.movhi r3,0x0
    15b4:	a8 63 64 d0 	l.ori r3,r3,0x64d0
  return timer_ticks;
}
    15b8:	44 00 48 00 	l.jr r9
    15bc:	85 63 00 00 	l.lwz r11,0x0(r3)

000015c0 <cpu_sleep_10ms>:

/* Wait for 10ms, assumes CLK_HZ is 100, which it usually is.
   Will be slightly inaccurate!*/
void 
cpu_sleep_10ms(void)
{
    15c0:	00 00 00 00 	l.j 15c0 <cpu_sleep_10ms>
    15c4:	15 00 00 00 	l.nop 0x0

000015c8 <_cache_init>:
    15c8:	b4 60 00 01 	l.mfspr r3,r0,0x1
    15cc:	a4 83 00 04 	l.andi r4,r3,0x4
    15d0:	e4 04 00 00 	l.sfeq r4,r0
    15d4:	10 00 00 21 	l.bf 1658 <_cache_init+0x90>
    15d8:	15 00 00 00 	l.nop 0x0
    15dc:	b4 c0 00 11 	l.mfspr r6,r0,0x11
    15e0:	9c a0 ff ff 	l.addi r5,r0,0xffffffff
    15e4:	ac a5 00 10 	l.xori r5,r5,0x10
    15e8:	e0 a6 28 03 	l.and r5,r6,r5
    15ec:	c0 00 28 11 	l.mtspr r0,r5,0x11
    15f0:	b4 60 00 06 	l.mfspr r3,r0,0x6
    15f4:	a4 83 00 80 	l.andi r4,r3,0x80
    15f8:	b8 a4 00 47 	l.srli r5,r4,0x7
    15fc:	a8 c0 00 10 	l.ori r6,r0,0x10
    1600:	e1 c6 28 08 	l.sll r14,r6,r5
    1604:	a4 83 00 78 	l.andi r4,r3,0x78
    1608:	b8 a4 00 43 	l.srli r5,r4,0x3
    160c:	a8 c0 00 01 	l.ori r6,r0,0x1
    1610:	e0 e6 28 08 	l.sll r7,r6,r5
    1614:	9c c0 00 00 	l.addi r6,r0,0x0
    1618:	e0 ae 28 08 	l.sll r5,r14,r5
    161c:	c0 80 30 02 	l.mtspr r0,r6,0x2002
    1620:	e4 26 28 00 	l.sfne r6,r5
    1624:	13 ff ff fe 	l.bf 161c <_cache_init+0x54>
    1628:	e0 c6 70 00 	l.add r6,r6,r14
    162c:	b4 c0 00 11 	l.mfspr r6,r0,0x11
    1630:	a8 c6 00 10 	l.ori r6,r6,0x10
    1634:	c0 00 30 11 	l.mtspr r0,r6,0x11
    1638:	15 00 00 00 	l.nop 0x0
    163c:	15 00 00 00 	l.nop 0x0
    1640:	15 00 00 00 	l.nop 0x0
    1644:	15 00 00 00 	l.nop 0x0
    1648:	15 00 00 00 	l.nop 0x0
    164c:	15 00 00 00 	l.nop 0x0
    1650:	15 00 00 00 	l.nop 0x0
    1654:	15 00 00 00 	l.nop 0x0
    1658:	b4 60 00 01 	l.mfspr r3,r0,0x1
    165c:	a4 83 00 02 	l.andi r4,r3,0x2
    1660:	e4 04 00 00 	l.sfeq r4,r0
    1664:	10 00 00 19 	l.bf 16c8 <_cache_init+0x100>
    1668:	15 00 00 00 	l.nop 0x0
    166c:	b4 c0 00 11 	l.mfspr r6,r0,0x11
    1670:	9c a0 ff ff 	l.addi r5,r0,0xffffffff
    1674:	ac a5 00 08 	l.xori r5,r5,0x8
    1678:	e0 a6 28 03 	l.and r5,r6,r5
    167c:	c0 00 28 11 	l.mtspr r0,r5,0x11
    1680:	b4 60 00 05 	l.mfspr r3,r0,0x5
    1684:	a4 83 00 80 	l.andi r4,r3,0x80
    1688:	b8 a4 00 47 	l.srli r5,r4,0x7
    168c:	a8 c0 00 10 	l.ori r6,r0,0x10
    1690:	e1 c6 28 08 	l.sll r14,r6,r5
    1694:	a4 83 00 78 	l.andi r4,r3,0x78
    1698:	b8 a4 00 43 	l.srli r5,r4,0x3
    169c:	a8 c0 00 01 	l.ori r6,r0,0x1
    16a0:	e0 e6 28 08 	l.sll r7,r6,r5
    16a4:	9c c0 00 00 	l.addi r6,r0,0x0
    16a8:	e0 ae 28 08 	l.sll r5,r14,r5
    16ac:	c0 60 30 03 	l.mtspr r0,r6,0x1803
    16b0:	e4 26 28 00 	l.sfne r6,r5
    16b4:	13 ff ff fe 	l.bf 16ac <_cache_init+0xe4>
    16b8:	e0 c6 70 00 	l.add r6,r6,r14
    16bc:	b4 c0 00 11 	l.mfspr r6,r0,0x11
    16c0:	a8 c6 00 08 	l.ori r6,r6,0x8
    16c4:	c0 00 30 11 	l.mtspr r0,r6,0x11
    16c8:	44 00 48 00 	l.jr r9
    16cc:	15 00 00 00 	l.nop 0x0

000016d0 <uart_init>:
void uart_init(int core)
{
        int divisor;
	float float_divisor;
        /* Reset receiver and transmiter */
        REG8(UART_BASE_ADR[core] + UART_FCR) = UART_FCR_ENABLE_FIFO | UART_FCR_CLEAR_RCVR | UART_FCR_CLEAR_XMIT | UART_FCR_TRIGGER_14;
    16d0:	18 80 00 00 	l.movhi r4,0x0
    16d4:	b8 63 00 02 	l.slli r3,r3,0x2
    16d8:	a8 84 5e c4 	l.ori r4,r4,0x5ec4

char tx_buff[UART_TX_BUFF_LEN];
volatile int tx_level, rx_level;

void uart_init(int core)
{
    16dc:	d7 e1 17 f0 	l.sw 0xfffffff0(r1),r2
 
        /* Set 8 bit char, 1 stop bit, no parity */
        REG8(UART_BASE_ADR[core] + UART_LCR) = UART_LCR_WLEN8 & ~(UART_LCR_STOP | UART_LCR_PARITY);
 
        /* Set baud rate */
	float_divisor = (float) IN_CLK/(16 * UART_BAUDS[core]);
    16e0:	18 a0 00 00 	l.movhi r5,0x0
void uart_init(int core)
{
        int divisor;
	float float_divisor;
        /* Reset receiver and transmiter */
        REG8(UART_BASE_ADR[core] + UART_FCR) = UART_FCR_ENABLE_FIFO | UART_FCR_CLEAR_RCVR | UART_FCR_CLEAR_XMIT | UART_FCR_TRIGGER_14;
    16e4:	e0 43 20 00 	l.add r2,r3,r4

char tx_buff[UART_TX_BUFF_LEN];
volatile int tx_level, rx_level;

void uart_init(int core)
{
    16e8:	d7 e1 77 f4 	l.sw 0xfffffff4(r1),r14
 
        /* Set 8 bit char, 1 stop bit, no parity */
        REG8(UART_BASE_ADR[core] + UART_LCR) = UART_LCR_WLEN8 & ~(UART_LCR_STOP | UART_LCR_PARITY);
 
        /* Set baud rate */
	float_divisor = (float) IN_CLK/(16 * UART_BAUDS[core]);
    16ec:	a8 a5 5e c8 	l.ori r5,r5,0x5ec8
void uart_init(int core)
{
        int divisor;
	float float_divisor;
        /* Reset receiver and transmiter */
        REG8(UART_BASE_ADR[core] + UART_FCR) = UART_FCR_ENABLE_FIFO | UART_FCR_CLEAR_RCVR | UART_FCR_CLEAR_XMIT | UART_FCR_TRIGGER_14;
    16f0:	85 c2 00 00 	l.lwz r14,0x0(r2)
 
        /* Set 8 bit char, 1 stop bit, no parity */
        REG8(UART_BASE_ADR[core] + UART_LCR) = UART_LCR_WLEN8 & ~(UART_LCR_STOP | UART_LCR_PARITY);
 
        /* Set baud rate */
	float_divisor = (float) IN_CLK/(16 * UART_BAUDS[core]);
    16f4:	e0 63 28 00 	l.add r3,r3,r5
void uart_init(int core)
{
        int divisor;
	float float_divisor;
        /* Reset receiver and transmiter */
        REG8(UART_BASE_ADR[core] + UART_FCR) = UART_FCR_ENABLE_FIFO | UART_FCR_CLEAR_RCVR | UART_FCR_CLEAR_XMIT | UART_FCR_TRIGGER_14;
    16f8:	9c 8e 00 02 	l.addi r4,r14,0x2
    16fc:	9c a0 ff c7 	l.addi r5,r0,0xffffffc7

char tx_buff[UART_TX_BUFF_LEN];
volatile int tx_level, rx_level;

void uart_init(int core)
{
    1700:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
    1704:	d7 e1 87 f8 	l.sw 0xfffffff8(r1),r16
        int divisor;
	float float_divisor;
        /* Reset receiver and transmiter */
        REG8(UART_BASE_ADR[core] + UART_FCR) = UART_FCR_ENABLE_FIFO | UART_FCR_CLEAR_RCVR | UART_FCR_CLEAR_XMIT | UART_FCR_TRIGGER_14;
    1708:	d8 04 28 00 	l.sb 0x0(r4),r5
 
        /* Disable all interrupts */
        REG8(UART_BASE_ADR[core] + UART_IER) = 0x00;
    170c:	9e 0e 00 01 	l.addi r16,r14,0x1
    1710:	9c 80 00 00 	l.addi r4,r0,0x0
 
        /* Set 8 bit char, 1 stop bit, no parity */
        REG8(UART_BASE_ADR[core] + UART_LCR) = UART_LCR_WLEN8 & ~(UART_LCR_STOP | UART_LCR_PARITY);
 
        /* Set baud rate */
	float_divisor = (float) IN_CLK/(16 * UART_BAUDS[core]);
    1714:	84 63 00 00 	l.lwz r3,0x0(r3)
 
        /* Disable all interrupts */
        REG8(UART_BASE_ADR[core] + UART_IER) = 0x00;
 
        /* Set 8 bit char, 1 stop bit, no parity */
        REG8(UART_BASE_ADR[core] + UART_LCR) = UART_LCR_WLEN8 & ~(UART_LCR_STOP | UART_LCR_PARITY);
    1718:	9c 4e 00 03 	l.addi r2,r14,0x3
    171c:	9c a0 00 03 	l.addi r5,r0,0x3
	float float_divisor;
        /* Reset receiver and transmiter */
        REG8(UART_BASE_ADR[core] + UART_FCR) = UART_FCR_ENABLE_FIFO | UART_FCR_CLEAR_RCVR | UART_FCR_CLEAR_XMIT | UART_FCR_TRIGGER_14;
 
        /* Disable all interrupts */
        REG8(UART_BASE_ADR[core] + UART_IER) = 0x00;
    1720:	d8 10 20 00 	l.sb 0x0(r16),r4
 
        /* Set 8 bit char, 1 stop bit, no parity */
        REG8(UART_BASE_ADR[core] + UART_LCR) = UART_LCR_WLEN8 & ~(UART_LCR_STOP | UART_LCR_PARITY);
 
        /* Set baud rate */
	float_divisor = (float) IN_CLK/(16 * UART_BAUDS[core]);
    1724:	b8 63 00 04 	l.slli r3,r3,0x4

char tx_buff[UART_TX_BUFF_LEN];
volatile int tx_level, rx_level;

void uart_init(int core)
{
    1728:	9c 21 ff f0 	l.addi r1,r1,0xfffffff0
 
        /* Disable all interrupts */
        REG8(UART_BASE_ADR[core] + UART_IER) = 0x00;
 
        /* Set 8 bit char, 1 stop bit, no parity */
        REG8(UART_BASE_ADR[core] + UART_LCR) = UART_LCR_WLEN8 & ~(UART_LCR_STOP | UART_LCR_PARITY);
    172c:	d8 02 28 00 	l.sb 0x0(r2),r5
 
        /* Set baud rate */
	float_divisor = (float) IN_CLK/(16 * UART_BAUDS[core]);
    1730:	04 00 0a 0e 	l.jal 3f68 <__floatsisf>
    1734:	15 00 00 00 	l.nop 0x0
    1738:	18 60 00 00 	l.movhi r3,0x0
    173c:	a8 8b 00 00 	l.ori r4,r11,0x0
    1740:	a8 63 62 a0 	l.ori r3,r3,0x62a0
    1744:	04 00 08 89 	l.jal 3968 <__divsf3>
    1748:	84 63 00 00 	l.lwz r3,0x0(r3)
	float_divisor += 0.50f; // Ensure round up
    174c:	18 80 00 00 	l.movhi r4,0x0
    1750:	a8 6b 00 00 	l.ori r3,r11,0x0
    1754:	a8 84 62 a4 	l.ori r4,r4,0x62a4
    1758:	04 00 07 c1 	l.jal 365c <__addsf3>
    175c:	84 84 00 00 	l.lwz r4,0x0(r4)
        divisor = (int) float_divisor;
    1760:	04 00 0a 69 	l.jal 4104 <__fixsfsi>
    1764:	a8 6b 00 00 	l.ori r3,r11,0x0
	
        REG8(UART_BASE_ADR[core] + UART_LCR) |= UART_LCR_DLAB;
    1768:	8c 82 00 00 	l.lbz r4,0x0(r2)
        REG8(UART_BASE_ADR[core] + UART_DLL) = divisor & 0x000000ff;
        REG8(UART_BASE_ADR[core] + UART_DLM) = (divisor >> 8) & 0x000000ff;
    176c:	b8 6b 00 88 	l.srai r3,r11,0x8
        /* Set baud rate */
	float_divisor = (float) IN_CLK/(16 * UART_BAUDS[core]);
	float_divisor += 0.50f; // Ensure round up
        divisor = (int) float_divisor;
	
        REG8(UART_BASE_ADR[core] + UART_LCR) |= UART_LCR_DLAB;
    1770:	a8 84 00 80 	l.ori r4,r4,0x80
        REG8(UART_BASE_ADR[core] + UART_DLL) = divisor & 0x000000ff;
    1774:	a5 6b 00 ff 	l.andi r11,r11,0xff
        /* Set baud rate */
	float_divisor = (float) IN_CLK/(16 * UART_BAUDS[core]);
	float_divisor += 0.50f; // Ensure round up
        divisor = (int) float_divisor;
	
        REG8(UART_BASE_ADR[core] + UART_LCR) |= UART_LCR_DLAB;
    1778:	d8 02 20 00 	l.sb 0x0(r2),r4
        REG8(UART_BASE_ADR[core] + UART_DLL) = divisor & 0x000000ff;
        REG8(UART_BASE_ADR[core] + UART_DLM) = (divisor >> 8) & 0x000000ff;
    177c:	a4 63 00 ff 	l.andi r3,r3,0xff
	float_divisor = (float) IN_CLK/(16 * UART_BAUDS[core]);
	float_divisor += 0.50f; // Ensure round up
        divisor = (int) float_divisor;
	
        REG8(UART_BASE_ADR[core] + UART_LCR) |= UART_LCR_DLAB;
        REG8(UART_BASE_ADR[core] + UART_DLL) = divisor & 0x000000ff;
    1780:	d8 0e 58 00 	l.sb 0x0(r14),r11
        REG8(UART_BASE_ADR[core] + UART_DLM) = (divisor >> 8) & 0x000000ff;
    1784:	d8 10 18 00 	l.sb 0x0(r16),r3
        REG8(UART_BASE_ADR[core] + UART_LCR) &= ~(UART_LCR_DLAB);
    1788:	8c 62 00 00 	l.lbz r3,0x0(r2)
    178c:	a4 63 00 7f 	l.andi r3,r3,0x7f
    1790:	d8 02 18 00 	l.sb 0x0(r2),r3
 
        return;
}
    1794:	9c 21 00 10 	l.addi r1,r1,0x10
    1798:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    179c:	84 41 ff f0 	l.lwz r2,0xfffffff0(r1)
    17a0:	85 c1 ff f4 	l.lwz r14,0xfffffff4(r1)
    17a4:	44 00 48 00 	l.jr r9
    17a8:	86 01 ff f8 	l.lwz r16,0xfffffff8(r1)

000017ac <uart_putc>:

void uart_putc(int core, char c)
{
    17ac:	d7 e1 17 fc 	l.sw 0xfffffffc(r1),r2
    17b0:	18 40 00 00 	l.movhi r2,0x0
    17b4:	b8 63 00 02 	l.slli r3,r3,0x2
    17b8:	a8 42 5e c4 	l.ori r2,r2,0x5ec4
    17bc:	b8 84 00 18 	l.slli r4,r4,0x18
    17c0:	e0 63 10 00 	l.add r3,r3,r2
    17c4:	9c 21 ff fc 	l.addi r1,r1,0xfffffffc
    17c8:	84 a3 00 00 	l.lwz r5,0x0(r3)
    17cc:	b8 c4 00 98 	l.srai r6,r4,0x18
    17d0:	9c 65 00 05 	l.addi r3,r5,0x5
        unsigned char lsr;
        
        WAIT_FOR_THRE(core);
    17d4:	8c 83 00 00 	l.lbz r4,0x0(r3)
    17d8:	a4 84 00 20 	l.andi r4,r4,0x20
    17dc:	bc 04 00 00 	l.sfeqi r4,0x0
    17e0:	13 ff ff fd 	l.bf 17d4 <uart_putc+0x28>
    17e4:	a4 86 00 ff 	l.andi r4,r6,0xff
        REG8(UART_BASE_ADR[core] + UART_TX) = c;
        if(c == '\n') {
    17e8:	bc 26 00 0a 	l.sfnei r6,0xa
void uart_putc(int core, char c)
{
        unsigned char lsr;
        
        WAIT_FOR_THRE(core);
        REG8(UART_BASE_ADR[core] + UART_TX) = c;
    17ec:	d8 05 20 00 	l.sb 0x0(r5),r4
        if(c == '\n') {
    17f0:	0c 00 00 0a 	l.bnf 1818 <uart_putc+0x6c>
    17f4:	15 00 00 00 	l.nop 0x0
          WAIT_FOR_THRE(core);
          REG8(UART_BASE_ADR[core] + UART_TX) = '\r';
        }
        WAIT_FOR_XMITR(core);
    17f8:	8c 83 00 00 	l.lbz r4,0x0(r3)
    17fc:	a4 84 00 60 	l.andi r4,r4,0x60
    1800:	bc 24 00 60 	l.sfnei r4,0x60
    1804:	13 ff ff fd 	l.bf 17f8 <uart_putc+0x4c>
    1808:	15 00 00 00 	l.nop 0x0
}
    180c:	9c 21 00 04 	l.addi r1,r1,0x4
    1810:	44 00 48 00 	l.jr r9
    1814:	84 41 ff fc 	l.lwz r2,0xfffffffc(r1)
        unsigned char lsr;
        
        WAIT_FOR_THRE(core);
        REG8(UART_BASE_ADR[core] + UART_TX) = c;
        if(c == '\n') {
          WAIT_FOR_THRE(core);
    1818:	8c 83 00 00 	l.lbz r4,0x0(r3)
    181c:	a4 84 00 20 	l.andi r4,r4,0x20
    1820:	bc 04 00 00 	l.sfeqi r4,0x0
    1824:	13 ff ff fd 	l.bf 1818 <uart_putc+0x6c>
    1828:	9c 40 00 0d 	l.addi r2,r0,0xd
          REG8(UART_BASE_ADR[core] + UART_TX) = '\r';
    182c:	d8 05 10 00 	l.sb 0x0(r5),r2
    1830:	03 ff ff f2 	l.j 17f8 <uart_putc+0x4c>
    1834:	15 00 00 00 	l.nop 0x0

00001838 <uart_putc_noblock>:
        WAIT_FOR_XMITR(core);
}

// Only used when we know THRE is empty, typically in interrupt
void uart_putc_noblock(int core, char c)
{
    1838:	d7 e1 17 fc 	l.sw 0xfffffffc(r1),r2
  REG8(UART_BASE_ADR[core] + UART_TX) = c;
    183c:	18 40 00 00 	l.movhi r2,0x0
    1840:	b8 63 00 02 	l.slli r3,r3,0x2
    1844:	a8 42 5e c4 	l.ori r2,r2,0x5ec4
    1848:	a4 84 00 ff 	l.andi r4,r4,0xff
    184c:	e0 63 10 00 	l.add r3,r3,r2
        WAIT_FOR_XMITR(core);
}

// Only used when we know THRE is empty, typically in interrupt
void uart_putc_noblock(int core, char c)
{
    1850:	9c 21 ff fc 	l.addi r1,r1,0xfffffffc
  REG8(UART_BASE_ADR[core] + UART_TX) = c;
    1854:	84 63 00 00 	l.lwz r3,0x0(r3)
    1858:	d8 03 20 00 	l.sb 0x0(r3),r4
}
    185c:	9c 21 00 04 	l.addi r1,r1,0x4
    1860:	44 00 48 00 	l.jr r9
    1864:	84 41 ff fc 	l.lwz r2,0xfffffffc(r1)

00001868 <uart_getc>:


char uart_getc(int core)
{
    1868:	d7 e1 17 fc 	l.sw 0xfffffffc(r1),r2
    186c:	18 40 00 00 	l.movhi r2,0x0
    1870:	b8 63 00 02 	l.slli r3,r3,0x2
    1874:	a8 42 5e c4 	l.ori r2,r2,0x5ec4
    1878:	9c 21 ff fc 	l.addi r1,r1,0xfffffffc
    187c:	e0 63 10 00 	l.add r3,r3,r2
    1880:	84 a3 00 00 	l.lwz r5,0x0(r3)
    1884:	9c 85 00 05 	l.addi r4,r5,0x5
        unsigned char lsr;
        char c;

        WAIT_FOR_CHAR(core);
    1888:	8c 64 00 00 	l.lbz r3,0x0(r4)
    188c:	a4 63 00 01 	l.andi r3,r3,0x1
    1890:	bc 03 00 00 	l.sfeqi r3,0x0
    1894:	13 ff ff fd 	l.bf 1888 <uart_getc+0x20>
    1898:	15 00 00 00 	l.nop 0x0
        c = REG8(UART_BASE_ADR[core] + UART_RX);
    189c:	8d 65 00 00 	l.lbz r11,0x0(r5)
    18a0:	b9 6b 00 18 	l.slli r11,r11,0x18
        return c;
}
    18a4:	9c 21 00 04 	l.addi r1,r1,0x4
    18a8:	b9 6b 00 98 	l.srai r11,r11,0x18
    18ac:	44 00 48 00 	l.jr r9
    18b0:	84 41 ff fc 	l.lwz r2,0xfffffffc(r1)

000018b4 <uart_check_for_char>:

int uart_check_for_char(int core)
{
    18b4:	d7 e1 17 fc 	l.sw 0xfffffffc(r1),r2
  return CHECK_FOR_CHAR(core);
    18b8:	18 40 00 00 	l.movhi r2,0x0
    18bc:	b8 63 00 02 	l.slli r3,r3,0x2
    18c0:	a8 42 5e c4 	l.ori r2,r2,0x5ec4
        c = REG8(UART_BASE_ADR[core] + UART_RX);
        return c;
}

int uart_check_for_char(int core)
{
    18c4:	9c 21 ff fc 	l.addi r1,r1,0xfffffffc
  return CHECK_FOR_CHAR(core);
    18c8:	e0 63 10 00 	l.add r3,r3,r2
    18cc:	84 63 00 00 	l.lwz r3,0x0(r3)
    18d0:	9c 63 00 05 	l.addi r3,r3,0x5
    18d4:	8d 63 00 00 	l.lbz r11,0x0(r3)
}
    18d8:	9c 21 00 04 	l.addi r1,r1,0x4
    18dc:	a5 6b 00 01 	l.andi r11,r11,0x1
    18e0:	44 00 48 00 	l.jr r9
    18e4:	84 41 ff fc 	l.lwz r2,0xfffffffc(r1)

000018e8 <uart_rxint_enable>:
    
void uart_rxint_enable(int core)
{
    18e8:	d7 e1 17 fc 	l.sw 0xfffffffc(r1),r2
  REG8(UART_BASE_ADR[core] + UART_IER) |= UART_IER_RDI;
    18ec:	18 40 00 00 	l.movhi r2,0x0
    18f0:	b8 63 00 02 	l.slli r3,r3,0x2
    18f4:	a8 42 5e c4 	l.ori r2,r2,0x5ec4
{
  return CHECK_FOR_CHAR(core);
}
    
void uart_rxint_enable(int core)
{
    18f8:	9c 21 ff fc 	l.addi r1,r1,0xfffffffc
  REG8(UART_BASE_ADR[core] + UART_IER) |= UART_IER_RDI;
    18fc:	e0 63 10 00 	l.add r3,r3,r2
    1900:	84 63 00 00 	l.lwz r3,0x0(r3)
    1904:	9c 63 00 01 	l.addi r3,r3,0x1
    1908:	8c 83 00 00 	l.lbz r4,0x0(r3)
    190c:	a8 84 00 01 	l.ori r4,r4,0x1
    1910:	d8 03 20 00 	l.sb 0x0(r3),r4
}
    1914:	9c 21 00 04 	l.addi r1,r1,0x4
    1918:	44 00 48 00 	l.jr r9
    191c:	84 41 ff fc 	l.lwz r2,0xfffffffc(r1)

00001920 <uart_rxint_disable>:

void uart_rxint_disable(int core)
{
    1920:	d7 e1 17 fc 	l.sw 0xfffffffc(r1),r2
  REG8(UART_BASE_ADR[core] + UART_IER) &= ~(UART_IER_RDI);
    1924:	18 40 00 00 	l.movhi r2,0x0
    1928:	b8 63 00 02 	l.slli r3,r3,0x2
    192c:	a8 42 5e c4 	l.ori r2,r2,0x5ec4
{
  REG8(UART_BASE_ADR[core] + UART_IER) |= UART_IER_RDI;
}

void uart_rxint_disable(int core)
{
    1930:	9c 21 ff fc 	l.addi r1,r1,0xfffffffc
  REG8(UART_BASE_ADR[core] + UART_IER) &= ~(UART_IER_RDI);
    1934:	e0 63 10 00 	l.add r3,r3,r2
    1938:	84 63 00 00 	l.lwz r3,0x0(r3)
    193c:	9c 63 00 01 	l.addi r3,r3,0x1
    1940:	8c 83 00 00 	l.lbz r4,0x0(r3)
    1944:	a4 84 00 fe 	l.andi r4,r4,0xfe
    1948:	d8 03 20 00 	l.sb 0x0(r3),r4
}
    194c:	9c 21 00 04 	l.addi r1,r1,0x4
    1950:	44 00 48 00 	l.jr r9
    1954:	84 41 ff fc 	l.lwz r2,0xfffffffc(r1)

00001958 <uart_txint_enable>:

void uart_txint_enable(int core)
{
    1958:	d7 e1 17 fc 	l.sw 0xfffffffc(r1),r2
  REG8(UART_BASE_ADR[core] + UART_IER) |= UART_IER_THRI;
    195c:	18 40 00 00 	l.movhi r2,0x0
    1960:	b8 63 00 02 	l.slli r3,r3,0x2
    1964:	a8 42 5e c4 	l.ori r2,r2,0x5ec4
{
  REG8(UART_BASE_ADR[core] + UART_IER) &= ~(UART_IER_RDI);
}

void uart_txint_enable(int core)
{
    1968:	9c 21 ff fc 	l.addi r1,r1,0xfffffffc
  REG8(UART_BASE_ADR[core] + UART_IER) |= UART_IER_THRI;
    196c:	e0 63 10 00 	l.add r3,r3,r2
    1970:	84 63 00 00 	l.lwz r3,0x0(r3)
    1974:	9c 63 00 01 	l.addi r3,r3,0x1
    1978:	8c 83 00 00 	l.lbz r4,0x0(r3)
    197c:	a8 84 00 02 	l.ori r4,r4,0x2
    1980:	d8 03 20 00 	l.sb 0x0(r3),r4
}
    1984:	9c 21 00 04 	l.addi r1,r1,0x4
    1988:	44 00 48 00 	l.jr r9
    198c:	84 41 ff fc 	l.lwz r2,0xfffffffc(r1)

00001990 <uart_txint_disable>:

void uart_txint_disable(int core)
{
    1990:	d7 e1 17 fc 	l.sw 0xfffffffc(r1),r2
  REG8(UART_BASE_ADR[core] + UART_IER) &= ~(UART_IER_THRI);
    1994:	18 40 00 00 	l.movhi r2,0x0
    1998:	b8 63 00 02 	l.slli r3,r3,0x2
    199c:	a8 42 5e c4 	l.ori r2,r2,0x5ec4
{
  REG8(UART_BASE_ADR[core] + UART_IER) |= UART_IER_THRI;
}

void uart_txint_disable(int core)
{
    19a0:	9c 21 ff fc 	l.addi r1,r1,0xfffffffc
  REG8(UART_BASE_ADR[core] + UART_IER) &= ~(UART_IER_THRI);
    19a4:	e0 63 10 00 	l.add r3,r3,r2
    19a8:	84 63 00 00 	l.lwz r3,0x0(r3)
    19ac:	9c 63 00 01 	l.addi r3,r3,0x1
    19b0:	8c 83 00 00 	l.lbz r4,0x0(r3)
    19b4:	a4 84 00 fd 	l.andi r4,r4,0xfd
    19b8:	d8 03 20 00 	l.sb 0x0(r3),r4
}
    19bc:	9c 21 00 04 	l.addi r1,r1,0x4
    19c0:	44 00 48 00 	l.jr r9
    19c4:	84 41 ff fc 	l.lwz r2,0xfffffffc(r1)

000019c8 <uart_get_iir>:

char uart_get_iir(int core)
{
    19c8:	d7 e1 17 fc 	l.sw 0xfffffffc(r1),r2
  return REG8(UART_BASE_ADR[core] + UART_IIR);
    19cc:	18 40 00 00 	l.movhi r2,0x0
    19d0:	b8 63 00 02 	l.slli r3,r3,0x2
    19d4:	a8 42 5e c4 	l.ori r2,r2,0x5ec4
{
  REG8(UART_BASE_ADR[core] + UART_IER) &= ~(UART_IER_THRI);
}

char uart_get_iir(int core)
{
    19d8:	9c 21 ff fc 	l.addi r1,r1,0xfffffffc
  return REG8(UART_BASE_ADR[core] + UART_IIR);
    19dc:	e0 63 10 00 	l.add r3,r3,r2
    19e0:	84 63 00 00 	l.lwz r3,0x0(r3)
    19e4:	9c 63 00 02 	l.addi r3,r3,0x2
    19e8:	8d 63 00 00 	l.lbz r11,0x0(r3)
    19ec:	b9 6b 00 18 	l.slli r11,r11,0x18
}
    19f0:	9c 21 00 04 	l.addi r1,r1,0x4
    19f4:	b9 6b 00 98 	l.srai r11,r11,0x18
    19f8:	44 00 48 00 	l.jr r9
    19fc:	84 41 ff fc 	l.lwz r2,0xfffffffc(r1)

00001a00 <uart_get_lsr>:


char uart_get_lsr(int core)
{
    1a00:	d7 e1 17 fc 	l.sw 0xfffffffc(r1),r2
  return REG8(UART_BASE_ADR[core] + UART_LSR);
    1a04:	18 40 00 00 	l.movhi r2,0x0
    1a08:	b8 63 00 02 	l.slli r3,r3,0x2
    1a0c:	a8 42 5e c4 	l.ori r2,r2,0x5ec4
  return REG8(UART_BASE_ADR[core] + UART_IIR);
}


char uart_get_lsr(int core)
{
    1a10:	9c 21 ff fc 	l.addi r1,r1,0xfffffffc
  return REG8(UART_BASE_ADR[core] + UART_LSR);
    1a14:	e0 63 10 00 	l.add r3,r3,r2
    1a18:	84 63 00 00 	l.lwz r3,0x0(r3)
    1a1c:	9c 63 00 05 	l.addi r3,r3,0x5
    1a20:	8d 63 00 00 	l.lbz r11,0x0(r3)
    1a24:	b9 6b 00 18 	l.slli r11,r11,0x18
}
    1a28:	9c 21 00 04 	l.addi r1,r1,0x4
    1a2c:	b9 6b 00 98 	l.srai r11,r11,0x18
    1a30:	44 00 48 00 	l.jr r9
    1a34:	84 41 ff fc 	l.lwz r2,0xfffffffc(r1)

00001a38 <uart_get_msr>:


char uart_get_msr(int core)
{
    1a38:	d7 e1 17 fc 	l.sw 0xfffffffc(r1),r2
  return REG8(UART_BASE_ADR[core] + UART_MSR);
    1a3c:	18 40 00 00 	l.movhi r2,0x0
    1a40:	b8 63 00 02 	l.slli r3,r3,0x2
    1a44:	a8 42 5e c4 	l.ori r2,r2,0x5ec4
  return REG8(UART_BASE_ADR[core] + UART_LSR);
}


char uart_get_msr(int core)
{
    1a48:	9c 21 ff fc 	l.addi r1,r1,0xfffffffc
  return REG8(UART_BASE_ADR[core] + UART_MSR);
    1a4c:	e0 63 10 00 	l.add r3,r3,r2
    1a50:	84 63 00 00 	l.lwz r3,0x0(r3)
    1a54:	9c 63 00 06 	l.addi r3,r3,0x6
    1a58:	8d 63 00 00 	l.lbz r11,0x0(r3)
    1a5c:	b9 6b 00 18 	l.slli r11,r11,0x18
}
    1a60:	9c 21 00 04 	l.addi r1,r1,0x4
    1a64:	b9 6b 00 98 	l.srai r11,r11,0x18
    1a68:	44 00 48 00 	l.jr r9
    1a6c:	84 41 ff fc 	l.lwz r2,0xfffffffc(r1)

00001a70 <print_back_to_string>:

// Function which prints back to the buffer, ptr, len bytes
// returns 1 if it should finish up, otherwise 0 to continue
int 
print_back_to_string(char * ptr, int len, size_t * n, int * ret, char ** stream)
{
    1a70:	d7 e1 17 f0 	l.sw 0xfffffff0(r1),r2
#define MIN(a, b) ((a) < (b) ? (a) : (b))
  do {
    int length = MIN( (int) len, *n - *ret - 1);
    1a74:	84 45 00 00 	l.lwz r2,0x0(r5)
    1a78:	84 a6 00 00 	l.lwz r5,0x0(r6)
    1a7c:	9c 42 ff ff 	l.addi r2,r2,0xffffffff

// Function which prints back to the buffer, ptr, len bytes
// returns 1 if it should finish up, otherwise 0 to continue
int 
print_back_to_string(char * ptr, int len, size_t * n, int * ret, char ** stream)
{
    1a80:	d7 e1 77 f4 	l.sw 0xfffffff4(r1),r14
    1a84:	d7 e1 87 f8 	l.sw 0xfffffff8(r1),r16
    1a88:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
    1a8c:	aa 04 00 00 	l.ori r16,r4,0x0
#define MIN(a, b) ((a) < (b) ? (a) : (b))
  do {
    int length = MIN( (int) len, *n - *ret - 1);
    1a90:	e0 42 28 02 	l.sub r2,r2,r5

// Function which prints back to the buffer, ptr, len bytes
// returns 1 if it should finish up, otherwise 0 to continue
int 
print_back_to_string(char * ptr, int len, size_t * n, int * ret, char ** stream)
{
    1a94:	9c 21 ff f0 	l.addi r1,r1,0xfffffff0
    1a98:	a9 c6 00 00 	l.ori r14,r6,0x0
#define MIN(a, b) ((a) < (b) ? (a) : (b))
  do {
    int length = MIN( (int) len, *n - *ret - 1);
    1a9c:	e4 a2 80 00 	l.sfleu r2,r16
    1aa0:	10 00 00 03 	l.bf 1aac <print_back_to_string+0x3c>
    1aa4:	a8 83 00 00 	l.ori r4,r3,0x0
    1aa8:	a8 50 00 00 	l.ori r2,r16,0x0
    memcpy(*stream + *ret, ptr, length);
    1aac:	84 67 00 00 	l.lwz r3,0x0(r7)
    1ab0:	e0 63 28 00 	l.add r3,r3,r5
    1ab4:	04 00 03 b2 	l.jal 297c <memcpy>
    1ab8:	a8 a2 00 00 	l.ori r5,r2,0x0
    if (length < (int)len) {
    1abc:	e5 b0 10 00 	l.sfles r16,r2
    1ac0:	10 00 00 06 	l.bf 1ad8 <print_back_to_string+0x68>
    1ac4:	9d 60 00 00 	l.addi r11,r0,0x0
      *ret += length;
    1ac8:	84 6e 00 00 	l.lwz r3,0x0(r14)
      return 1; // finish up
    1acc:	9d 60 00 01 	l.addi r11,r0,0x1
#define MIN(a, b) ((a) < (b) ? (a) : (b))
  do {
    int length = MIN( (int) len, *n - *ret - 1);
    memcpy(*stream + *ret, ptr, length);
    if (length < (int)len) {
      *ret += length;
    1ad0:	e0 43 10 00 	l.add r2,r3,r2
    1ad4:	d4 0e 10 00 	l.sw 0x0(r14),r2
    }

  } while(0);
    
    return 0;
}
    1ad8:	9c 21 00 10 	l.addi r1,r1,0x10
    1adc:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    1ae0:	84 41 ff f0 	l.lwz r2,0xfffffff0(r1)
    1ae4:	85 c1 ff f4 	l.lwz r14,0xfffffff4(r1)
    1ae8:	44 00 48 00 	l.jr r9
    1aec:	86 01 ff f8 	l.lwz r16,0xfffffff8(r1)

00001af0 <vfnprintf>:

//externC int 
int
//vfnprintf ( FILE *stream, size_t n, const char *format, va_list arg) __THROW
vfnprintf ( char *stream, size_t n, const char *format, va_list arg)
{
    1af0:	d7 e1 17 d4 	l.sw 0xffffffd4(r1),r2
    1af4:	d7 e1 77 d8 	l.sw 0xffffffd8(r1),r14
    1af8:	d7 e1 97 e0 	l.sw 0xffffffe0(r1),r18
    1afc:	d7 e1 a7 e4 	l.sw 0xffffffe4(r1),r20
    1b00:	d7 e1 e7 f4 	l.sw 0xfffffff4(r1),r28
    1b04:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
    1b08:	d7 e1 87 dc 	l.sw 0xffffffdc(r1),r16
    1b0c:	d7 e1 b7 e8 	l.sw 0xffffffe8(r1),r22
    1b10:	d7 e1 c7 ec 	l.sw 0xffffffec(r1),r24
    1b14:	d7 e1 d7 f0 	l.sw 0xfffffff0(r1),r26
    1b18:	d7 e1 f7 f8 	l.sw 0xfffffff8(r1),r30
    1b1c:	9c 21 ff 80 	l.addi r1,r1,0xffffff80
   (unsigned long)va_arg(arg, unsigned int))

  
  xdigs = (char *) NULL;  // stop compiler whinging
  fmt = (char *)format;
  ret = 0;
    1b20:	9c 40 00 00 	l.addi r2,r0,0x0

//externC int 
int
//vfnprintf ( FILE *stream, size_t n, const char *format, va_list arg) __THROW
vfnprintf ( char *stream, size_t n, const char *format, va_list arg)
{
    1b24:	d4 01 18 20 	l.sw 0x20(r1),r3
   flags&SHORTINT ? (unsigned long)(unsigned short)va_arg(arg, int) :	\
   flags&SIZET ? va_arg(arg, size_t) :					\
   (unsigned long)va_arg(arg, unsigned int))

  
  xdigs = (char *) NULL;  // stop compiler whinging
    1b28:	9c 60 00 00 	l.addi r3,r0,0x0
  fmt = (char *)format;
  ret = 0;
    1b2c:	d4 01 10 4c 	l.sw 0x4c(r1),r2

//externC int 
int
//vfnprintf ( FILE *stream, size_t n, const char *format, va_list arg) __THROW
vfnprintf ( char *stream, size_t n, const char *format, va_list arg)
{
    1b30:	d4 01 20 1c 	l.sw 0x1c(r1),r4
    1b34:	ab 86 00 00 	l.ori r28,r6,0x0
   flags&SIZET ? va_arg(arg, size_t) :					\
   (unsigned long)va_arg(arg, unsigned int))

  
  xdigs = (char *) NULL;  // stop compiler whinging
  fmt = (char *)format;
    1b38:	a8 45 00 00 	l.ori r2,r5,0x0
   flags&SHORTINT ? (unsigned long)(unsigned short)va_arg(arg, int) :	\
   flags&SIZET ? va_arg(arg, size_t) :					\
   (unsigned long)va_arg(arg, unsigned int))

  
  xdigs = (char *) NULL;  // stop compiler whinging
    1b3c:	d4 01 18 18 	l.sw 0x18(r1),r3
	break;
      }
    }
    if ((y = fmt - cp) != 0) { // y is length of string to copy out just now
      //PRINT(cp, y); // Copy macro 
      if(print_back_to_string(cp, y, &n, &ret, &stream)) goto done; // Copy macro 
    1b40:	9e 81 00 1c 	l.addi r20,r1,0x1c
    1b44:	9d c1 00 4c 	l.addi r14,r1,0x4c
    1b48:	9e 41 00 20 	l.addi r18,r1,0x20
  /*
   * Scan the format for conversions (`%' character).
   */
  for (;;) {
    cp = (char *)fmt; // char pointer - set to where we begin looking from
    while ((x = ((wc = *fmt) != 0))) { // While, wc=next char and x is one while there's still chars left
    1b4c:	00 00 00 03 	l.j 1b58 <vfnprintf+0x68>
    1b50:	aa 02 00 00 	l.ori r16,r2,0x0
      fmt += x; // increment the pointer to the char
    1b54:	aa 05 00 00 	l.ori r16,r5,0x0
  /*
   * Scan the format for conversions (`%' character).
   */
  for (;;) {
    cp = (char *)fmt; // char pointer - set to where we begin looking from
    while ((x = ((wc = *fmt) != 0))) { // While, wc=next char and x is one while there's still chars left
    1b58:	90 90 00 00 	l.lbs r4,0x0(r16)
    1b5c:	bc 24 00 00 	l.sfnei r4,0x0
    1b60:	0c 00 00 bd 	l.bnf 1e54 <vfnprintf+0x364>
    1b64:	bc 04 00 25 	l.sfeqi r4,0x25
      fmt += x; // increment the pointer to the char
      if (wc == '%') { // check if it's the beginning of
    1b68:	0f ff ff fb 	l.bnf 1b54 <vfnprintf+0x64>
    1b6c:	9c b0 00 01 	l.addi r5,r16,0x1
  /*
   * Scan the format for conversions (`%' character).
   */
  for (;;) {
    cp = (char *)fmt; // char pointer - set to where we begin looking from
    while ((x = ((wc = *fmt) != 0))) { // While, wc=next char and x is one while there's still chars left
    1b70:	9f 00 00 01 	l.addi r24,r0,0x1
      if (wc == '%') { // check if it's the beginning of
	fmt--; // Decrement the char pointer, actually
	break;
      }
    }
    if ((y = fmt - cp) != 0) { // y is length of string to copy out just now
    1b74:	e2 d0 10 02 	l.sub r22,r16,r2
    1b78:	bc 36 00 00 	l.sfnei r22,0x0
    1b7c:	10 00 00 96 	l.bf 1dd4 <vfnprintf+0x2e4>
    1b80:	84 c1 00 4c 	l.lwz r6,0x4c(r1)
    1b84:	a9 66 00 00 	l.ori r11,r6,0x0
      //PRINT(cp, y); // Copy macro 
      if(print_back_to_string(cp, y, &n, &ret, &stream)) goto done; // Copy macro 
      ret += y; // increment return chars
    }
    if ((x <= 0) || (ret >= (int)n))  // @@@ this check with n isn't good enough
    1b88:	bc 38 00 00 	l.sfnei r24,0x0
    1b8c:	0c 00 02 f3 	l.bnf 2758 <_min_stack+0x758>
    1b90:	84 41 00 1c 	l.lwz r2,0x1c(r1)
    1b94:	e5 a2 58 00 	l.sfles r2,r11
    1b98:	10 00 00 82 	l.bf 1da0 <vfnprintf+0x2b0>
    1b9c:	9c 80 00 00 	l.addi r4,r0,0x0
    
    flags = 0;
    dprec = 0;
    width = 0;
    prec = -1;
    sign = '\0';
    1ba0:	9c a0 00 00 	l.addi r5,r0,0x0
      if(print_back_to_string(cp, y, &n, &ret, &stream)) goto done; // Copy macro 
      ret += y; // increment return chars
    }
    if ((x <= 0) || (ret >= (int)n))  // @@@ this check with n isn't good enough
      goto done;
    fmt++;          /* skip over '%' */
    1ba4:	9c 50 00 01 	l.addi r2,r16,0x1
    
    flags = 0;
    dprec = 0;
    width = 0;
    prec = -1;
    sign = '\0';
    1ba8:	d8 01 20 53 	l.sb 0x53(r1),r4
    fmt++;          /* skip over '%' */
    
    flags = 0;
    dprec = 0;
    width = 0;
    prec = -1;
    1bac:	9f c0 ff ff 	l.addi r30,r0,0xffffffff
    sign = '\0';
    1bb0:	93 42 00 00 	l.lbs r26,0x0(r2)
    }
    if ((x <= 0) || (ret >= (int)n))  // @@@ this check with n isn't good enough
      goto done;
    fmt++;          /* skip over '%' */
    
    flags = 0;
    1bb4:	aa c5 00 00 	l.ori r22,r5,0x0
    dprec = 0;
    width = 0;
    1bb8:	d4 01 28 10 	l.sw 0x10(r1),r5
    prec = -1;
    sign = '\0';
    
  rflag:          ch = *fmt++;
    1bbc:	9c 42 00 01 	l.addi r2,r2,0x1
  reswitch:       switch (ch) {
    1bc0:	9c 9a ff e0 	l.addi r4,r26,0xffffffe0
    1bc4:	bc 44 00 5a 	l.sfgtui r4,0x5a
    1bc8:	0c 00 00 13 	l.bnf 1c14 <vfnprintf+0x124>
    1bcc:	19 00 00 00 	l.movhi r8,0x0
      break;
    case 'z':
      flags |= SIZET;
      goto rflag;
    default:        /* "%?" prints ?, unless ? is NUL */
      if (ch == '\0')
    1bd0:	bc 3a 00 00 	l.sfnei r26,0x0
    1bd4:	0c 00 02 e1 	l.bnf 2758 <_min_stack+0x758>
    1bd8:	9c 80 00 00 	l.addi r4,r0,0x0
	goto done;
      /* pretend it was %c with argument ch */
      cp = buf;
      *cp = ch;
      size = 1;
    1bdc:	9d 00 00 01 	l.addi r8,r0,0x1
    default:        /* "%?" prints ?, unless ? is NUL */
      if (ch == '\0')
	goto done;
      /* pretend it was %c with argument ch */
      cp = buf;
      *cp = ch;
    1be0:	d8 01 d0 24 	l.sb 0x24(r1),r26
      size = 1;
      sign = '\0';
    1be4:	d8 01 20 53 	l.sb 0x53(r1),r4
      if (ch == '\0')
	goto done;
      /* pretend it was %c with argument ch */
      cp = buf;
      *cp = ch;
      size = 1;
    1be8:	d4 01 40 04 	l.sw 0x4(r1),r8
      goto rflag;
    default:        /* "%?" prints ?, unless ? is NUL */
      if (ch == '\0')
	goto done;
      /* pretend it was %c with argument ch */
      cp = buf;
    1bec:	9f 01 00 24 	l.addi r24,r1,0x24
#ifdef CYGSEM_LIBC_STDIO_PRINTF_FLOATING_POINT
    fieldsz = size + fpprec;
#else
    fieldsz = size;
#endif
    if (sign)
    1bf0:	9f c0 00 00 	l.addi r30,r0,0x0
      fieldsz++;
    else if (flags & HEXPREFIX)
    1bf4:	85 01 00 04 	l.lwz r8,0x4(r1)
    1bf8:	a4 96 00 02 	l.andi r4,r22,0x2
    1bfc:	bc 04 00 00 	l.sfeqi r4,0x0
    1c00:	10 00 00 47 	l.bf 1d1c <vfnprintf+0x22c>
    1c04:	d4 01 40 00 	l.sw 0x0(r1),r8
      fieldsz+= 2;
    1c08:	9c 68 00 02 	l.addi r3,r8,0x2
    1c0c:	00 00 00 44 	l.j 1d1c <vfnprintf+0x22c>
    1c10:	d4 01 18 00 	l.sw 0x0(r1),r3
    width = 0;
    prec = -1;
    sign = '\0';
    
  rflag:          ch = *fmt++;
  reswitch:       switch (ch) {
    1c14:	b8 84 00 02 	l.slli r4,r4,0x2
    1c18:	a9 08 5e cc 	l.ori r8,r8,0x5ecc
    1c1c:	e0 84 40 00 	l.add r4,r4,r8
    1c20:	84 84 00 00 	l.lwz r4,0x0(r4)
    1c24:	44 00 20 00 	l.jr r4
    1c28:	15 00 00 00 	l.nop 0x0
	  *va_arg(arg, size_t *) = ret;
	else
	  *va_arg(arg, int *) = ret;
      continue;       /* no output */
    case 'O':
      flags |= LONGINT;
    1c2c:	aa d6 00 10 	l.ori r22,r22,0x10
      /*FALLTHROUGH*/
    case 'o':
      _uquad = UARG();
    1c30:	a5 76 00 20 	l.andi r11,r22,0x20
    1c34:	bc 0b 00 00 	l.sfeqi r11,0x0
    1c38:	10 00 00 89 	l.bf 1e5c <vfnprintf+0x36c>
    1c3c:	a4 76 00 10 	l.andi r3,r22,0x10
    1c40:	85 7c 00 00 	l.lwz r11,0x0(r28)
    1c44:	86 1c 00 04 	l.lwz r16,0x4(r28)
      base = OCT;
    1c48:	9c c0 00 00 	l.addi r6,r0,0x0
      break;
    case 'U':
      flags |= LONGINT;
      /*FALLTHROUGH*/
    case 'u':
      _uquad = UARG();
    1c4c:	e0 6b 80 04 	l.or r3,r11,r16
    1c50:	9f 9c 00 08 	l.addi r28,r28,0x8
    1c54:	e0 80 18 02 	l.sub r4,r0,r3
    1c58:	e0 64 18 04 	l.or r3,r4,r3
    1c5c:	b8 83 00 5f 	l.srli r4,r3,0x1f
      /* leading 0x/X only if non-zero */
      if (flags & ALT && _uquad != 0)
	flags |= HEXPREFIX;
      
      /* unsigned conversions */
    nosign:                 sign = '\0';
    1c60:	9c 60 00 00 	l.addi r3,r0,0x0
    1c64:	9c a0 00 00 	l.addi r5,r0,0x0
    1c68:	d8 01 18 53 	l.sb 0x53(r1),r3
      /*
       * ``... diouXx conversions ... if a precision is
       * specified, the 0 flag will be ignored.''
       *      -- ANSI X3J11
       */
    number:                 if ((dprec = prec) >= 0)
    1c6c:	bd 9e 00 00 	l.sfltsi r30,0x0
    1c70:	10 00 00 03 	l.bf 1c7c <vfnprintf+0x18c>
    1c74:	9d 00 ff 7f 	l.addi r8,r0,0xffffff7f
	flags &= ~ZEROPAD;
    1c78:	e2 d6 40 03 	l.and r22,r22,r8
       * ``The result of converting a zero value with an
       * explicit precision of zero is no characters.''
       *      -- ANSI X3J11
       */
      cp = buf + BUF;
      if (_uquad != 0 || prec != 0) {
    1c7c:	e0 e0 f0 02 	l.sub r7,r0,r30
    1c80:	e0 e7 f0 04 	l.or r7,r7,r30
    1c84:	bd 87 00 00 	l.sfltsi r7,0x0
    1c88:	10 00 00 05 	l.bf 1c9c <vfnprintf+0x1ac>
    1c8c:	bc 06 00 01 	l.sfeqi r6,0x1
    1c90:	bc 04 00 00 	l.sfeqi r4,0x0
    1c94:	10 00 01 c7 	l.bf 23b0 <_min_stack+0x3b0>
    1c98:	bc 06 00 01 	l.sfeqi r6,0x1
	/*
	 * Unsigned mod is hard, and unsigned mod
	 * by a constant is easier than that by
	 * a variable; hence this switch.
	 */
	switch (base) {
    1c9c:	10 00 02 0e 	l.bf 24d4 <_min_stack+0x4d4>
    1ca0:	bc 06 00 02 	l.sfeqi r6,0x2
    1ca4:	10 00 01 fb 	l.bf 2490 <_min_stack+0x490>
    1ca8:	ab 0e 00 00 	l.ori r24,r14,0x0
	case OCT:
	  do {
	    *--cp = to_char(_uquad & 7);
	    _uquad >>= 3;
    1cac:	b8 b0 00 43 	l.srli r5,r16,0x3
    1cb0:	b8 cb 00 1d 	l.slli r6,r11,0x1d
	 * a variable; hence this switch.
	 */
	switch (base) {
	case OCT:
	  do {
	    *--cp = to_char(_uquad & 7);
    1cb4:	a6 10 00 07 	l.andi r16,r16,0x7
	    _uquad >>= 3;
    1cb8:	b9 6b 00 43 	l.srli r11,r11,0x3
	 * a variable; hence this switch.
	 */
	switch (base) {
	case OCT:
	  do {
	    *--cp = to_char(_uquad & 7);
    1cbc:	9c 90 00 30 	l.addi r4,r16,0x30
    1cc0:	9f 18 ff ff 	l.addi r24,r24,0xffffffff
	    _uquad >>= 3;
    1cc4:	e2 06 28 04 	l.or r16,r6,r5
	  } while (_uquad);
    1cc8:	e0 ab 80 04 	l.or r5,r11,r16
    1ccc:	bc 25 00 00 	l.sfnei r5,0x0
    1cd0:	13 ff ff f7 	l.bf 1cac <vfnprintf+0x1bc>
    1cd4:	d8 18 20 00 	l.sb 0x0(r24),r4
	  /* handle octal leading 0 */
	  if (flags & ALT && *cp != '0')
    1cd8:	a4 76 00 01 	l.andi r3,r22,0x1
    1cdc:	bc 23 00 00 	l.sfnei r3,0x0
    1ce0:	0c 00 01 fa 	l.bnf 24c8 <_min_stack+0x4c8>
    1ce4:	e0 6e c0 02 	l.sub r3,r14,r24
    1ce8:	bc 24 00 30 	l.sfnei r4,0x30
    1cec:	0c 00 02 a5 	l.bnf 2780 <_min_stack+0x780>
    1cf0:	9d 00 00 30 	l.addi r8,r0,0x30
	    *--cp = '0';
    1cf4:	9f 18 ff ff 	l.addi r24,r24,0xffffffff
    1cf8:	e0 6e c0 02 	l.sub r3,r14,r24
    1cfc:	d8 18 40 00 	l.sb 0x0(r24),r8
    1d00:	d4 01 18 04 	l.sw 0x4(r1),r3
    1d04:	90 a1 00 53 	l.lbs r5,0x53(r1)
#ifdef CYGSEM_LIBC_STDIO_PRINTF_FLOATING_POINT
    fieldsz = size + fpprec;
#else
    fieldsz = size;
#endif
    if (sign)
    1d08:	bc 05 00 00 	l.sfeqi r5,0x0
    1d0c:	13 ff ff ba 	l.bf 1bf4 <vfnprintf+0x104>
    1d10:	84 61 00 04 	l.lwz r3,0x4(r1)
      fieldsz++;
    1d14:	9c 63 00 01 	l.addi r3,r3,0x1
    1d18:	d4 01 18 00 	l.sw 0x0(r1),r3
    else if (flags & HEXPREFIX)
      fieldsz+= 2;
    realsz = dprec > fieldsz ? dprec : fieldsz;
    1d1c:	84 81 00 00 	l.lwz r4,0x0(r1)
    1d20:	e5 7e 20 00 	l.sfges r30,r4
    1d24:	10 00 00 03 	l.bf 1d30 <vfnprintf+0x240>
    1d28:	d4 01 f0 0c 	l.sw 0xc(r1),r30
    1d2c:	d4 01 20 0c 	l.sw 0xc(r1),r4
    
    /* right-adjusting blank padding */
    if ((flags & (LADJUST|ZEROPAD)) == 0) {
    1d30:	a5 16 00 84 	l.andi r8,r22,0x84
    1d34:	bc 28 00 00 	l.sfnei r8,0x0
    1d38:	10 00 01 49 	l.bf 225c <_min_stack+0x25c>
    1d3c:	d4 01 40 08 	l.sw 0x8(r1),r8
      if (width - realsz > 0) {
    1d40:	84 61 00 10 	l.lwz r3,0x10(r1)
    1d44:	84 81 00 0c 	l.lwz r4,0xc(r1)
    1d48:	e0 63 20 02 	l.sub r3,r3,r4
    1d4c:	bd a3 00 00 	l.sflesi r3,0x0
    1d50:	10 00 01 43 	l.bf 225c <_min_stack+0x25c>
    1d54:	d4 01 18 14 	l.sw 0x14(r1),r3
	PAD(width - realsz, blanks);
    1d58:	bd a3 00 10 	l.sflesi r3,0x10
    1d5c:	10 00 01 32 	l.bf 2224 <_min_stack+0x224>
    1d60:	aa 03 00 00 	l.ori r16,r3,0x0
    1d64:	00 00 00 05 	l.j 1d78 <vfnprintf+0x288>
    1d68:	18 60 00 00 	l.movhi r3,0x0
    1d6c:	bd 50 00 10 	l.sfgtsi r16,0x10
    1d70:	0c 00 01 2f 	l.bnf 222c <_min_stack+0x22c>
    1d74:	18 60 00 00 	l.movhi r3,0x0
    1d78:	9c 80 00 10 	l.addi r4,r0,0x10
    1d7c:	a8 63 63 b8 	l.ori r3,r3,0x63b8
    1d80:	a8 b4 00 00 	l.ori r5,r20,0x0
    1d84:	a8 ce 00 00 	l.ori r6,r14,0x0
    1d88:	07 ff ff 3a 	l.jal 1a70 <print_back_to_string>
    1d8c:	a8 f2 00 00 	l.ori r7,r18,0x0
    1d90:	bc 0b 00 00 	l.sfeqi r11,0x0
    1d94:	13 ff ff f6 	l.bf 1d6c <vfnprintf+0x27c>
    1d98:	9e 10 ff f0 	l.addi r16,r16,0xfffffff0
    
    /* left-adjusting padding (always blank) */
    if (flags & LADJUST) {
      if (width - realsz > 0) {
	PAD(width - realsz, blanks);
	ret += width - realsz;
    1d9c:	85 61 00 4c 	l.lwz r11,0x4c(r1)
  
 done:
 error:
  return ret;// remove this error stuff (((Cyg_OutputStream *) stream)->get_error() ? EOF : ret);
  /* NOTREACHED */
}
    1da0:	9c 21 00 80 	l.addi r1,r1,0x80
    1da4:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    1da8:	84 41 ff d4 	l.lwz r2,0xffffffd4(r1)
    1dac:	85 c1 ff d8 	l.lwz r14,0xffffffd8(r1)
    1db0:	86 01 ff dc 	l.lwz r16,0xffffffdc(r1)
    1db4:	86 41 ff e0 	l.lwz r18,0xffffffe0(r1)
    1db8:	86 81 ff e4 	l.lwz r20,0xffffffe4(r1)
    1dbc:	86 c1 ff e8 	l.lwz r22,0xffffffe8(r1)
    1dc0:	87 01 ff ec 	l.lwz r24,0xffffffec(r1)
    1dc4:	87 41 ff f0 	l.lwz r26,0xfffffff0(r1)
    1dc8:	87 81 ff f4 	l.lwz r28,0xfffffff4(r1)
    1dcc:	44 00 48 00 	l.jr r9
    1dd0:	87 c1 ff f8 	l.lwz r30,0xfffffff8(r1)
	break;
      }
    }
    if ((y = fmt - cp) != 0) { // y is length of string to copy out just now
      //PRINT(cp, y); // Copy macro 
      if(print_back_to_string(cp, y, &n, &ret, &stream)) goto done; // Copy macro 
    1dd4:	a8 62 00 00 	l.ori r3,r2,0x0
    1dd8:	a8 96 00 00 	l.ori r4,r22,0x0
    1ddc:	a8 b4 00 00 	l.ori r5,r20,0x0
    1de0:	a8 ce 00 00 	l.ori r6,r14,0x0
    1de4:	07 ff ff 23 	l.jal 1a70 <print_back_to_string>
    1de8:	a8 f2 00 00 	l.ori r7,r18,0x0
    1dec:	bc 2b 00 00 	l.sfnei r11,0x0
    1df0:	13 ff ff eb 	l.bf 1d9c <vfnprintf+0x2ac>
    1df4:	84 c1 00 4c 	l.lwz r6,0x4c(r1)
      ret += y; // increment return chars
    1df8:	e1 76 30 00 	l.add r11,r22,r6
    1dfc:	a8 cb 00 00 	l.ori r6,r11,0x0
    1e00:	03 ff ff 62 	l.j 1b88 <vfnprintf+0x98>
    1e04:	d4 01 58 4c 	l.sw 0x4c(r1),r11
      } else
	size = strlen(cp);
      sign = '\0';
      break;
    case 'U':
      flags |= LONGINT;
    1e08:	aa d6 00 10 	l.ori r22,r22,0x10
      /*FALLTHROUGH*/
    case 'u':
      _uquad = UARG();
    1e0c:	a5 76 00 20 	l.andi r11,r22,0x20
    1e10:	bc 0b 00 00 	l.sfeqi r11,0x0
    1e14:	0c 00 00 20 	l.bnf 1e94 <vfnprintf+0x3a4>
    1e18:	a4 76 00 10 	l.andi r3,r22,0x10
    1e1c:	bc 03 00 00 	l.sfeqi r3,0x0
    1e20:	0c 00 01 ef 	l.bnf 25dc <_min_stack+0x5dc>
    1e24:	15 00 00 00 	l.nop 0x0
    1e28:	a4 96 00 40 	l.andi r4,r22,0x40
    1e2c:	bc 04 00 00 	l.sfeqi r4,0x0
    1e30:	0c 00 02 2f 	l.bnf 26ec <_min_stack+0x6ec>
    1e34:	a9 63 00 00 	l.ori r11,r3,0x0
    1e38:	a5 76 02 00 	l.andi r11,r22,0x200
    1e3c:	bc 0b 00 00 	l.sfeqi r11,0x0
    1e40:	10 00 01 e7 	l.bf 25dc <_min_stack+0x5dc>
    1e44:	15 00 00 00 	l.nop 0x0
    1e48:	86 1c 00 00 	l.lwz r16,0x0(r28)
    1e4c:	00 00 01 e5 	l.j 25e0 <_min_stack+0x5e0>
    1e50:	a9 64 00 00 	l.ori r11,r4,0x0
  /*
   * Scan the format for conversions (`%' character).
   */
  for (;;) {
    cp = (char *)fmt; // char pointer - set to where we begin looking from
    while ((x = ((wc = *fmt) != 0))) { // While, wc=next char and x is one while there's still chars left
    1e54:	03 ff ff 48 	l.j 1b74 <vfnprintf+0x84>
    1e58:	ab 04 00 00 	l.ori r24,r4,0x0
      continue;       /* no output */
    case 'O':
      flags |= LONGINT;
      /*FALLTHROUGH*/
    case 'o':
      _uquad = UARG();
    1e5c:	bc 03 00 00 	l.sfeqi r3,0x0
    1e60:	0c 00 01 d8 	l.bnf 25c0 <_min_stack+0x5c0>
    1e64:	15 00 00 00 	l.nop 0x0
    1e68:	a4 96 00 40 	l.andi r4,r22,0x40
    1e6c:	bc 04 00 00 	l.sfeqi r4,0x0
    1e70:	0c 00 02 26 	l.bnf 2708 <_min_stack+0x708>
    1e74:	a9 63 00 00 	l.ori r11,r3,0x0
    1e78:	a5 76 02 00 	l.andi r11,r22,0x200
    1e7c:	bc 0b 00 00 	l.sfeqi r11,0x0
    1e80:	10 00 01 d0 	l.bf 25c0 <_min_stack+0x5c0>
    1e84:	15 00 00 00 	l.nop 0x0
    1e88:	86 1c 00 00 	l.lwz r16,0x0(r28)
    1e8c:	00 00 01 ce 	l.j 25c4 <_min_stack+0x5c4>
    1e90:	a9 64 00 00 	l.ori r11,r4,0x0
      break;
    case 'U':
      flags |= LONGINT;
      /*FALLTHROUGH*/
    case 'u':
      _uquad = UARG();
    1e94:	85 7c 00 00 	l.lwz r11,0x0(r28)
    1e98:	86 1c 00 04 	l.lwz r16,0x4(r28)
      base = DEC;
    1e9c:	03 ff ff 6c 	l.j 1c4c <vfnprintf+0x15c>
    1ea0:	9c c0 00 01 	l.addi r6,r0,0x1
       * ``A negative field width argument is taken as a
       * - flag followed by a positive field width.''
       *      -- ANSI X3J11
       * They don't exclude field widths read from args.
       */
      if ((width = va_arg(arg, int)) >= 0)
    1ea4:	84 9c 00 00 	l.lwz r4,0x0(r28)
    1ea8:	9f 9c 00 04 	l.addi r28,r28,0x4
    1eac:	bd 84 00 00 	l.sfltsi r4,0x0
    1eb0:	0c 00 00 93 	l.bnf 20fc <_min_stack+0xfc>
    1eb4:	d4 01 20 10 	l.sw 0x10(r1),r4
	goto rflag;
      width = -width;
    1eb8:	85 01 00 10 	l.lwz r8,0x10(r1)
    1ebc:	e1 00 40 02 	l.sub r8,r0,r8
    1ec0:	d4 01 40 10 	l.sw 0x10(r1),r8
      /* FALLTHROUGH */
    case '-':
      flags |= LADJUST;
    1ec4:	aa d6 00 04 	l.ori r22,r22,0x4
      goto rflag;
    1ec8:	03 ff ff 3d 	l.j 1bbc <vfnprintf+0xcc>
    1ecc:	93 42 00 00 	l.lbs r26,0x0(r2)
      }
      size = buf + BUF - cp;
    skipsize:
      break;
    case 'z':
      flags |= SIZET;
    1ed0:	aa d6 02 00 	l.ori r22,r22,0x200
    1ed4:	03 ff ff 3a 	l.j 1bbc <vfnprintf+0xcc>
    1ed8:	93 42 00 00 	l.lbs r26,0x0(r2)
      goto reswitch;
    case 'h':
      flags |= SHORTINT;
      goto rflag;
    case 'l':
      if (*fmt == 'l') {
    1edc:	93 42 00 00 	l.lbs r26,0x0(r2)
    1ee0:	bc 3a 00 6c 	l.sfnei r26,0x6c
    1ee4:	0c 00 02 1f 	l.bnf 2760 <_min_stack+0x760>
    1ee8:	15 00 00 00 	l.nop 0x0
	fmt++;
	flags |= QUADINT;
      } else {
	flags |= LONGINT;
    1eec:	03 ff ff 34 	l.j 1bbc <vfnprintf+0xcc>
    1ef0:	aa d6 00 10 	l.ori r22,r22,0x10
      sign = '\0';
      break;
      
    case 'n':
#ifndef _NO_LONGLONG
      if (flags & QUADINT)
    1ef4:	a4 76 00 20 	l.andi r3,r22,0x20
    1ef8:	bc 03 00 00 	l.sfeqi r3,0x0
    1efc:	10 00 01 e9 	l.bf 26a0 <_min_stack+0x6a0>
    1f00:	d8 01 28 53 	l.sb 0x53(r1),r5
	*va_arg(arg, quad_t *) = ret;
    1f04:	b8 86 00 9f 	l.srai r4,r6,0x1f
    1f08:	84 7c 00 00 	l.lwz r3,0x0(r28)
    1f0c:	9f 9c 00 04 	l.addi r28,r28,0x4
    1f10:	d4 03 30 04 	l.sw 0x4(r3),r6
    1f14:	03 ff ff 0e 	l.j 1b4c <vfnprintf+0x5c>
    1f18:	d4 03 20 00 	l.sw 0x0(r3),r4
       * of printable characters, in an implementation-
       * defined manner.''
       *      -- ANSI X3J11
       */
      /* NOSTRICT */
      _uquad = (unsigned long)va_arg(arg, void *);
    1f1c:	86 1c 00 00 	l.lwz r16,0x0(r28)
      base = HEX;
      xdigs = (char *)"0123456789abcdef";
    1f20:	18 60 00 00 	l.movhi r3,0x0
      flags |= HEXPREFIX;
    1f24:	e0 80 80 02 	l.sub r4,r0,r16
       *      -- ANSI X3J11
       */
      /* NOSTRICT */
      _uquad = (unsigned long)va_arg(arg, void *);
      base = HEX;
      xdigs = (char *)"0123456789abcdef";
    1f28:	a8 63 62 c0 	l.ori r3,r3,0x62c0
      flags |= HEXPREFIX;
    1f2c:	e0 84 80 04 	l.or r4,r4,r16
       * of printable characters, in an implementation-
       * defined manner.''
       *      -- ANSI X3J11
       */
      /* NOSTRICT */
      _uquad = (unsigned long)va_arg(arg, void *);
    1f30:	9d 60 00 00 	l.addi r11,r0,0x0
      base = HEX;
      xdigs = (char *)"0123456789abcdef";
      flags |= HEXPREFIX;
    1f34:	aa d6 00 02 	l.ori r22,r22,0x2
       * of printable characters, in an implementation-
       * defined manner.''
       *      -- ANSI X3J11
       */
      /* NOSTRICT */
      _uquad = (unsigned long)va_arg(arg, void *);
    1f38:	9f 9c 00 04 	l.addi r28,r28,0x4
      base = HEX;
      xdigs = (char *)"0123456789abcdef";
      flags |= HEXPREFIX;
    1f3c:	b8 84 00 5f 	l.srli r4,r4,0x1f
       *      -- ANSI X3J11
       */
      /* NOSTRICT */
      _uquad = (unsigned long)va_arg(arg, void *);
      base = HEX;
      xdigs = (char *)"0123456789abcdef";
    1f40:	d4 01 18 18 	l.sw 0x18(r1),r3
       * defined manner.''
       *      -- ANSI X3J11
       */
      /* NOSTRICT */
      _uquad = (unsigned long)va_arg(arg, void *);
      base = HEX;
    1f44:	9c c0 00 02 	l.addi r6,r0,0x2
      xdigs = (char *)"0123456789abcdef";
      flags |= HEXPREFIX;
      ch = 'x';
      goto nosign;
    1f48:	03 ff ff 46 	l.j 1c60 <vfnprintf+0x170>
    1f4c:	9f 40 00 78 	l.addi r26,r0,0x78
    1f50:	d8 01 28 53 	l.sb 0x53(r1),r5
    case 's':
      if ((cp = va_arg(arg, char *)) == NULL)
    1f54:	87 1c 00 00 	l.lwz r24,0x0(r28)
    1f58:	bc 18 00 00 	l.sfeqi r24,0x0
    1f5c:	10 00 02 0d 	l.bf 2790 <_min_stack+0x790>
    1f60:	9e 1c 00 04 	l.addi r16,r28,0x4
	cp = (char *)"(null)";
      if (prec >= 0) {
    1f64:	bd 9e 00 00 	l.sfltsi r30,0x0
    1f68:	10 00 02 02 	l.bf 2770 <_min_stack+0x770>
    1f6c:	a8 78 00 00 	l.ori r3,r24,0x0
	/*
	 * can't use strlen; can only look for the
	 * NUL in the first `prec' characters, and
	 * strlen() will go further.
	 */
	char *p = (char *)memchr(cp, 0, prec);
    1f70:	9c 80 00 00 	l.addi r4,r0,0x0
    1f74:	a8 be 00 00 	l.ori r5,r30,0x0
    1f78:	04 00 02 9c 	l.jal 29e8 <memchr>
    1f7c:	d4 01 f0 04 	l.sw 0x4(r1),r30
	
	if (p != NULL) {
    1f80:	bc 0b 00 00 	l.sfeqi r11,0x0
    1f84:	10 00 00 07 	l.bf 1fa0 <vfnprintf+0x4b0>
    1f88:	9c 80 00 00 	l.addi r4,r0,0x0
	  size = p - cp;
    1f8c:	e1 6b c0 02 	l.sub r11,r11,r24
    1f90:	e5 ab f0 00 	l.sfles r11,r30
    1f94:	0c 00 01 d2 	l.bnf 26dc <_min_stack+0x6dc>
    1f98:	d4 01 58 04 	l.sw 0x4(r1),r11
	    size = prec;
	} else
	  size = prec;
      } else
	size = strlen(cp);
      sign = '\0';
    1f9c:	9c 80 00 00 	l.addi r4,r0,0x0
      xdigs = (char *)"0123456789abcdef";
      flags |= HEXPREFIX;
      ch = 'x';
      goto nosign;
    case 's':
      if ((cp = va_arg(arg, char *)) == NULL)
    1fa0:	ab 90 00 00 	l.ori r28,r16,0x0
	} else
	  size = prec;
      } else
	size = strlen(cp);
      sign = '\0';
      break;
    1fa4:	03 ff ff 13 	l.j 1bf0 <vfnprintf+0x100>
    1fa8:	d8 01 20 53 	l.sb 0x53(r1),r4
      goto nosign;
    case 'X':
      xdigs = (char *)"0123456789ABCDEF";
      goto hex;
    case 'x':
      xdigs = (char *)"0123456789abcdef";
    1fac:	19 00 00 00 	l.movhi r8,0x0
    hex:                    _uquad = UARG();
    1fb0:	a5 76 00 20 	l.andi r11,r22,0x20
      goto nosign;
    case 'X':
      xdigs = (char *)"0123456789ABCDEF";
      goto hex;
    case 'x':
      xdigs = (char *)"0123456789abcdef";
    1fb4:	a9 08 62 c0 	l.ori r8,r8,0x62c0
    hex:                    _uquad = UARG();
    1fb8:	bc 0b 00 00 	l.sfeqi r11,0x0
    1fbc:	10 00 00 71 	l.bf 2180 <_min_stack+0x180>
    1fc0:	d4 01 40 18 	l.sw 0x18(r1),r8
    1fc4:	85 7c 00 00 	l.lwz r11,0x0(r28)
    1fc8:	86 1c 00 04 	l.lwz r16,0x4(r28)
    1fcc:	9f 9c 00 08 	l.addi r28,r28,0x8
      base = HEX;
      /* leading 0x/X only if non-zero */
      if (flags & ALT && _uquad != 0)
    1fd0:	e0 6b 80 04 	l.or r3,r11,r16
    1fd4:	e0 80 18 02 	l.sub r4,r0,r3
    1fd8:	e0 64 18 04 	l.or r3,r4,r3
    1fdc:	b8 83 00 5f 	l.srli r4,r3,0x1f
    1fe0:	bc 04 00 00 	l.sfeqi r4,0x0
    1fe4:	13 ff ff 1f 	l.bf 1c60 <vfnprintf+0x170>
    1fe8:	9c c0 00 02 	l.addi r6,r0,0x2
    1fec:	a4 76 00 01 	l.andi r3,r22,0x1
    1ff0:	bc 03 00 00 	l.sfeqi r3,0x0
    1ff4:	13 ff ff 1c 	l.bf 1c64 <vfnprintf+0x174>
    1ff8:	9c 60 00 00 	l.addi r3,r0,0x0
	flags |= HEXPREFIX;
    1ffc:	aa d6 00 02 	l.ori r22,r22,0x2
    2000:	03 ff ff 19 	l.j 1c64 <vfnprintf+0x174>
    2004:	9c 80 00 01 	l.addi r4,r0,0x1
      } else {
	flags |= LONGINT;
      }
      goto rflag;
    case 'q':
      flags |= QUADINT;
    2008:	aa d6 00 20 	l.ori r22,r22,0x20
      goto rflag;
    200c:	03 ff fe ec 	l.j 1bbc <vfnprintf+0xcc>
    2010:	93 42 00 00 	l.lbs r26,0x0(r2)
	ch = *fmt++;
      } while (is_digit(ch));
      width = x;
      goto reswitch;
    case 'h':
      flags |= SHORTINT;
    2014:	aa d6 00 40 	l.ori r22,r22,0x40
      goto rflag;
    2018:	03 ff fe e9 	l.j 1bbc <vfnprintf+0xcc>
    201c:	93 42 00 00 	l.lbs r26,0x0(r2)
      /*
       * ``If the space and + flags both appear, the space
       * flag will be ignored.''
       *      -- ANSI X3J11
       */
      if (!sign)
    2020:	bc 25 00 00 	l.sfnei r5,0x0
    2024:	10 00 00 36 	l.bf 20fc <_min_stack+0xfc>
    2028:	15 00 00 00 	l.nop 0x0
    202c:	93 42 00 00 	l.lbs r26,0x0(r2)
	sign = ' ';
    2030:	03 ff fe e3 	l.j 1bbc <vfnprintf+0xcc>
    2034:	9c a0 00 20 	l.addi r5,r0,0x20
      goto rflag;
    case '#':
      flags |= ALT;
    2038:	aa d6 00 01 	l.ori r22,r22,0x1
      goto rflag;
    203c:	03 ff fe e0 	l.j 1bbc <vfnprintf+0xcc>
    2040:	93 42 00 00 	l.lbs r26,0x0(r2)
	goto rflag;
      width = -width;
      /* FALLTHROUGH */
    case '-':
      flags |= LADJUST;
      goto rflag;
    2044:	93 42 00 00 	l.lbs r26,0x0(r2)
    case '+':
      sign = '+';
      goto rflag;
    2048:	03 ff fe dd 	l.j 1bbc <vfnprintf+0xcc>
    204c:	9c a0 00 2b 	l.addi r5,r0,0x2b
      /*
       * ``Note that 0 is taken as a flag, not as the
       * beginning of a field width.''
       *      -- ANSI X3J11
       */
      flags |= ZEROPAD;
    2050:	aa d6 00 80 	l.ori r22,r22,0x80
      goto rflag;
    2054:	03 ff fe da 	l.j 1bbc <vfnprintf+0xcc>
    2058:	93 42 00 00 	l.lbs r26,0x0(r2)
    width = 0;
    prec = -1;
    sign = '\0';
    
  rflag:          ch = *fmt++;
  reswitch:       switch (ch) {
    205c:	9c e0 00 00 	l.addi r7,r0,0x0
    2060:	9c 9a ff d0 	l.addi r4,r26,0xffffffd0
      goto rflag;
    case '1': case '2': case '3': case '4':
    case '5': case '6': case '7': case '8': case '9':
      x = 0;
      do {
	x = 10 * x + to_digit(ch);
    2064:	b9 07 00 03 	l.slli r8,r7,0x3
    2068:	e0 e7 38 00 	l.add r7,r7,r7
	ch = *fmt++;
    206c:	93 42 00 00 	l.lbs r26,0x0(r2)
      goto rflag;
    case '1': case '2': case '3': case '4':
    case '5': case '6': case '7': case '8': case '9':
      x = 0;
      do {
	x = 10 * x + to_digit(ch);
    2070:	e0 e7 40 00 	l.add r7,r7,r8
    2074:	e0 e4 38 00 	l.add r7,r4,r7
	ch = *fmt++;
      } while (is_digit(ch));
    2078:	9c 9a ff d0 	l.addi r4,r26,0xffffffd0
    207c:	bc a4 00 09 	l.sfleui r4,0x9
    2080:	13 ff ff f9 	l.bf 2064 <_min_stack+0x64>
    2084:	9c 42 00 01 	l.addi r2,r2,0x1
      goto rflag;
    case '1': case '2': case '3': case '4':
    case '5': case '6': case '7': case '8': case '9':
      x = 0;
      do {
	x = 10 * x + to_digit(ch);
    2088:	03 ff fe ce 	l.j 1bc0 <vfnprintf+0xd0>
    208c:	d4 01 38 10 	l.sw 0x10(r1),r7
      goto rflag;
    case '+':
      sign = '+';
      goto rflag;
    case '.':
      if ((ch = *fmt++) == '*') {
    2090:	93 42 00 00 	l.lbs r26,0x0(r2)
    2094:	bc 1a 00 2a 	l.sfeqi r26,0x2a
    2098:	10 00 00 14 	l.bf 20e8 <_min_stack+0xe8>
    209c:	9c 42 00 01 	l.addi r2,r2,0x1
	x = va_arg(arg, int);
	prec = x < 0 ? -1 : x;
	goto rflag;
      }
      x = 0;
      while (is_digit(ch)) {
    20a0:	9c 9a ff d0 	l.addi r4,r26,0xffffffd0
    20a4:	bc a4 00 09 	l.sfleui r4,0x9
    20a8:	0f ff fe c6 	l.bnf 1bc0 <vfnprintf+0xd0>
    20ac:	9f c0 00 00 	l.addi r30,r0,0x0
	x = 10 * x + to_digit(ch);
    20b0:	b8 fe 00 03 	l.slli r7,r30,0x3
    20b4:	e3 de f0 00 	l.add r30,r30,r30
	ch = *fmt++;
    20b8:	93 42 00 00 	l.lbs r26,0x0(r2)
	prec = x < 0 ? -1 : x;
	goto rflag;
      }
      x = 0;
      while (is_digit(ch)) {
	x = 10 * x + to_digit(ch);
    20bc:	e3 de 38 00 	l.add r30,r30,r7
    20c0:	e3 de 20 00 	l.add r30,r30,r4
	x = va_arg(arg, int);
	prec = x < 0 ? -1 : x;
	goto rflag;
      }
      x = 0;
      while (is_digit(ch)) {
    20c4:	9c 9a ff d0 	l.addi r4,r26,0xffffffd0
    20c8:	bc a4 00 09 	l.sfleui r4,0x9
    20cc:	13 ff ff f9 	l.bf 20b0 <_min_stack+0xb0>
    20d0:	9c 42 00 01 	l.addi r2,r2,0x1
    20d4:	bd 7e 00 00 	l.sfgesi r30,0x0
    20d8:	13 ff fe bb 	l.bf 1bc4 <vfnprintf+0xd4>
    20dc:	9c 9a ff e0 	l.addi r4,r26,0xffffffe0
    20e0:	03 ff fe b9 	l.j 1bc4 <vfnprintf+0xd4>
    20e4:	9f c0 ff ff 	l.addi r30,r0,0xffffffff
      sign = '+';
      goto rflag;
    case '.':
      if ((ch = *fmt++) == '*') {
	x = va_arg(arg, int);
	prec = x < 0 ? -1 : x;
    20e8:	87 dc 00 00 	l.lwz r30,0x0(r28)
    20ec:	bd 7e 00 00 	l.sfgesi r30,0x0
    20f0:	10 00 00 03 	l.bf 20fc <_min_stack+0xfc>
    20f4:	9f 9c 00 04 	l.addi r28,r28,0x4
    20f8:	9f c0 ff ff 	l.addi r30,r0,0xffffffff
    
    flags = 0;
    dprec = 0;
    width = 0;
    prec = -1;
    sign = '\0';
    20fc:	03 ff fe b0 	l.j 1bbc <vfnprintf+0xcc>
    2100:	93 42 00 00 	l.lbs r26,0x0(r2)
      *(cp = buf) = va_arg(arg, int);
      size = 1;
      sign = '\0';
      break;
    case 'D':
      flags |= LONGINT;
    2104:	aa d6 00 10 	l.ori r22,r22,0x10
      /*FALLTHROUGH*/
    case 'd':
    case 'i':
      _uquad = SARG();
    2108:	a4 76 00 20 	l.andi r3,r22,0x20
    210c:	bc 03 00 00 	l.sfeqi r3,0x0
    2110:	10 00 00 38 	l.bf 21f0 <_min_stack+0x1f0>
    2114:	d8 01 28 53 	l.sb 0x53(r1),r5
    2118:	85 7c 00 00 	l.lwz r11,0x0(r28)
    211c:	86 1c 00 04 	l.lwz r16,0x4(r28)
    2120:	9f 9c 00 08 	l.addi r28,r28,0x8
#ifndef _NO_LONGLONG
      if ((quad_t)_uquad < 0)
    2124:	bd 8b 00 00 	l.sfltsi r11,0x0
    2128:	10 00 01 4f 	l.bf 2664 <_min_stack+0x664>
    212c:	e0 6b 80 04 	l.or r3,r11,r16
    2130:	90 a1 00 53 	l.lbs r5,0x53(r1)
    2134:	e0 80 18 02 	l.sub r4,r0,r3
	  {
	    
	    _uquad = -_uquad;
	    sign = '-';
	  }
      base = DEC;
    2138:	9c c0 00 01 	l.addi r6,r0,0x1
      /*FALLTHROUGH*/
    case 'd':
    case 'i':
      _uquad = SARG();
#ifndef _NO_LONGLONG
      if ((quad_t)_uquad < 0)
    213c:	e0 64 18 04 	l.or r3,r4,r3
    2140:	03 ff fe cb 	l.j 1c6c <vfnprintf+0x17c>
    2144:	b8 83 00 5f 	l.srli r4,r3,0x1f
    case 'G':
      // Output nothing at all
      (void) va_arg(arg, double); // take off arg anyway
      cp = "";
      size = 0;
      sign = '\0';
    2148:	9c 80 00 00 	l.addi r4,r0,0x0
    case 'g':
    case 'G':
      // Output nothing at all
      (void) va_arg(arg, double); // take off arg anyway
      cp = "";
      size = 0;
    214c:	9d 00 00 00 	l.addi r8,r0,0x0
    case 'f':
    case 'g':
    case 'G':
      // Output nothing at all
      (void) va_arg(arg, double); // take off arg anyway
      cp = "";
    2150:	1b 00 00 00 	l.movhi r24,0x0
    case 'E':
    case 'f':
    case 'g':
    case 'G':
      // Output nothing at all
      (void) va_arg(arg, double); // take off arg anyway
    2154:	9f 9c 00 08 	l.addi r28,r28,0x8
      cp = "";
      size = 0;
      sign = '\0';
    2158:	d8 01 20 53 	l.sb 0x53(r1),r4
    case 'g':
    case 'G':
      // Output nothing at all
      (void) va_arg(arg, double); // take off arg anyway
      cp = "";
      size = 0;
    215c:	d4 01 40 04 	l.sw 0x4(r1),r8
      sign = '\0';
      break;
    2160:	03 ff fe a4 	l.j 1bf0 <vfnprintf+0x100>
    2164:	ab 18 61 83 	l.ori r24,r24,0x6183
    case 'u':
      _uquad = UARG();
      base = DEC;
      goto nosign;
    case 'X':
      xdigs = (char *)"0123456789ABCDEF";
    2168:	18 60 00 00 	l.movhi r3,0x0
      goto hex;
    case 'x':
      xdigs = (char *)"0123456789abcdef";
    hex:                    _uquad = UARG();
    216c:	a5 76 00 20 	l.andi r11,r22,0x20
    case 'u':
      _uquad = UARG();
      base = DEC;
      goto nosign;
    case 'X':
      xdigs = (char *)"0123456789ABCDEF";
    2170:	a8 63 62 af 	l.ori r3,r3,0x62af
      goto hex;
    case 'x':
      xdigs = (char *)"0123456789abcdef";
    hex:                    _uquad = UARG();
    2174:	bc 0b 00 00 	l.sfeqi r11,0x0
    2178:	0f ff ff 93 	l.bnf 1fc4 <vfnprintf+0x4d4>
    217c:	d4 01 18 18 	l.sw 0x18(r1),r3
    2180:	a4 76 00 10 	l.andi r3,r22,0x10
    2184:	bc 03 00 00 	l.sfeqi r3,0x0
    2188:	0c 00 01 1c 	l.bnf 25f8 <_min_stack+0x5f8>
    218c:	a4 96 00 40 	l.andi r4,r22,0x40
    2190:	bc 04 00 00 	l.sfeqi r4,0x0
    2194:	0c 00 01 64 	l.bnf 2724 <_min_stack+0x724>
    2198:	a9 63 00 00 	l.ori r11,r3,0x0
    219c:	a5 76 02 00 	l.andi r11,r22,0x200
    21a0:	bc 0b 00 00 	l.sfeqi r11,0x0
    21a4:	10 00 01 15 	l.bf 25f8 <_min_stack+0x5f8>
    21a8:	15 00 00 00 	l.nop 0x0
    21ac:	86 1c 00 00 	l.lwz r16,0x0(r28)
    21b0:	a9 64 00 00 	l.ori r11,r4,0x0
    21b4:	03 ff ff 87 	l.j 1fd0 <vfnprintf+0x4e0>
    21b8:	9f 9c 00 04 	l.addi r28,r28,0x4
      goto rflag;
    case 'q':
      flags |= QUADINT;
      goto rflag;
    case 'c':
      *(cp = buf) = va_arg(arg, int);
    21bc:	84 7c 00 00 	l.lwz r3,0x0(r28)
      size = 1;
    21c0:	9c 80 00 01 	l.addi r4,r0,0x1
      sign = '\0';
    21c4:	9d 00 00 00 	l.addi r8,r0,0x0
    case 'q':
      flags |= QUADINT;
      goto rflag;
    case 'c':
      *(cp = buf) = va_arg(arg, int);
      size = 1;
    21c8:	d4 01 20 04 	l.sw 0x4(r1),r4
      goto rflag;
    case 'q':
      flags |= QUADINT;
      goto rflag;
    case 'c':
      *(cp = buf) = va_arg(arg, int);
    21cc:	d8 01 18 24 	l.sb 0x24(r1),r3
      size = 1;
      sign = '\0';
    21d0:	d8 01 40 53 	l.sb 0x53(r1),r8
      goto rflag;
    case 'q':
      flags |= QUADINT;
      goto rflag;
    case 'c':
      *(cp = buf) = va_arg(arg, int);
    21d4:	9f 9c 00 04 	l.addi r28,r28,0x4
      size = 1;
      sign = '\0';
      break;
    21d8:	03 ff fe 86 	l.j 1bf0 <vfnprintf+0x100>
    21dc:	9f 01 00 24 	l.addi r24,r1,0x24
    case 'D':
      flags |= LONGINT;
      /*FALLTHROUGH*/
    case 'd':
    case 'i':
      _uquad = SARG();
    21e0:	a4 76 00 20 	l.andi r3,r22,0x20
    21e4:	bc 03 00 00 	l.sfeqi r3,0x0
    21e8:	0f ff ff cc 	l.bnf 2118 <_min_stack+0x118>
    21ec:	d8 01 28 53 	l.sb 0x53(r1),r5
    21f0:	a4 76 00 10 	l.andi r3,r22,0x10
    21f4:	bc 03 00 00 	l.sfeqi r3,0x0
    21f8:	0c 00 00 d4 	l.bnf 2548 <_min_stack+0x548>
    21fc:	a4 76 00 40 	l.andi r3,r22,0x40
    2200:	bc 03 00 00 	l.sfeqi r3,0x0
    2204:	10 00 00 d1 	l.bf 2548 <_min_stack+0x548>
    2208:	15 00 00 00 	l.nop 0x0
    220c:	85 7c 00 00 	l.lwz r11,0x0(r28)
    2210:	9f 9c 00 04 	l.addi r28,r28,0x4
    2214:	b9 6b 00 10 	l.slli r11,r11,0x10
    2218:	ba 0b 00 90 	l.srai r16,r11,0x10
    221c:	03 ff ff c2 	l.j 2124 <_min_stack+0x124>
    2220:	b9 6b 00 9f 	l.srai r11,r11,0x1f
    realsz = dprec > fieldsz ? dprec : fieldsz;
    
    /* right-adjusting blank padding */
    if ((flags & (LADJUST|ZEROPAD)) == 0) {
      if (width - realsz > 0) {
	PAD(width - realsz, blanks);
    2224:	86 01 00 14 	l.lwz r16,0x14(r1)
    2228:	18 60 00 00 	l.movhi r3,0x0
    222c:	a8 90 00 00 	l.ori r4,r16,0x0
    2230:	a8 63 63 b8 	l.ori r3,r3,0x63b8
    2234:	a8 b4 00 00 	l.ori r5,r20,0x0
    2238:	a8 ce 00 00 	l.ori r6,r14,0x0
    223c:	07 ff fe 0d 	l.jal 1a70 <print_back_to_string>
    2240:	a8 f2 00 00 	l.ori r7,r18,0x0
    2244:	bc 0b 00 00 	l.sfeqi r11,0x0
    2248:	0f ff fe d5 	l.bnf 1d9c <vfnprintf+0x2ac>
    224c:	84 61 00 4c 	l.lwz r3,0x4c(r1)
	ret += width - realsz;
    2250:	85 01 00 14 	l.lwz r8,0x14(r1)
    2254:	e0 63 40 00 	l.add r3,r3,r8
    2258:	d4 01 18 4c 	l.sw 0x4c(r1),r3
      }
    }
    
    /* prefix */
    if (sign) {
    225c:	90 81 00 53 	l.lbs r4,0x53(r1)
    2260:	bc 04 00 00 	l.sfeqi r4,0x0
    2264:	0c 00 00 56 	l.bnf 23bc <_min_stack+0x3bc>
    2268:	a4 96 00 02 	l.andi r4,r22,0x2
      //PRINT(&sign, 1);
      if(print_back_to_string(&sign, 1, &n, &ret, &stream))goto done;
      ret++;
    } else if (flags & HEXPREFIX) {
    226c:	bc 04 00 00 	l.sfeqi r4,0x0
    2270:	0c 00 00 7a 	l.bnf 2458 <_min_stack+0x458>
    2274:	9d 00 00 30 	l.addi r8,r0,0x30
      if(print_back_to_string(ox, 2, &n, &ret, &stream))goto done;
      ret += 2;
    }
    
    /* right-adjusting zero padding */
    if ((flags & (LADJUST|ZEROPAD)) == ZEROPAD) {
    2278:	84 61 00 08 	l.lwz r3,0x8(r1)
    227c:	bc 23 00 80 	l.sfnei r3,0x80
    2280:	0c 00 00 5f 	l.bnf 23fc <_min_stack+0x3fc>
    2284:	84 81 00 10 	l.lwz r4,0x10(r1)
	PAD(width - realsz, zeroes);
	ret += width - realsz;
      }
    }
    
    if (dprec - fieldsz > 0) {
    2288:	84 61 00 00 	l.lwz r3,0x0(r1)
    228c:	e3 de 18 02 	l.sub r30,r30,r3
    2290:	bd be 00 00 	l.sflesi r30,0x0
    2294:	10 00 00 20 	l.bf 2314 <_min_stack+0x314>
    2298:	bd be 00 10 	l.sflesi r30,0x10
      /* leading zeroes from decimal precision */
      PAD(dprec - fieldsz, zeroes);
    229c:	10 00 00 12 	l.bf 22e4 <_min_stack+0x2e4>
    22a0:	aa 1e 00 00 	l.ori r16,r30,0x0
    22a4:	00 00 00 05 	l.j 22b8 <_min_stack+0x2b8>
    22a8:	18 60 00 00 	l.movhi r3,0x0
    22ac:	bd 50 00 10 	l.sfgtsi r16,0x10
    22b0:	0c 00 00 0e 	l.bnf 22e8 <_min_stack+0x2e8>
    22b4:	18 60 00 00 	l.movhi r3,0x0
    22b8:	9c 80 00 10 	l.addi r4,r0,0x10
    22bc:	a8 63 63 a8 	l.ori r3,r3,0x63a8
    22c0:	a8 b4 00 00 	l.ori r5,r20,0x0
    22c4:	a8 ce 00 00 	l.ori r6,r14,0x0
    22c8:	07 ff fd ea 	l.jal 1a70 <print_back_to_string>
    22cc:	a8 f2 00 00 	l.ori r7,r18,0x0
    22d0:	bc 0b 00 00 	l.sfeqi r11,0x0
    22d4:	13 ff ff f6 	l.bf 22ac <_min_stack+0x2ac>
    22d8:	9e 10 ff f0 	l.addi r16,r16,0xfffffff0
    
    /* left-adjusting padding (always blank) */
    if (flags & LADJUST) {
      if (width - realsz > 0) {
	PAD(width - realsz, blanks);
	ret += width - realsz;
    22dc:	03 ff fe b1 	l.j 1da0 <vfnprintf+0x2b0>
    22e0:	85 61 00 4c 	l.lwz r11,0x4c(r1)
      }
    }
    
    if (dprec - fieldsz > 0) {
      /* leading zeroes from decimal precision */
      PAD(dprec - fieldsz, zeroes);
    22e4:	18 60 00 00 	l.movhi r3,0x0
    22e8:	a8 90 00 00 	l.ori r4,r16,0x0
    22ec:	a8 63 63 a8 	l.ori r3,r3,0x63a8
    22f0:	a8 b4 00 00 	l.ori r5,r20,0x0
    22f4:	a8 ce 00 00 	l.ori r6,r14,0x0
    22f8:	07 ff fd de 	l.jal 1a70 <print_back_to_string>
    22fc:	a8 f2 00 00 	l.ori r7,r18,0x0
    2300:	bc 0b 00 00 	l.sfeqi r11,0x0
    2304:	0f ff fe a6 	l.bnf 1d9c <vfnprintf+0x2ac>
    2308:	84 61 00 4c 	l.lwz r3,0x4c(r1)
      ret += dprec - fieldsz;
    230c:	e3 c3 f0 00 	l.add r30,r3,r30
    2310:	d4 01 f0 4c 	l.sw 0x4c(r1),r30
    }
    
    /* the string or number proper */
    //PRINT(cp, size);
    if(print_back_to_string(cp,size, &n, &ret, &stream))goto done;
    2314:	a8 78 00 00 	l.ori r3,r24,0x0
    2318:	84 81 00 04 	l.lwz r4,0x4(r1)
    231c:	a8 b4 00 00 	l.ori r5,r20,0x0
    2320:	a8 ce 00 00 	l.ori r6,r14,0x0
    2324:	07 ff fd d3 	l.jal 1a70 <print_back_to_string>
    2328:	a8 f2 00 00 	l.ori r7,r18,0x0
    232c:	bc 0b 00 00 	l.sfeqi r11,0x0
    2330:	0f ff fe 9b 	l.bnf 1d9c <vfnprintf+0x2ac>
    2334:	84 81 00 4c 	l.lwz r4,0x4c(r1)
    ret += size;
    2338:	85 01 00 04 	l.lwz r8,0x4(r1)
    PAD(fpprec, zeroes);
    ret += fpprec;
#endif
    
    /* left-adjusting padding (always blank) */
    if (flags & LADJUST) {
    233c:	a6 d6 00 04 	l.andi r22,r22,0x4
    }
    
    /* the string or number proper */
    //PRINT(cp, size);
    if(print_back_to_string(cp,size, &n, &ret, &stream))goto done;
    ret += size;
    2340:	e0 84 40 00 	l.add r4,r4,r8
    PAD(fpprec, zeroes);
    ret += fpprec;
#endif
    
    /* left-adjusting padding (always blank) */
    if (flags & LADJUST) {
    2344:	bc 16 00 00 	l.sfeqi r22,0x0
    2348:	13 ff fe 01 	l.bf 1b4c <vfnprintf+0x5c>
    234c:	d4 01 20 4c 	l.sw 0x4c(r1),r4
      if (width - realsz > 0) {
    2350:	84 61 00 10 	l.lwz r3,0x10(r1)
    2354:	84 81 00 0c 	l.lwz r4,0xc(r1)
    2358:	e2 c3 20 02 	l.sub r22,r3,r4
    235c:	bd b6 00 00 	l.sflesi r22,0x0
    2360:	13 ff fd fb 	l.bf 1b4c <vfnprintf+0x5c>
    2364:	bd b6 00 10 	l.sflesi r22,0x10
	PAD(width - realsz, blanks);
    2368:	10 00 00 7c 	l.bf 2558 <_min_stack+0x558>
    236c:	aa 16 00 00 	l.ori r16,r22,0x0
    2370:	00 00 00 05 	l.j 2384 <_min_stack+0x384>
    2374:	18 60 00 00 	l.movhi r3,0x0
    2378:	bd 50 00 10 	l.sfgtsi r16,0x10
    237c:	0c 00 00 78 	l.bnf 255c <_min_stack+0x55c>
    2380:	18 60 00 00 	l.movhi r3,0x0
    2384:	9c 80 00 10 	l.addi r4,r0,0x10
    2388:	a8 63 63 b8 	l.ori r3,r3,0x63b8
    238c:	a8 b4 00 00 	l.ori r5,r20,0x0
    2390:	a8 ce 00 00 	l.ori r6,r14,0x0
    2394:	07 ff fd b7 	l.jal 1a70 <print_back_to_string>
    2398:	a8 f2 00 00 	l.ori r7,r18,0x0
    239c:	bc 0b 00 00 	l.sfeqi r11,0x0
    23a0:	13 ff ff f6 	l.bf 2378 <_min_stack+0x378>
    23a4:	9e 10 ff f0 	l.addi r16,r16,0xfffffff0
	ret += width - realsz;
    23a8:	03 ff fe 7e 	l.j 1da0 <vfnprintf+0x2b0>
    23ac:	85 61 00 4c 	l.lwz r11,0x4c(r1)
       * ``The result of converting a zero value with an
       * explicit precision of zero is no characters.''
       *      -- ANSI X3J11
       */
      cp = buf + BUF;
      if (_uquad != 0 || prec != 0) {
    23b0:	d4 01 20 04 	l.sw 0x4(r1),r4
      /*
       * ``The result of converting a zero value with an
       * explicit precision of zero is no characters.''
       *      -- ANSI X3J11
       */
      cp = buf + BUF;
    23b4:	03 ff fe 55 	l.j 1d08 <vfnprintf+0x218>
    23b8:	ab 0e 00 00 	l.ori r24,r14,0x0
    }
    
    /* prefix */
    if (sign) {
      //PRINT(&sign, 1);
      if(print_back_to_string(&sign, 1, &n, &ret, &stream))goto done;
    23bc:	9c 61 00 53 	l.addi r3,r1,0x53
    23c0:	9c 80 00 01 	l.addi r4,r0,0x1
    23c4:	a8 b4 00 00 	l.ori r5,r20,0x0
    23c8:	a8 ce 00 00 	l.ori r6,r14,0x0
    23cc:	07 ff fd a9 	l.jal 1a70 <print_back_to_string>
    23d0:	a8 f2 00 00 	l.ori r7,r18,0x0
    23d4:	bc 0b 00 00 	l.sfeqi r11,0x0
    23d8:	0f ff fe 71 	l.bnf 1d9c <vfnprintf+0x2ac>
    23dc:	84 61 00 4c 	l.lwz r3,0x4c(r1)
      ret++;
    23e0:	9c 63 00 01 	l.addi r3,r3,0x1
    23e4:	d4 01 18 4c 	l.sw 0x4c(r1),r3
      if(print_back_to_string(ox, 2, &n, &ret, &stream))goto done;
      ret += 2;
    }
    
    /* right-adjusting zero padding */
    if ((flags & (LADJUST|ZEROPAD)) == ZEROPAD) {
    23e8:	84 61 00 08 	l.lwz r3,0x8(r1)
    23ec:	bc 23 00 80 	l.sfnei r3,0x80
    23f0:	13 ff ff a7 	l.bf 228c <_min_stack+0x28c>
    23f4:	84 61 00 00 	l.lwz r3,0x0(r1)
      if (width - realsz > 0) {
    23f8:	84 81 00 10 	l.lwz r4,0x10(r1)
    23fc:	85 01 00 0c 	l.lwz r8,0xc(r1)
    2400:	e3 44 40 02 	l.sub r26,r4,r8
    2404:	bd ba 00 00 	l.sflesi r26,0x0
    2408:	13 ff ff a0 	l.bf 2288 <_min_stack+0x288>
    240c:	bd ba 00 10 	l.sflesi r26,0x10
	PAD(width - realsz, zeroes);
    2410:	10 00 00 5f 	l.bf 258c <_min_stack+0x58c>
    2414:	aa 1a 00 00 	l.ori r16,r26,0x0
    2418:	00 00 00 05 	l.j 242c <_min_stack+0x42c>
    241c:	18 60 00 00 	l.movhi r3,0x0
    2420:	bd 50 00 10 	l.sfgtsi r16,0x10
    2424:	0c 00 00 5b 	l.bnf 2590 <_min_stack+0x590>
    2428:	18 60 00 00 	l.movhi r3,0x0
    242c:	9c 80 00 10 	l.addi r4,r0,0x10
    2430:	a8 63 63 a8 	l.ori r3,r3,0x63a8
    2434:	a8 b4 00 00 	l.ori r5,r20,0x0
    2438:	a8 ce 00 00 	l.ori r6,r14,0x0
    243c:	07 ff fd 8d 	l.jal 1a70 <print_back_to_string>
    2440:	a8 f2 00 00 	l.ori r7,r18,0x0
    2444:	bc 0b 00 00 	l.sfeqi r11,0x0
    2448:	13 ff ff f6 	l.bf 2420 <_min_stack+0x420>
    244c:	9e 10 ff f0 	l.addi r16,r16,0xfffffff0
    
    /* left-adjusting padding (always blank) */
    if (flags & LADJUST) {
      if (width - realsz > 0) {
	PAD(width - realsz, blanks);
	ret += width - realsz;
    2450:	03 ff fe 54 	l.j 1da0 <vfnprintf+0x2b0>
    2454:	85 61 00 4c 	l.lwz r11,0x4c(r1)
      ret++;
    } else if (flags & HEXPREFIX) {
      ox[0] = '0';
      ox[1] = ch;
      //PRINT(ox, 2);
      if(print_back_to_string(ox, 2, &n, &ret, &stream))goto done;
    2458:	9c 61 00 50 	l.addi r3,r1,0x50
    245c:	9c 80 00 02 	l.addi r4,r0,0x2
    2460:	a8 b4 00 00 	l.ori r5,r20,0x0
    2464:	a8 ce 00 00 	l.ori r6,r14,0x0
    2468:	a8 f2 00 00 	l.ori r7,r18,0x0
    if (sign) {
      //PRINT(&sign, 1);
      if(print_back_to_string(&sign, 1, &n, &ret, &stream))goto done;
      ret++;
    } else if (flags & HEXPREFIX) {
      ox[0] = '0';
    246c:	d8 01 40 50 	l.sb 0x50(r1),r8
      ox[1] = ch;
      //PRINT(ox, 2);
      if(print_back_to_string(ox, 2, &n, &ret, &stream))goto done;
    2470:	07 ff fd 80 	l.jal 1a70 <print_back_to_string>
    2474:	d8 01 d0 51 	l.sb 0x51(r1),r26
    2478:	bc 0b 00 00 	l.sfeqi r11,0x0
    247c:	0f ff fe 48 	l.bnf 1d9c <vfnprintf+0x2ac>
    2480:	84 61 00 4c 	l.lwz r3,0x4c(r1)
      ret += 2;
    2484:	9c 63 00 02 	l.addi r3,r3,0x2
    2488:	03 ff ff 7c 	l.j 2278 <_min_stack+0x278>
    248c:	d4 01 18 4c 	l.sw 0x4c(r1),r3
	  break;
	  
	case HEX:
	  do {
	    *--cp = xdigs[_uquad & 15];
	    _uquad >>= 4;
    2490:	b8 b0 00 44 	l.srli r5,r16,0x4
	  }
	  break;
	  
	case HEX:
	  do {
	    *--cp = xdigs[_uquad & 15];
    2494:	85 01 00 18 	l.lwz r8,0x18(r1)
    2498:	a6 10 00 0f 	l.andi r16,r16,0xf
	    _uquad >>= 4;
    249c:	b8 cb 00 1c 	l.slli r6,r11,0x1c
	  }
	  break;
	  
	case HEX:
	  do {
	    *--cp = xdigs[_uquad & 15];
    24a0:	e0 88 80 00 	l.add r4,r8,r16
	    _uquad >>= 4;
    24a4:	b9 6b 00 44 	l.srli r11,r11,0x4
	  }
	  break;
	  
	case HEX:
	  do {
	    *--cp = xdigs[_uquad & 15];
    24a8:	8c 84 00 00 	l.lbz r4,0x0(r4)
    24ac:	9f 18 ff ff 	l.addi r24,r24,0xffffffff
	    _uquad >>= 4;
    24b0:	e2 06 28 04 	l.or r16,r6,r5
	  }
	  break;
	  
	case HEX:
	  do {
	    *--cp = xdigs[_uquad & 15];
    24b4:	d8 18 20 00 	l.sb 0x0(r24),r4
	    _uquad >>= 4;
	  } while (_uquad);
    24b8:	e0 8b 80 04 	l.or r4,r11,r16
    24bc:	bc 24 00 00 	l.sfnei r4,0x0
    24c0:	13 ff ff f4 	l.bf 2490 <_min_stack+0x490>
    24c4:	e0 6e c0 02 	l.sub r3,r14,r24
    24c8:	90 a1 00 53 	l.lbs r5,0x53(r1)
    24cc:	03 ff fe 0f 	l.j 1d08 <vfnprintf+0x218>
    24d0:	d4 01 18 04 	l.sw 0x4(r1),r3
	  if (flags & ALT && *cp != '0')
	    *--cp = '0';
	  break;
	  
	case DEC:
	  if (!(flags & QUADINT)) {
    24d4:	a4 76 00 20 	l.andi r3,r22,0x20
    24d8:	bc 03 00 00 	l.sfeqi r3,0x0
    24dc:	10 00 00 4a 	l.bf 2604 <_min_stack+0x604>
    24e0:	bc b0 00 09 	l.sfleui r16,0x9
	      v = next;
	    }
	    *--cp = to_char(v);
	  }
	  else {
	    while (_uquad >= 10) {
    24e4:	bc 2b 00 00 	l.sfnei r11,0x0
    24e8:	0c 00 00 93 	l.bnf 2734 <_min_stack+0x734>
    24ec:	bc 50 00 09 	l.sfgtui r16,0x9
      /*
       * ``The result of converting a zero value with an
       * explicit precision of zero is no characters.''
       *      -- ANSI X3J11
       */
      cp = buf + BUF;
    24f0:	ab 0e 00 00 	l.ori r24,r14,0x0
	    *--cp = to_char(v);
	  }
	  else {
	    while (_uquad >= 10) {
	      /* The following is usually faster than using a modulo */
	      u_quad_t next = _uquad / 10;
    24f4:	a8 90 00 00 	l.ori r4,r16,0x0
    24f8:	9c a0 00 00 	l.addi r5,r0,0x0
    24fc:	a8 6b 00 00 	l.ori r3,r11,0x0
    2500:	9c c0 00 0a 	l.addi r6,r0,0xa
    2504:	04 00 01 65 	l.jal 2a98 <__udivdi3>
    2508:	9e 10 00 30 	l.addi r16,r16,0x30
	      *--cp = to_char(_uquad - (next * 10));
    250c:	e0 8c 60 00 	l.add r4,r12,r12
    2510:	9f 18 ff ff 	l.addi r24,r24,0xffffffff
    2514:	b8 a4 00 02 	l.slli r5,r4,0x2
	      v = next;
	    }
	    *--cp = to_char(v);
	  }
	  else {
	    while (_uquad >= 10) {
    2518:	bc 2b 00 00 	l.sfnei r11,0x0
	      /* The following is usually faster than using a modulo */
	      u_quad_t next = _uquad / 10;
	      *--cp = to_char(_uquad - (next * 10));
    251c:	e0 84 28 00 	l.add r4,r4,r5
    2520:	e0 90 20 02 	l.sub r4,r16,r4
	      v = next;
	    }
	    *--cp = to_char(v);
	  }
	  else {
	    while (_uquad >= 10) {
    2524:	0c 00 00 04 	l.bnf 2534 <_min_stack+0x534>
    2528:	d8 18 20 00 	l.sb 0x0(r24),r4
	      /* The following is usually faster than using a modulo */
	      u_quad_t next = _uquad / 10;
    252c:	03 ff ff f2 	l.j 24f4 <_min_stack+0x4f4>
    2530:	aa 0c 00 00 	l.ori r16,r12,0x0
	      v = next;
	    }
	    *--cp = to_char(v);
	  }
	  else {
	    while (_uquad >= 10) {
    2534:	bc 4c 00 09 	l.sfgtui r12,0x9
    2538:	13 ff ff fd 	l.bf 252c <_min_stack+0x52c>
    253c:	15 00 00 00 	l.nop 0x0
	      /* The following is usually faster than using a modulo */
	      u_quad_t next = _uquad / 10;
    2540:	00 00 00 7f 	l.j 273c <_min_stack+0x73c>
    2544:	aa 0c 00 00 	l.ori r16,r12,0x0
    case 'D':
      flags |= LONGINT;
      /*FALLTHROUGH*/
    case 'd':
    case 'i':
      _uquad = SARG();
    2548:	86 1c 00 00 	l.lwz r16,0x0(r28)
    254c:	9f 9c 00 04 	l.addi r28,r28,0x4
    2550:	03 ff fe f5 	l.j 2124 <_min_stack+0x124>
    2554:	b9 70 00 9f 	l.srai r11,r16,0x1f
#endif
    
    /* left-adjusting padding (always blank) */
    if (flags & LADJUST) {
      if (width - realsz > 0) {
	PAD(width - realsz, blanks);
    2558:	18 60 00 00 	l.movhi r3,0x0
    255c:	a8 90 00 00 	l.ori r4,r16,0x0
    2560:	a8 63 63 b8 	l.ori r3,r3,0x63b8
    2564:	a8 b4 00 00 	l.ori r5,r20,0x0
    2568:	a8 ce 00 00 	l.ori r6,r14,0x0
    256c:	07 ff fd 41 	l.jal 1a70 <print_back_to_string>
    2570:	a8 f2 00 00 	l.ori r7,r18,0x0
    2574:	bc 0b 00 00 	l.sfeqi r11,0x0
    2578:	0f ff fe 09 	l.bnf 1d9c <vfnprintf+0x2ac>
    257c:	84 61 00 4c 	l.lwz r3,0x4c(r1)
	ret += width - realsz;
    2580:	e2 c3 b0 00 	l.add r22,r3,r22
    2584:	03 ff fd 72 	l.j 1b4c <vfnprintf+0x5c>
    2588:	d4 01 b0 4c 	l.sw 0x4c(r1),r22
    }
    
    /* right-adjusting zero padding */
    if ((flags & (LADJUST|ZEROPAD)) == ZEROPAD) {
      if (width - realsz > 0) {
	PAD(width - realsz, zeroes);
    258c:	18 60 00 00 	l.movhi r3,0x0
    2590:	a8 90 00 00 	l.ori r4,r16,0x0
    2594:	a8 63 63 a8 	l.ori r3,r3,0x63a8
    2598:	a8 b4 00 00 	l.ori r5,r20,0x0
    259c:	a8 ce 00 00 	l.ori r6,r14,0x0
    25a0:	07 ff fd 34 	l.jal 1a70 <print_back_to_string>
    25a4:	a8 f2 00 00 	l.ori r7,r18,0x0
    25a8:	bc 0b 00 00 	l.sfeqi r11,0x0
    25ac:	0f ff fd fc 	l.bnf 1d9c <vfnprintf+0x2ac>
    25b0:	84 61 00 4c 	l.lwz r3,0x4c(r1)
	ret += width - realsz;
    25b4:	e3 43 d0 00 	l.add r26,r3,r26
    25b8:	03 ff ff 34 	l.j 2288 <_min_stack+0x288>
    25bc:	d4 01 d0 4c 	l.sw 0x4c(r1),r26
      continue;       /* no output */
    case 'O':
      flags |= LONGINT;
      /*FALLTHROUGH*/
    case 'o':
      _uquad = UARG();
    25c0:	86 1c 00 00 	l.lwz r16,0x0(r28)
    25c4:	e0 80 80 02 	l.sub r4,r0,r16
    25c8:	9f 9c 00 04 	l.addi r28,r28,0x4
    25cc:	e0 84 80 04 	l.or r4,r4,r16
      base = OCT;
    25d0:	a8 cb 00 00 	l.ori r6,r11,0x0
      continue;       /* no output */
    case 'O':
      flags |= LONGINT;
      /*FALLTHROUGH*/
    case 'o':
      _uquad = UARG();
    25d4:	03 ff fd a3 	l.j 1c60 <vfnprintf+0x170>
    25d8:	b8 84 00 5f 	l.srli r4,r4,0x1f
      break;
    case 'U':
      flags |= LONGINT;
      /*FALLTHROUGH*/
    case 'u':
      _uquad = UARG();
    25dc:	86 1c 00 00 	l.lwz r16,0x0(r28)
    25e0:	e0 80 80 02 	l.sub r4,r0,r16
    25e4:	9f 9c 00 04 	l.addi r28,r28,0x4
    25e8:	e0 84 80 04 	l.or r4,r4,r16
      base = DEC;
    25ec:	9c c0 00 01 	l.addi r6,r0,0x1
      break;
    case 'U':
      flags |= LONGINT;
      /*FALLTHROUGH*/
    case 'u':
      _uquad = UARG();
    25f0:	03 ff fd 9c 	l.j 1c60 <vfnprintf+0x170>
    25f4:	b8 84 00 5f 	l.srli r4,r4,0x1f
    case 'X':
      xdigs = (char *)"0123456789ABCDEF";
      goto hex;
    case 'x':
      xdigs = (char *)"0123456789abcdef";
    hex:                    _uquad = UARG();
    25f8:	86 1c 00 00 	l.lwz r16,0x0(r28)
    25fc:	03 ff fe 75 	l.j 1fd0 <vfnprintf+0x4e0>
    2600:	9f 9c 00 04 	l.addi r28,r28,0x4
	  
	case DEC:
	  if (!(flags & QUADINT)) {
	    /* many numbers are 1 digit */
	    unsigned long v = (unsigned long)_uquad;
	    while (v >= 10) {
    2604:	0c 00 00 05 	l.bnf 2618 <_min_stack+0x618>
    2608:	ab 0e 00 00 	l.ori r24,r14,0x0
	      /* The following is usually faster than using a modulo */
	      unsigned long next = v / 10;
	      *--cp = to_char(v - (next * 10));
	      v = next;
	    }
	    *--cp = to_char(v);
    260c:	00 00 00 10 	l.j 264c <_min_stack+0x64c>
    2610:	9f 18 ff ff 	l.addi r24,r24,0xffffffff
	  if (!(flags & QUADINT)) {
	    /* many numbers are 1 digit */
	    unsigned long v = (unsigned long)_uquad;
	    while (v >= 10) {
	      /* The following is usually faster than using a modulo */
	      unsigned long next = v / 10;
    2614:	aa 04 00 00 	l.ori r16,r4,0x0
    2618:	9d 00 00 0a 	l.addi r8,r0,0xa
	      *--cp = to_char(v - (next * 10));
    261c:	9f 18 ff ff 	l.addi r24,r24,0xffffffff
	  if (!(flags & QUADINT)) {
	    /* many numbers are 1 digit */
	    unsigned long v = (unsigned long)_uquad;
	    while (v >= 10) {
	      /* The following is usually faster than using a modulo */
	      unsigned long next = v / 10;
    2620:	e0 90 43 0a 	l.divu r4,r16,r8
	      *--cp = to_char(v - (next * 10));
    2624:	e0 a4 20 00 	l.add r5,r4,r4
    2628:	9e 10 00 30 	l.addi r16,r16,0x30
    262c:	b8 c5 00 02 	l.slli r6,r5,0x2
	  
	case DEC:
	  if (!(flags & QUADINT)) {
	    /* many numbers are 1 digit */
	    unsigned long v = (unsigned long)_uquad;
	    while (v >= 10) {
    2630:	bc 44 00 09 	l.sfgtui r4,0x9
	      /* The following is usually faster than using a modulo */
	      unsigned long next = v / 10;
	      *--cp = to_char(v - (next * 10));
    2634:	e0 a5 30 00 	l.add r5,r5,r6
    2638:	e2 10 28 02 	l.sub r16,r16,r5
	  
	case DEC:
	  if (!(flags & QUADINT)) {
	    /* many numbers are 1 digit */
	    unsigned long v = (unsigned long)_uquad;
	    while (v >= 10) {
    263c:	13 ff ff f6 	l.bf 2614 <_min_stack+0x614>
    2640:	d8 18 80 00 	l.sb 0x0(r24),r16
	      /* The following is usually faster than using a modulo */
	      unsigned long next = v / 10;
    2644:	aa 04 00 00 	l.ori r16,r4,0x0
	      *--cp = to_char(v - (next * 10));
	      v = next;
	    }
	    *--cp = to_char(v);
    2648:	9f 18 ff ff 	l.addi r24,r24,0xffffffff
    264c:	9e 10 00 30 	l.addi r16,r16,0x30
    2650:	e0 6e c0 02 	l.sub r3,r14,r24
    2654:	d4 01 18 04 	l.sw 0x4(r1),r3
    2658:	d8 18 80 00 	l.sb 0x0(r24),r16
    265c:	03 ff fd ab 	l.j 1d08 <vfnprintf+0x218>
    2660:	90 a1 00 53 	l.lbs r5,0x53(r1)
#else
	if ((long) _uquad < 0)
#endif
	  {
	    
	    _uquad = -_uquad;
    2664:	e2 00 80 02 	l.sub r16,r0,r16
    2668:	bc 50 00 00 	l.sfgtui r16,0x0
    266c:	0c 00 00 1e 	l.bnf 26e4 <_min_stack+0x6e4>
    2670:	9c 60 00 01 	l.addi r3,r0,0x1
    2674:	e1 60 58 02 	l.sub r11,r0,r11
	    sign = '-';
    2678:	9c a0 00 2d 	l.addi r5,r0,0x2d
#else
	if ((long) _uquad < 0)
#endif
	  {
	    
	    _uquad = -_uquad;
    267c:	e1 6b 18 02 	l.sub r11,r11,r3
	    sign = '-';
    2680:	9c 60 00 2d 	l.addi r3,r0,0x2d
	  }
      base = DEC;
    2684:	9c c0 00 01 	l.addi r6,r0,0x1
	if ((long) _uquad < 0)
#endif
	  {
	    
	    _uquad = -_uquad;
	    sign = '-';
    2688:	d8 01 18 53 	l.sb 0x53(r1),r3
    268c:	e0 6b 80 04 	l.or r3,r11,r16
    2690:	e0 80 18 02 	l.sub r4,r0,r3
    2694:	e0 64 18 04 	l.or r3,r4,r3
    2698:	03 ff fd 75 	l.j 1c6c <vfnprintf+0x17c>
    269c:	b8 83 00 5f 	l.srli r4,r3,0x1f
#ifndef _NO_LONGLONG
      if (flags & QUADINT)
	*va_arg(arg, quad_t *) = ret;
      else 
#endif
	if (flags & LONGINT)
    26a0:	a4 76 00 10 	l.andi r3,r22,0x10
    26a4:	bc 03 00 00 	l.sfeqi r3,0x0
    26a8:	0c 00 00 09 	l.bnf 26cc <_min_stack+0x6cc>
    26ac:	a4 76 00 40 	l.andi r3,r22,0x40
	  *va_arg(arg, long *) = ret;
	else if (flags & SHORTINT)
    26b0:	bc 03 00 00 	l.sfeqi r3,0x0
    26b4:	10 00 00 06 	l.bf 26cc <_min_stack+0x6cc>
    26b8:	15 00 00 00 	l.nop 0x0
	  *va_arg(arg, short *) = ret;
    26bc:	84 7c 00 00 	l.lwz r3,0x0(r28)
    26c0:	9f 9c 00 04 	l.addi r28,r28,0x4
    26c4:	03 ff fd 22 	l.j 1b4c <vfnprintf+0x5c>
    26c8:	dc 03 30 00 	l.sh 0x0(r3),r6
	else if (flags & SIZET)
	  *va_arg(arg, size_t *) = ret;
	else
	  *va_arg(arg, int *) = ret;
    26cc:	84 7c 00 00 	l.lwz r3,0x0(r28)
    26d0:	9f 9c 00 04 	l.addi r28,r28,0x4
    26d4:	03 ff fd 1e 	l.j 1b4c <vfnprintf+0x5c>
    26d8:	d4 03 30 00 	l.sw 0x0(r3),r6
	 * strlen() will go further.
	 */
	char *p = (char *)memchr(cp, 0, prec);
	
	if (p != NULL) {
	  size = p - cp;
    26dc:	03 ff fe 30 	l.j 1f9c <vfnprintf+0x4ac>
    26e0:	d4 01 f0 04 	l.sw 0x4(r1),r30
#else
	if ((long) _uquad < 0)
#endif
	  {
	    
	    _uquad = -_uquad;
    26e4:	03 ff ff e4 	l.j 2674 <_min_stack+0x674>
    26e8:	9c 60 00 00 	l.addi r3,r0,0x0
      break;
    case 'U':
      flags |= LONGINT;
      /*FALLTHROUGH*/
    case 'u':
      _uquad = UARG();
    26ec:	86 1c 00 00 	l.lwz r16,0x0(r28)
    26f0:	a6 10 ff ff 	l.andi r16,r16,0xffff
    26f4:	9f 9c 00 04 	l.addi r28,r28,0x4
    26f8:	e0 80 80 02 	l.sub r4,r0,r16
      base = DEC;
    26fc:	9c c0 00 01 	l.addi r6,r0,0x1
      break;
    case 'U':
      flags |= LONGINT;
      /*FALLTHROUGH*/
    case 'u':
      _uquad = UARG();
    2700:	03 ff fd 58 	l.j 1c60 <vfnprintf+0x170>
    2704:	b8 84 00 5f 	l.srli r4,r4,0x1f
      continue;       /* no output */
    case 'O':
      flags |= LONGINT;
      /*FALLTHROUGH*/
    case 'o':
      _uquad = UARG();
    2708:	86 1c 00 00 	l.lwz r16,0x0(r28)
    270c:	a6 10 ff ff 	l.andi r16,r16,0xffff
    2710:	9f 9c 00 04 	l.addi r28,r28,0x4
    2714:	e0 80 80 02 	l.sub r4,r0,r16
      base = OCT;
    2718:	a8 c3 00 00 	l.ori r6,r3,0x0
      continue;       /* no output */
    case 'O':
      flags |= LONGINT;
      /*FALLTHROUGH*/
    case 'o':
      _uquad = UARG();
    271c:	03 ff fd 51 	l.j 1c60 <vfnprintf+0x170>
    2720:	b8 84 00 5f 	l.srli r4,r4,0x1f
    case 'X':
      xdigs = (char *)"0123456789ABCDEF";
      goto hex;
    case 'x':
      xdigs = (char *)"0123456789abcdef";
    hex:                    _uquad = UARG();
    2724:	86 1c 00 00 	l.lwz r16,0x0(r28)
    2728:	a6 10 ff ff 	l.andi r16,r16,0xffff
    272c:	03 ff fe 29 	l.j 1fd0 <vfnprintf+0x4e0>
    2730:	9f 9c 00 04 	l.addi r28,r28,0x4
	      v = next;
	    }
	    *--cp = to_char(v);
	  }
	  else {
	    while (_uquad >= 10) {
    2734:	13 ff ff 6f 	l.bf 24f0 <_min_stack+0x4f0>
    2738:	ab 0e 00 00 	l.ori r24,r14,0x0
	      /* The following is usually faster than using a modulo */
	      u_quad_t next = _uquad / 10;
	      *--cp = to_char(_uquad - (next * 10));
	      _uquad = next;
	    }
	    *--cp = to_char(_uquad);
    273c:	9f 18 ff ff 	l.addi r24,r24,0xffffffff
    2740:	9e 10 00 30 	l.addi r16,r16,0x30
    2744:	e0 8e c0 02 	l.sub r4,r14,r24
    2748:	d4 01 20 04 	l.sw 0x4(r1),r4
    274c:	d8 18 80 00 	l.sb 0x0(r24),r16
    2750:	03 ff fd 6e 	l.j 1d08 <vfnprintf+0x218>
    2754:	90 a1 00 53 	l.lbs r5,0x53(r1)
      break;
    case 'z':
      flags |= SIZET;
      goto rflag;
    default:        /* "%?" prints ?, unless ? is NUL */
      if (ch == '\0')
    2758:	03 ff fd 92 	l.j 1da0 <vfnprintf+0x2b0>
    275c:	a9 66 00 00 	l.ori r11,r6,0x0
    case 'h':
      flags |= SHORTINT;
      goto rflag;
    case 'l':
      if (*fmt == 'l') {
	fmt++;
    2760:	9c 42 00 01 	l.addi r2,r2,0x1
	flags |= QUADINT;
    2764:	aa d6 00 20 	l.ori r22,r22,0x20
    2768:	03 ff fd 15 	l.j 1bbc <vfnprintf+0xcc>
    276c:	93 42 00 00 	l.lbs r26,0x0(r2)
	  if (size > prec)
	    size = prec;
	} else
	  size = prec;
      } else
	size = strlen(cp);
    2770:	04 00 00 90 	l.jal 29b0 <strlen>
    2774:	a8 78 00 00 	l.ori r3,r24,0x0
    2778:	03 ff fe 09 	l.j 1f9c <vfnprintf+0x4ac>
    277c:	d4 01 58 04 	l.sw 0x4(r1),r11
	  do {
	    *--cp = to_char(_uquad & 7);
	    _uquad >>= 3;
	  } while (_uquad);
	  /* handle octal leading 0 */
	  if (flags & ALT && *cp != '0')
    2780:	e0 8e c0 02 	l.sub r4,r14,r24
    2784:	90 a1 00 53 	l.lbs r5,0x53(r1)
    2788:	03 ff fd 60 	l.j 1d08 <vfnprintf+0x218>
    278c:	d4 01 20 04 	l.sw 0x4(r1),r4
      flags |= HEXPREFIX;
      ch = 'x';
      goto nosign;
    case 's':
      if ((cp = va_arg(arg, char *)) == NULL)
	cp = (char *)"(null)";
    2790:	1b 00 00 00 	l.movhi r24,0x0
    2794:	03 ff fd f4 	l.j 1f64 <vfnprintf+0x474>
    2798:	ab 18 62 a8 	l.ori r24,r24,0x62a8

0000279c <sprintf>:
  /* NOTREACHED */
}

int
sprintf(char* str, const char *fmt, ...)
{
    279c:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
    27a0:	9c 21 ff fc 	l.addi r1,r1,0xfffffffc
    27a4:	a8 a4 00 00 	l.ori r5,r4,0x0
	va_list args;
	
	va_start(args, fmt);

	return vfnprintf(str, 1024, fmt, args);
    27a8:	9c c1 00 04 	l.addi r6,r1,0x4
    27ac:	07 ff fc d1 	l.jal 1af0 <vfnprintf>
    27b0:	9c 80 04 00 	l.addi r4,r0,0x400
	
}
    27b4:	9c 21 00 04 	l.addi r1,r1,0x4
    27b8:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    27bc:	44 00 48 00 	l.jr r9
    27c0:	15 00 00 00 	l.nop 0x0

000027c4 <printf_to_sim>:
// Actual printf function we call, with static buffer of 512 bytes
char PRINTFBUFFER[PRINTFBUFFER_SIZE]; // Declare a global printf buffer

int 
printf_to_sim(const char *fmt, ...)
{
    27c4:	d7 e1 77 f8 	l.sw 0xfffffff8(r1),r14
    27c8:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
    27cc:	d7 e1 17 f4 	l.sw 0xfffffff4(r1),r2
    27d0:	a8 a3 00 00 	l.ori r5,r3,0x0
    27d4:	9c 21 ff f4 	l.addi r1,r1,0xfffffff4

  va_list args;
  va_start(args, fmt);
  
  int str_l = vfnprintf(PRINTFBUFFER, PRINTFBUFFER_SIZE, fmt, args);
    27d8:	18 60 00 00 	l.movhi r3,0x0
    27dc:	9c 80 02 00 	l.addi r4,r0,0x200
    27e0:	a8 63 64 fc 	l.ori r3,r3,0x64fc
    27e4:	07 ff fc c3 	l.jal 1af0 <vfnprintf>
    27e8:	9c c1 00 0c 	l.addi r6,r1,0xc
  
  if (!str_l) return -1; // no length string - just return
    27ec:	bc 0b 00 00 	l.sfeqi r11,0x0
    27f0:	10 00 00 14 	l.bf 2840 <printf_to_sim+0x7c>
    27f4:	a9 cb 00 00 	l.ori r14,r11,0x0

  char c;
  int i=0;
  while(i<str_l)  sim_putc(PRINTFBUFFER[i++]);
    27f8:	bd ab 00 00 	l.sflesi r11,0x0
    27fc:	10 00 00 0b 	l.bf 2828 <printf_to_sim+0x64>
    2800:	9c 40 00 00 	l.addi r2,r0,0x0
#include "cpu-utils.h"
// Actual printf function we call, with static buffer of 512 bytes
char PRINTFBUFFER[PRINTFBUFFER_SIZE]; // Declare a global printf buffer

int 
printf_to_sim(const char *fmt, ...)
    2804:	18 80 00 00 	l.movhi r4,0x0
    2808:	a8 84 64 fc 	l.ori r4,r4,0x64fc
    280c:	e0 62 20 00 	l.add r3,r2,r4
  
  if (!str_l) return -1; // no length string - just return

  char c;
  int i=0;
  while(i<str_l)  sim_putc(PRINTFBUFFER[i++]);
    2810:	9c 42 00 01 	l.addi r2,r2,0x1
    2814:	07 ff fb 29 	l.jal 14b8 <sim_putc>
    2818:	8c 63 00 00 	l.lbz r3,0x0(r3)
    281c:	e5 4e 10 00 	l.sfgts r14,r2
    2820:	13 ff ff fa 	l.bf 2808 <printf_to_sim+0x44>
    2824:	18 80 00 00 	l.movhi r4,0x0
  
  va_end(args);

  return str_l;
}
    2828:	9c 21 00 0c 	l.addi r1,r1,0xc
    282c:	a9 6e 00 00 	l.ori r11,r14,0x0
    2830:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    2834:	84 41 ff f4 	l.lwz r2,0xfffffff4(r1)
    2838:	44 00 48 00 	l.jr r9
    283c:	85 c1 ff f8 	l.lwz r14,0xfffffff8(r1)
    2840:	9c 21 00 0c 	l.addi r1,r1,0xc
  va_list args;
  va_start(args, fmt);
  
  int str_l = vfnprintf(PRINTFBUFFER, PRINTFBUFFER_SIZE, fmt, args);
  
  if (!str_l) return -1; // no length string - just return
    2844:	9d c0 ff ff 	l.addi r14,r0,0xffffffff
  while(i<str_l)  sim_putc(PRINTFBUFFER[i++]);
  
  va_end(args);

  return str_l;
}
    2848:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    284c:	a9 6e 00 00 	l.ori r11,r14,0x0
    2850:	84 41 ff f4 	l.lwz r2,0xfffffff4(r1)
    2854:	44 00 48 00 	l.jr r9
    2858:	85 c1 ff f8 	l.lwz r14,0xfffffff8(r1)

0000285c <puts_to_sim>:

int 
puts_to_sim(const char *str)
{
    285c:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
    2860:	9c 21 ff f8 	l.addi r1,r1,0xfffffff8
  return printf_to_sim("%s\n", str);
    2864:	d4 01 18 00 	l.sw 0x0(r1),r3
    2868:	18 60 00 00 	l.movhi r3,0x0
    286c:	07 ff ff d6 	l.jal 27c4 <printf_to_sim>
    2870:	a8 63 62 d1 	l.ori r3,r3,0x62d1
}
    2874:	9c 21 00 08 	l.addi r1,r1,0x8
    2878:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    287c:	44 00 48 00 	l.jr r9
    2880:	15 00 00 00 	l.nop 0x0

00002884 <printf_to_uart>:
// required to compile everything.
#include "uart.h"

int
printf_to_uart(const char *fmt, ...)
{
    2884:	d7 e1 77 f8 	l.sw 0xfffffff8(r1),r14
    2888:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
    288c:	d7 e1 17 f4 	l.sw 0xfffffff4(r1),r2
    2890:	a8 a3 00 00 	l.ori r5,r3,0x0
    2894:	9c 21 ff f4 	l.addi r1,r1,0xfffffff4

  va_list args;
  va_start(args, fmt);
  
  int str_l = vfnprintf(PRINTFBUFFER, PRINTFBUFFER_SIZE, fmt, args);
    2898:	18 60 00 00 	l.movhi r3,0x0
    289c:	9c 80 02 00 	l.addi r4,r0,0x200
    28a0:	a8 63 64 fc 	l.ori r3,r3,0x64fc
    28a4:	07 ff fc 93 	l.jal 1af0 <vfnprintf>
    28a8:	9c c1 00 0c 	l.addi r6,r1,0xc
  
  if (!str_l) return -1; // no length string - just return
    28ac:	bc 0b 00 00 	l.sfeqi r11,0x0
    28b0:	10 00 00 15 	l.bf 2904 <printf_to_uart+0x80>
    28b4:	a9 cb 00 00 	l.ori r14,r11,0x0

  // Assumes uart is initialised
  int i=0;while(i<str_l) uart_putc(DEFAULT_UART,PRINTFBUFFER[i++]);
    28b8:	bd ab 00 00 	l.sflesi r11,0x0
    28bc:	10 00 00 0c 	l.bf 28ec <printf_to_uart+0x68>
    28c0:	9c 40 00 00 	l.addi r2,r0,0x0
// Calls to the UART driver are always in the library - hence it is always
// required to compile everything.
#include "uart.h"

int
printf_to_uart(const char *fmt, ...)
    28c4:	18 60 00 00 	l.movhi r3,0x0
    28c8:	a8 63 64 fc 	l.ori r3,r3,0x64fc
    28cc:	e0 82 18 00 	l.add r4,r2,r3
  int str_l = vfnprintf(PRINTFBUFFER, PRINTFBUFFER_SIZE, fmt, args);
  
  if (!str_l) return -1; // no length string - just return

  // Assumes uart is initialised
  int i=0;while(i<str_l) uart_putc(DEFAULT_UART,PRINTFBUFFER[i++]);
    28d0:	9c 60 00 00 	l.addi r3,r0,0x0
    28d4:	90 84 00 00 	l.lbs r4,0x0(r4)
    28d8:	07 ff fb b5 	l.jal 17ac <uart_putc>
    28dc:	9c 42 00 01 	l.addi r2,r2,0x1
    28e0:	e5 4e 10 00 	l.sfgts r14,r2
    28e4:	13 ff ff f9 	l.bf 28c8 <printf_to_uart+0x44>
    28e8:	18 60 00 00 	l.movhi r3,0x0

  va_end(args);

  return str_l;
  
}
    28ec:	9c 21 00 0c 	l.addi r1,r1,0xc
    28f0:	a9 6e 00 00 	l.ori r11,r14,0x0
    28f4:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    28f8:	84 41 ff f4 	l.lwz r2,0xfffffff4(r1)
    28fc:	44 00 48 00 	l.jr r9
    2900:	85 c1 ff f8 	l.lwz r14,0xfffffff8(r1)
    2904:	9c 21 00 0c 	l.addi r1,r1,0xc
  va_list args;
  va_start(args, fmt);
  
  int str_l = vfnprintf(PRINTFBUFFER, PRINTFBUFFER_SIZE, fmt, args);
  
  if (!str_l) return -1; // no length string - just return
    2908:	9d c0 ff ff 	l.addi r14,r0,0xffffffff

  va_end(args);

  return str_l;
  
}
    290c:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    2910:	a9 6e 00 00 	l.ori r11,r14,0x0
    2914:	84 41 ff f4 	l.lwz r2,0xfffffff4(r1)
    2918:	44 00 48 00 	l.jr r9
    291c:	85 c1 ff f8 	l.lwz r14,0xfffffff8(r1)

00002920 <putchar_to_uart>:

int 
putchar_to_uart(int c)
{
    2920:	d7 e1 17 f8 	l.sw 0xfffffff8(r1),r2
    2924:	a8 43 00 00 	l.ori r2,r3,0x0
  printf_to_uart("%c",c);
    2928:	18 60 00 00 	l.movhi r3,0x0
  
}

int 
putchar_to_uart(int c)
{
    292c:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
  printf_to_uart("%c",c);
    2930:	a8 63 62 d5 	l.ori r3,r3,0x62d5
  
}

int 
putchar_to_uart(int c)
{
    2934:	9c 21 ff f4 	l.addi r1,r1,0xfffffff4
  printf_to_uart("%c",c);
    2938:	07 ff ff d3 	l.jal 2884 <printf_to_uart>
    293c:	d4 01 10 00 	l.sw 0x0(r1),r2
 
  return c;
}
    2940:	9c 21 00 0c 	l.addi r1,r1,0xc
    2944:	a9 62 00 00 	l.ori r11,r2,0x0
    2948:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    294c:	44 00 48 00 	l.jr r9
    2950:	84 41 ff f8 	l.lwz r2,0xfffffff8(r1)

00002954 <puts_to_uart>:

int 
puts_to_uart(const char *str)
{
    2954:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
    2958:	9c 21 ff f8 	l.addi r1,r1,0xfffffff8
  return printf_to_uart("%s\n", str);
    295c:	d4 01 18 00 	l.sw 0x0(r1),r3
    2960:	18 60 00 00 	l.movhi r3,0x0
    2964:	07 ff ff c8 	l.jal 2884 <printf_to_uart>
    2968:	a8 63 62 d1 	l.ori r3,r3,0x62d1
}
    296c:	9c 21 00 08 	l.addi r1,r1,0x8
    2970:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    2974:	44 00 48 00 	l.jr r9
    2978:	15 00 00 00 	l.nop 0x0

0000297c <memcpy>:
#ifdef __BCC__
  while (n--) {
    *r1++ = *r2++;
  }
#else
  while (n) {
    297c:	bc 05 00 00 	l.sfeqi r5,0x0
    2980:	10 00 00 0a 	l.bf 29a8 <memcpy+0x2c>
    2984:	15 00 00 00 	l.nop 0x0
    2988:	9c c0 00 00 	l.addi r6,r0,0x0

/* Simple C functions */

/* memcpy */

void* memcpy( void* s1, void* s2, size_t n)
    298c:	e1 04 30 00 	l.add r8,r4,r6
    2990:	e0 e3 30 00 	l.add r7,r3,r6
  while (n--) {
    *r1++ = *r2++;
  }
#else
  while (n) {
    *r1++ = *r2++;
    2994:	8d 08 00 00 	l.lbz r8,0x0(r8)
    2998:	9c c6 00 01 	l.addi r6,r6,0x1
#ifdef __BCC__
  while (n--) {
    *r1++ = *r2++;
  }
#else
  while (n) {
    299c:	e4 26 28 00 	l.sfne r6,r5
    29a0:	13 ff ff fb 	l.bf 298c <memcpy+0x10>
    29a4:	d8 07 40 00 	l.sb 0x0(r7),r8
    *r1++ = *r2++;
    --n;
  }
#endif
  return s1;
}
    29a8:	44 00 48 00 	l.jr r9
    29ac:	a9 63 00 00 	l.ori r11,r3,0x0

000029b0 <strlen>:

/* strlen */
size_t strlen(const char*s)
{
  const char* p;
  for (p=s; *p; p++);
    29b0:	91 63 00 00 	l.lbs r11,0x0(r3)
    29b4:	bc 0b 00 00 	l.sfeqi r11,0x0
    29b8:	10 00 00 0a 	l.bf 29e0 <strlen+0x30>
    29bc:	15 00 00 00 	l.nop 0x0
    29c0:	a9 63 00 00 	l.ori r11,r3,0x0
    29c4:	9d 6b 00 01 	l.addi r11,r11,0x1
    29c8:	90 8b 00 00 	l.lbs r4,0x0(r11)
    29cc:	bc 24 00 00 	l.sfnei r4,0x0
    29d0:	13 ff ff fe 	l.bf 29c8 <strlen+0x18>
    29d4:	9d 6b 00 01 	l.addi r11,r11,0x1
    29d8:	9d 6b ff ff 	l.addi r11,r11,0xffffffff
    29dc:	e1 6b 18 02 	l.sub r11,r11,r3
  return p - s;
}
    29e0:	44 00 48 00 	l.jr r9
    29e4:	15 00 00 00 	l.nop 0x0

000029e8 <memchr>:
        const char *np = (const char *) n;
#else
# define np n
#endif

        while (np) {
    29e8:	bc 05 00 00 	l.sfeqi r5,0x0
    29ec:	10 00 00 12 	l.bf 2a34 <memchr+0x4c>
    29f0:	a9 65 00 00 	l.ori r11,r5,0x0
                if (*r == ((unsigned char)c)) {
    29f4:	8c c3 00 00 	l.lbz r6,0x0(r3)
    29f8:	a4 84 00 ff 	l.andi r4,r4,0xff
    29fc:	e4 06 20 00 	l.sfeq r6,r4
    2a00:	0c 00 00 08 	l.bnf 2a20 <memchr+0x38>
    2a04:	a9 63 00 00 	l.ori r11,r3,0x0
    2a08:	00 00 00 0b 	l.j 2a34 <memchr+0x4c>
    2a0c:	15 00 00 00 	l.nop 0x0
    2a10:	8c c3 00 00 	l.lbz r6,0x0(r3)
    2a14:	e4 06 20 00 	l.sfeq r6,r4
    2a18:	10 00 00 09 	l.bf 2a3c <memchr+0x54>
    2a1c:	15 00 00 00 	l.nop 0x0
                        return (void *) r;     /* silence the warning */
                }
                ++r;
                --np;
    2a20:	9c a5 ff ff 	l.addi r5,r5,0xffffffff
        const char *np = (const char *) n;
#else
# define np n
#endif

        while (np) {
    2a24:	bc 25 00 00 	l.sfnei r5,0x0
    2a28:	13 ff ff fa 	l.bf 2a10 <memchr+0x28>
    2a2c:	9c 63 00 01 	l.addi r3,r3,0x1
                }
                ++r;
                --np;
        }

        return NULL;
    2a30:	a9 65 00 00 	l.ori r11,r5,0x0
}
    2a34:	44 00 48 00 	l.jr r9
    2a38:	15 00 00 00 	l.nop 0x0
    2a3c:	44 00 48 00 	l.jr r9
    2a40:	a9 63 00 00 	l.ori r11,r3,0x0

00002a44 <rand>:
rand ()
{
  static unsigned long int lfsr = RAND_LFSR_SEED;
  static int period = 0;
  /* taps: 32 31 29 1; characteristic polynomial: x^32 + x^31 + x^29 + x + 1 */
  lfsr = (lfsr >> 1) ^ (unsigned long int)((0 - (lfsr & 1u)) & 0xd0000001u); 
    2a44:	18 60 00 00 	l.movhi r3,0x0

   @return The next pseudo-random number                                     */
/* --------------------------------------------------------------------------*/
unsigned long int
rand ()
{
    2a48:	d7 e1 17 fc 	l.sw 0xfffffffc(r1),r2
  static unsigned long int lfsr = RAND_LFSR_SEED;
  static int period = 0;
  /* taps: 32 31 29 1; characteristic polynomial: x^32 + x^31 + x^29 + x + 1 */
  lfsr = (lfsr >> 1) ^ (unsigned long int)((0 - (lfsr & 1u)) & 0xd0000001u); 
    2a4c:	a8 63 63 c8 	l.ori r3,r3,0x63c8
  ++period;
    2a50:	18 80 00 00 	l.movhi r4,0x0
rand ()
{
  static unsigned long int lfsr = RAND_LFSR_SEED;
  static int period = 0;
  /* taps: 32 31 29 1; characteristic polynomial: x^32 + x^31 + x^29 + x + 1 */
  lfsr = (lfsr >> 1) ^ (unsigned long int)((0 - (lfsr & 1u)) & 0xd0000001u); 
    2a54:	84 a3 00 00 	l.lwz r5,0x0(r3)
    2a58:	18 40 d0 00 	l.movhi r2,0xd000
    2a5c:	a5 65 00 01 	l.andi r11,r5,0x1
  ++period;
    2a60:	a8 84 63 cc 	l.ori r4,r4,0x63cc
rand ()
{
  static unsigned long int lfsr = RAND_LFSR_SEED;
  static int period = 0;
  /* taps: 32 31 29 1; characteristic polynomial: x^32 + x^31 + x^29 + x + 1 */
  lfsr = (lfsr >> 1) ^ (unsigned long int)((0 - (lfsr & 1u)) & 0xd0000001u); 
    2a64:	a8 42 00 01 	l.ori r2,r2,0x1
    2a68:	e1 60 58 02 	l.sub r11,r0,r11
    2a6c:	b8 a5 00 41 	l.srli r5,r5,0x1
  ++period;
    2a70:	84 c4 00 00 	l.lwz r6,0x0(r4)
rand ()
{
  static unsigned long int lfsr = RAND_LFSR_SEED;
  static int period = 0;
  /* taps: 32 31 29 1; characteristic polynomial: x^32 + x^31 + x^29 + x + 1 */
  lfsr = (lfsr >> 1) ^ (unsigned long int)((0 - (lfsr & 1u)) & 0xd0000001u); 
    2a74:	e1 6b 10 03 	l.and r11,r11,r2
  ++period;
    2a78:	9c c6 00 01 	l.addi r6,r6,0x1
rand ()
{
  static unsigned long int lfsr = RAND_LFSR_SEED;
  static int period = 0;
  /* taps: 32 31 29 1; characteristic polynomial: x^32 + x^31 + x^29 + x + 1 */
  lfsr = (lfsr >> 1) ^ (unsigned long int)((0 - (lfsr & 1u)) & 0xd0000001u); 
    2a7c:	e1 6b 28 05 	l.xor r11,r11,r5

   @return The next pseudo-random number                                     */
/* --------------------------------------------------------------------------*/
unsigned long int
rand ()
{
    2a80:	9c 21 ff fc 	l.addi r1,r1,0xfffffffc
  static unsigned long int lfsr = RAND_LFSR_SEED;
  static int period = 0;
  /* taps: 32 31 29 1; characteristic polynomial: x^32 + x^31 + x^29 + x + 1 */
  lfsr = (lfsr >> 1) ^ (unsigned long int)((0 - (lfsr & 1u)) & 0xd0000001u); 
  ++period;
    2a84:	d4 04 30 00 	l.sw 0x0(r4),r6
rand ()
{
  static unsigned long int lfsr = RAND_LFSR_SEED;
  static int period = 0;
  /* taps: 32 31 29 1; characteristic polynomial: x^32 + x^31 + x^29 + x + 1 */
  lfsr = (lfsr >> 1) ^ (unsigned long int)((0 - (lfsr & 1u)) & 0xd0000001u); 
    2a88:	d4 03 58 00 	l.sw 0x0(r3),r11
  ++period;
  return lfsr;
}
    2a8c:	9c 21 00 04 	l.addi r1,r1,0x4
    2a90:	44 00 48 00 	l.jr r9
    2a94:	84 41 ff fc 	l.lwz r2,0xfffffffc(r1)

00002a98 <__udivdi3>:
    2a98:	d7 e1 17 d4 	l.sw 0xffffffd4(r1),r2
    2a9c:	d7 e1 77 d8 	l.sw 0xffffffd8(r1),r14
    2aa0:	d7 e1 87 dc 	l.sw 0xffffffdc(r1),r16
    2aa4:	d7 e1 97 e0 	l.sw 0xffffffe0(r1),r18
    2aa8:	d7 e1 a7 e4 	l.sw 0xffffffe4(r1),r20
    2aac:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
    2ab0:	d7 e1 b7 e8 	l.sw 0xffffffe8(r1),r22
    2ab4:	d7 e1 c7 ec 	l.sw 0xffffffec(r1),r24
    2ab8:	d7 e1 d7 f0 	l.sw 0xfffffff0(r1),r26
    2abc:	d7 e1 e7 f4 	l.sw 0xfffffff4(r1),r28
    2ac0:	d7 e1 f7 f8 	l.sw 0xfffffff8(r1),r30
    2ac4:	a9 c3 00 00 	l.ori r14,r3,0x0
    2ac8:	9c 21 ff d4 	l.addi r1,r1,0xffffffd4
    2acc:	aa 04 00 00 	l.ori r16,r4,0x0
    2ad0:	a8 46 00 00 	l.ori r2,r6,0x0
    2ad4:	aa 84 00 00 	l.ori r20,r4,0x0
    2ad8:	bc 25 00 00 	l.sfnei r5,0x0
    2adc:	10 00 00 51 	l.bf 2c20 <__udivdi3+0x188>
    2ae0:	aa 43 00 00 	l.ori r18,r3,0x0
    2ae4:	e4 a2 18 00 	l.sfleu r2,r3
    2ae8:	10 00 00 85 	l.bf 2cfc <__udivdi3+0x264>
    2aec:	bc 22 00 00 	l.sfnei r2,0x0
    2af0:	a8 60 ff ff 	l.ori r3,r0,0xffff
    2af4:	e4 42 18 00 	l.sfgtu r2,r3
    2af8:	0c 00 00 d3 	l.bnf 2e44 <__udivdi3+0x3ac>
    2afc:	bc 42 00 ff 	l.sfgtui r2,0xff
    2b00:	18 80 00 ff 	l.movhi r4,0xff
    2b04:	a8 84 ff ff 	l.ori r4,r4,0xffff
    2b08:	e4 42 20 00 	l.sfgtu r2,r4
    2b0c:	10 00 01 39 	l.bf 2ff0 <__udivdi3+0x558>
    2b10:	9c a0 00 18 	l.addi r5,r0,0x18
    2b14:	9c a0 00 10 	l.addi r5,r0,0x10
    2b18:	a8 65 00 00 	l.ori r3,r5,0x0
    2b1c:	18 80 00 00 	l.movhi r4,0x0
    2b20:	e0 a6 28 48 	l.srl r5,r6,r5
    2b24:	a8 84 60 5c 	l.ori r4,r4,0x605c
    2b28:	e0 a5 20 00 	l.add r5,r5,r4
    2b2c:	8c 85 00 00 	l.lbz r4,0x0(r5)
    2b30:	e0 84 18 00 	l.add r4,r4,r3
    2b34:	9c 60 00 20 	l.addi r3,r0,0x20
    2b38:	e0 63 20 02 	l.sub r3,r3,r4
    2b3c:	bc 03 00 00 	l.sfeqi r3,0x0
    2b40:	10 00 00 06 	l.bf 2b58 <__udivdi3+0xc0>
    2b44:	e1 ce 18 08 	l.sll r14,r14,r3
    2b48:	e0 90 20 48 	l.srl r4,r16,r4
    2b4c:	e0 46 18 08 	l.sll r2,r6,r3
    2b50:	e2 90 18 08 	l.sll r20,r16,r3
    2b54:	e2 4e 20 04 	l.or r18,r14,r4
    2b58:	b9 c2 00 50 	l.srli r14,r2,0x10
    2b5c:	a8 72 00 00 	l.ori r3,r18,0x0
    2b60:	a6 c2 ff ff 	l.andi r22,r2,0xffff
    2b64:	04 00 0c 67 	l.jal 5d00 <__umodsi3>
    2b68:	a8 8e 00 00 	l.ori r4,r14,0x0
    2b6c:	a8 72 00 00 	l.ori r3,r18,0x0
    2b70:	a8 8e 00 00 	l.ori r4,r14,0x0
    2b74:	04 00 0c 24 	l.jal 5c04 <__udivsi3>
    2b78:	ab 0b 00 00 	l.ori r24,r11,0x0
    2b7c:	e0 8b b3 06 	l.mul r4,r11,r22
    2b80:	b8 78 00 10 	l.slli r3,r24,0x10
    2b84:	b8 b4 00 50 	l.srli r5,r20,0x10
    2b88:	e0 63 28 04 	l.or r3,r3,r5
    2b8c:	e4 a4 18 00 	l.sfleu r4,r3
    2b90:	10 00 00 09 	l.bf 2bb4 <__udivdi3+0x11c>
    2b94:	aa 0b 00 00 	l.ori r16,r11,0x0
    2b98:	e0 63 10 00 	l.add r3,r3,r2
    2b9c:	e4 42 18 00 	l.sfgtu r2,r3
    2ba0:	10 00 00 05 	l.bf 2bb4 <__udivdi3+0x11c>
    2ba4:	9e 0b ff ff 	l.addi r16,r11,0xffffffff
    2ba8:	e4 a4 18 00 	l.sfleu r4,r3
    2bac:	0c 00 01 5c 	l.bnf 311c <__udivdi3+0x684>
    2bb0:	15 00 00 00 	l.nop 0x0
    2bb4:	e2 43 20 02 	l.sub r18,r3,r4
    2bb8:	a8 8e 00 00 	l.ori r4,r14,0x0
    2bbc:	a8 72 00 00 	l.ori r3,r18,0x0
    2bc0:	04 00 0c 50 	l.jal 5d00 <__umodsi3>
    2bc4:	a6 94 ff ff 	l.andi r20,r20,0xffff
    2bc8:	a8 72 00 00 	l.ori r3,r18,0x0
    2bcc:	a8 8e 00 00 	l.ori r4,r14,0x0
    2bd0:	04 00 0c 0d 	l.jal 5c04 <__udivsi3>
    2bd4:	ab 0b 00 00 	l.ori r24,r11,0x0
    2bd8:	a8 6b 00 00 	l.ori r3,r11,0x0
    2bdc:	b9 78 00 10 	l.slli r11,r24,0x10
    2be0:	e2 c3 b3 06 	l.mul r22,r3,r22
    2be4:	e2 8b a0 04 	l.or r20,r11,r20
    2be8:	e4 b6 a0 00 	l.sfleu r22,r20
    2bec:	10 00 00 09 	l.bf 2c10 <__udivdi3+0x178>
    2bf0:	e2 94 10 00 	l.add r20,r20,r2
    2bf4:	e4 42 a0 00 	l.sfgtu r2,r20
    2bf8:	10 00 00 06 	l.bf 2c10 <__udivdi3+0x178>
    2bfc:	9c 63 ff ff 	l.addi r3,r3,0xffffffff
    2c00:	e4 b6 a0 00 	l.sfleu r22,r20
    2c04:	10 00 00 03 	l.bf 2c10 <__udivdi3+0x178>
    2c08:	15 00 00 00 	l.nop 0x0
    2c0c:	9c 63 ff ff 	l.addi r3,r3,0xffffffff
    2c10:	b9 70 00 10 	l.slli r11,r16,0x10
    2c14:	9c 80 00 00 	l.addi r4,r0,0x0
    2c18:	00 00 00 2a 	l.j 2cc0 <__udivdi3+0x228>
    2c1c:	e1 63 58 04 	l.or r11,r3,r11
    2c20:	e4 45 18 00 	l.sfgtu r5,r3
    2c24:	10 00 00 81 	l.bf 2e28 <__udivdi3+0x390>
    2c28:	a8 40 ff ff 	l.ori r2,r0,0xffff
    2c2c:	e4 45 10 00 	l.sfgtu r5,r2
    2c30:	0c 00 00 80 	l.bnf 2e30 <__udivdi3+0x398>
    2c34:	bc 45 00 ff 	l.sfgtui r5,0xff
    2c38:	18 60 00 ff 	l.movhi r3,0xff
    2c3c:	a8 63 ff ff 	l.ori r3,r3,0xffff
    2c40:	e4 45 18 00 	l.sfgtu r5,r3
    2c44:	10 00 01 2a 	l.bf 30ec <__udivdi3+0x654>
    2c48:	9c 40 00 18 	l.addi r2,r0,0x18
    2c4c:	9c 40 00 10 	l.addi r2,r0,0x10
    2c50:	a8 62 00 00 	l.ori r3,r2,0x0
    2c54:	18 80 00 00 	l.movhi r4,0x0
    2c58:	e0 45 10 48 	l.srl r2,r5,r2
    2c5c:	a8 84 60 5c 	l.ori r4,r4,0x605c
    2c60:	e0 42 20 00 	l.add r2,r2,r4
    2c64:	8c 82 00 00 	l.lbz r4,0x0(r2)
    2c68:	9c 40 00 20 	l.addi r2,r0,0x20
    2c6c:	e0 84 18 00 	l.add r4,r4,r3
    2c70:	e0 42 20 02 	l.sub r2,r2,r4
    2c74:	bc 22 00 00 	l.sfnei r2,0x0
    2c78:	10 00 00 81 	l.bf 2e7c <__udivdi3+0x3e4>
    2c7c:	e0 66 20 48 	l.srl r3,r6,r4
    2c80:	e4 a6 80 00 	l.sfleu r6,r16
    2c84:	10 00 00 03 	l.bf 2c90 <__udivdi3+0x1f8>
    2c88:	9c 60 00 01 	l.addi r3,r0,0x1
    2c8c:	a8 62 00 00 	l.ori r3,r2,0x0
    2c90:	a4 63 00 ff 	l.andi r3,r3,0xff
    2c94:	bc 23 00 00 	l.sfnei r3,0x0
    2c98:	10 00 00 77 	l.bf 2e74 <__udivdi3+0x3dc>
    2c9c:	9d 60 00 01 	l.addi r11,r0,0x1
    2ca0:	e4 85 70 00 	l.sfltu r5,r14
    2ca4:	0c 00 01 16 	l.bnf 30fc <__udivdi3+0x664>
    2ca8:	9d 60 00 01 	l.addi r11,r0,0x1
    2cac:	a5 6b 00 ff 	l.andi r11,r11,0xff
    2cb0:	bc 2b 00 00 	l.sfnei r11,0x0
    2cb4:	10 00 00 6f 	l.bf 2e70 <__udivdi3+0x3d8>
    2cb8:	15 00 00 00 	l.nop 0x0
    2cbc:	a8 8b 00 00 	l.ori r4,r11,0x0
    2cc0:	9c 21 00 2c 	l.addi r1,r1,0x2c
    2cc4:	a9 8b 00 00 	l.ori r12,r11,0x0
    2cc8:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    2ccc:	a9 64 00 00 	l.ori r11,r4,0x0
    2cd0:	84 41 ff d4 	l.lwz r2,0xffffffd4(r1)
    2cd4:	85 c1 ff d8 	l.lwz r14,0xffffffd8(r1)
    2cd8:	86 01 ff dc 	l.lwz r16,0xffffffdc(r1)
    2cdc:	86 41 ff e0 	l.lwz r18,0xffffffe0(r1)
    2ce0:	86 81 ff e4 	l.lwz r20,0xffffffe4(r1)
    2ce4:	86 c1 ff e8 	l.lwz r22,0xffffffe8(r1)
    2ce8:	87 01 ff ec 	l.lwz r24,0xffffffec(r1)
    2cec:	87 41 ff f0 	l.lwz r26,0xfffffff0(r1)
    2cf0:	87 81 ff f4 	l.lwz r28,0xfffffff4(r1)
    2cf4:	44 00 48 00 	l.jr r9
    2cf8:	87 c1 ff f8 	l.lwz r30,0xfffffff8(r1)
    2cfc:	0c 00 00 57 	l.bnf 2e58 <__udivdi3+0x3c0>
    2d00:	a8 82 00 00 	l.ori r4,r2,0x0
    2d04:	a8 a0 ff ff 	l.ori r5,r0,0xffff
    2d08:	e4 42 28 00 	l.sfgtu r2,r5
    2d0c:	0c 00 01 0a 	l.bnf 3134 <__udivdi3+0x69c>
    2d10:	18 60 00 ff 	l.movhi r3,0xff
    2d14:	a8 63 ff ff 	l.ori r3,r3,0xffff
    2d18:	e4 42 18 00 	l.sfgtu r2,r3
    2d1c:	10 00 00 f6 	l.bf 30f4 <__udivdi3+0x65c>
    2d20:	9c 60 00 18 	l.addi r3,r0,0x18
    2d24:	9c 60 00 10 	l.addi r3,r0,0x10
    2d28:	a8 83 00 00 	l.ori r4,r3,0x0
    2d2c:	18 a0 00 00 	l.movhi r5,0x0
    2d30:	e0 62 18 48 	l.srl r3,r2,r3
    2d34:	a8 a5 60 5c 	l.ori r5,r5,0x605c
    2d38:	e0 63 28 00 	l.add r3,r3,r5
    2d3c:	9c a0 00 20 	l.addi r5,r0,0x20
    2d40:	8c 63 00 00 	l.lbz r3,0x0(r3)
    2d44:	e0 83 20 00 	l.add r4,r3,r4
    2d48:	e0 a5 20 02 	l.sub r5,r5,r4
    2d4c:	bc 25 00 00 	l.sfnei r5,0x0
    2d50:	10 00 00 aa 	l.bf 2ff8 <__udivdi3+0x560>
    2d54:	e2 ce 20 48 	l.srl r22,r14,r4
    2d58:	ba 42 00 50 	l.srli r18,r2,0x10
    2d5c:	e1 ce 10 02 	l.sub r14,r14,r2
    2d60:	a6 02 ff ff 	l.andi r16,r2,0xffff
    2d64:	9f 00 00 01 	l.addi r24,r0,0x1
    2d68:	a8 6e 00 00 	l.ori r3,r14,0x0
    2d6c:	04 00 0b e5 	l.jal 5d00 <__umodsi3>
    2d70:	a8 92 00 00 	l.ori r4,r18,0x0
    2d74:	a8 6e 00 00 	l.ori r3,r14,0x0
    2d78:	a8 92 00 00 	l.ori r4,r18,0x0
    2d7c:	04 00 0b a2 	l.jal 5c04 <__udivsi3>
    2d80:	aa cb 00 00 	l.ori r22,r11,0x0
    2d84:	e0 ab 83 06 	l.mul r5,r11,r16
    2d88:	b8 76 00 10 	l.slli r3,r22,0x10
    2d8c:	b8 94 00 50 	l.srli r4,r20,0x10
    2d90:	e0 63 20 04 	l.or r3,r3,r4
    2d94:	e4 a5 18 00 	l.sfleu r5,r3
    2d98:	10 00 00 09 	l.bf 2dbc <__udivdi3+0x324>
    2d9c:	a9 cb 00 00 	l.ori r14,r11,0x0
    2da0:	e0 63 10 00 	l.add r3,r3,r2
    2da4:	e4 42 18 00 	l.sfgtu r2,r3
    2da8:	10 00 00 05 	l.bf 2dbc <__udivdi3+0x324>
    2dac:	9d cb ff ff 	l.addi r14,r11,0xffffffff
    2db0:	e4 a5 18 00 	l.sfleu r5,r3
    2db4:	0c 00 00 dd 	l.bnf 3128 <__udivdi3+0x690>
    2db8:	15 00 00 00 	l.nop 0x0
    2dbc:	e2 c3 28 02 	l.sub r22,r3,r5
    2dc0:	a8 92 00 00 	l.ori r4,r18,0x0
    2dc4:	a8 76 00 00 	l.ori r3,r22,0x0
    2dc8:	04 00 0b ce 	l.jal 5d00 <__umodsi3>
    2dcc:	a6 94 ff ff 	l.andi r20,r20,0xffff
    2dd0:	a8 76 00 00 	l.ori r3,r22,0x0
    2dd4:	a8 92 00 00 	l.ori r4,r18,0x0
    2dd8:	04 00 0b 8b 	l.jal 5c04 <__udivsi3>
    2ddc:	ab 4b 00 00 	l.ori r26,r11,0x0
    2de0:	a8 6b 00 00 	l.ori r3,r11,0x0
    2de4:	b9 7a 00 10 	l.slli r11,r26,0x10
    2de8:	e2 03 83 06 	l.mul r16,r3,r16
    2dec:	e2 8b a0 04 	l.or r20,r11,r20
    2df0:	e4 b0 a0 00 	l.sfleu r16,r20
    2df4:	10 00 00 09 	l.bf 2e18 <__udivdi3+0x380>
    2df8:	e2 94 10 00 	l.add r20,r20,r2
    2dfc:	e4 42 a0 00 	l.sfgtu r2,r20
    2e00:	10 00 00 06 	l.bf 2e18 <__udivdi3+0x380>
    2e04:	9c 63 ff ff 	l.addi r3,r3,0xffffffff
    2e08:	e4 b0 a0 00 	l.sfleu r16,r20
    2e0c:	10 00 00 03 	l.bf 2e18 <__udivdi3+0x380>
    2e10:	15 00 00 00 	l.nop 0x0
    2e14:	9c 63 ff ff 	l.addi r3,r3,0xffffffff
    2e18:	b9 6e 00 10 	l.slli r11,r14,0x10
    2e1c:	a8 98 00 00 	l.ori r4,r24,0x0
    2e20:	03 ff ff a8 	l.j 2cc0 <__udivdi3+0x228>
    2e24:	e1 63 58 04 	l.or r11,r3,r11
    2e28:	03 ff ff a5 	l.j 2cbc <__udivdi3+0x224>
    2e2c:	9d 60 00 00 	l.addi r11,r0,0x0
    2e30:	10 00 00 ac 	l.bf 30e0 <__udivdi3+0x648>
    2e34:	15 00 00 00 	l.nop 0x0
    2e38:	9c 40 00 00 	l.addi r2,r0,0x0
    2e3c:	03 ff ff 86 	l.j 2c54 <__udivdi3+0x1bc>
    2e40:	a8 62 00 00 	l.ori r3,r2,0x0
    2e44:	0c 00 00 6b 	l.bnf 2ff0 <__udivdi3+0x558>
    2e48:	15 00 00 00 	l.nop 0x0
    2e4c:	9c a0 00 08 	l.addi r5,r0,0x8
    2e50:	03 ff ff 33 	l.j 2b1c <__udivdi3+0x84>
    2e54:	a8 65 00 00 	l.ori r3,r5,0x0
    2e58:	04 00 0b 6b 	l.jal 5c04 <__udivsi3>
    2e5c:	9c 60 00 01 	l.addi r3,r0,0x1
    2e60:	a8 4b 00 00 	l.ori r2,r11,0x0
    2e64:	9c 60 00 00 	l.addi r3,r0,0x0
    2e68:	03 ff ff b1 	l.j 2d2c <__udivdi3+0x294>
    2e6c:	a8 83 00 00 	l.ori r4,r3,0x0
    2e70:	9d 60 00 01 	l.addi r11,r0,0x1
    2e74:	03 ff ff 93 	l.j 2cc0 <__udivdi3+0x228>
    2e78:	9c 80 00 00 	l.addi r4,r0,0x0
    2e7c:	e0 a5 10 08 	l.sll r5,r5,r2
    2e80:	e2 ce 20 48 	l.srl r22,r14,r4
    2e84:	e0 90 20 48 	l.srl r4,r16,r4
    2e88:	e2 45 18 04 	l.or r18,r5,r3
    2e8c:	e1 ce 10 08 	l.sll r14,r14,r2
    2e90:	ba 92 00 50 	l.srli r20,r18,0x10
    2e94:	a8 76 00 00 	l.ori r3,r22,0x0
    2e98:	e1 ce 20 04 	l.or r14,r14,r4
    2e9c:	a8 94 00 00 	l.ori r4,r20,0x0
    2ea0:	04 00 0b 98 	l.jal 5d00 <__umodsi3>
    2ea4:	e3 46 10 08 	l.sll r26,r6,r2
    2ea8:	a8 76 00 00 	l.ori r3,r22,0x0
    2eac:	a8 94 00 00 	l.ori r4,r20,0x0
    2eb0:	a7 92 ff ff 	l.andi r28,r18,0xffff
    2eb4:	04 00 0b 54 	l.jal 5c04 <__udivsi3>
    2eb8:	ab 0b 00 00 	l.ori r24,r11,0x0
    2ebc:	e1 0b e3 06 	l.mul r8,r11,r28
    2ec0:	b8 b8 00 10 	l.slli r5,r24,0x10
    2ec4:	b8 6e 00 50 	l.srli r3,r14,0x10
    2ec8:	e0 a5 18 04 	l.or r5,r5,r3
    2ecc:	e4 a8 28 00 	l.sfleu r8,r5
    2ed0:	10 00 00 0b 	l.bf 2efc <__udivdi3+0x464>
    2ed4:	aa cb 00 00 	l.ori r22,r11,0x0
    2ed8:	e0 a5 90 00 	l.add r5,r5,r18
    2edc:	e4 52 28 00 	l.sfgtu r18,r5
    2ee0:	10 00 00 07 	l.bf 2efc <__udivdi3+0x464>
    2ee4:	9e cb ff ff 	l.addi r22,r11,0xffffffff
    2ee8:	e4 a8 28 00 	l.sfleu r8,r5
    2eec:	10 00 00 05 	l.bf 2f00 <__udivdi3+0x468>
    2ef0:	e3 05 40 02 	l.sub r24,r5,r8
    2ef4:	9e d6 ff ff 	l.addi r22,r22,0xffffffff
    2ef8:	e0 a5 90 00 	l.add r5,r5,r18
    2efc:	e3 05 40 02 	l.sub r24,r5,r8
    2f00:	a8 94 00 00 	l.ori r4,r20,0x0
    2f04:	a8 78 00 00 	l.ori r3,r24,0x0
    2f08:	04 00 0b 7e 	l.jal 5d00 <__umodsi3>
    2f0c:	a5 ce ff ff 	l.andi r14,r14,0xffff
    2f10:	a8 78 00 00 	l.ori r3,r24,0x0
    2f14:	a8 94 00 00 	l.ori r4,r20,0x0
    2f18:	04 00 0b 3b 	l.jal 5c04 <__udivsi3>
    2f1c:	ab cb 00 00 	l.ori r30,r11,0x0
    2f20:	e0 eb e3 06 	l.mul r7,r11,r28
    2f24:	b8 7e 00 10 	l.slli r3,r30,0x10
    2f28:	e0 63 70 04 	l.or r3,r3,r14
    2f2c:	e4 a7 18 00 	l.sfleu r7,r3
    2f30:	10 00 00 06 	l.bf 2f48 <__udivdi3+0x4b0>
    2f34:	a8 ab 00 00 	l.ori r5,r11,0x0
    2f38:	e0 63 90 00 	l.add r3,r3,r18
    2f3c:	e4 52 18 00 	l.sfgtu r18,r3
    2f40:	0c 00 00 71 	l.bnf 3104 <__udivdi3+0x66c>
    2f44:	9c ab ff ff 	l.addi r5,r11,0xffffffff
    2f48:	b9 76 00 10 	l.slli r11,r22,0x10
    2f4c:	a5 9a ff ff 	l.andi r12,r26,0xffff
    2f50:	b8 da 00 50 	l.srli r6,r26,0x10
    2f54:	e1 65 58 04 	l.or r11,r5,r11
    2f58:	e0 63 38 02 	l.sub r3,r3,r7
    2f5c:	a4 8b ff ff 	l.andi r4,r11,0xffff
    2f60:	b9 0b 00 50 	l.srli r8,r11,0x10
    2f64:	e1 a4 63 06 	l.mul r13,r4,r12
    2f68:	e0 a8 63 06 	l.mul r5,r8,r12
    2f6c:	e0 84 33 06 	l.mul r4,r4,r6
    2f70:	b8 ed 00 50 	l.srli r7,r13,0x10
    2f74:	e0 85 20 00 	l.add r4,r5,r4
    2f78:	e0 84 38 00 	l.add r4,r4,r7
    2f7c:	e4 a5 20 00 	l.sfleu r5,r4
    2f80:	10 00 00 04 	l.bf 2f90 <__udivdi3+0x4f8>
    2f84:	e0 c8 33 06 	l.mul r6,r8,r6
    2f88:	18 a0 00 01 	l.movhi r5,0x1
    2f8c:	e0 c6 28 00 	l.add r6,r6,r5
    2f90:	b8 a4 00 50 	l.srli r5,r4,0x10
    2f94:	e0 c6 28 00 	l.add r6,r6,r5
    2f98:	e4 83 30 00 	l.sfltu r3,r6
    2f9c:	10 00 00 12 	l.bf 2fe4 <__udivdi3+0x54c>
    2fa0:	e0 c3 30 05 	l.xor r6,r3,r6
    2fa4:	e0 60 30 02 	l.sub r3,r0,r6
    2fa8:	e0 c3 30 04 	l.or r6,r3,r6
    2fac:	bd 86 00 00 	l.sfltsi r6,0x0
    2fb0:	13 ff ff b1 	l.bf 2e74 <__udivdi3+0x3dc>
    2fb4:	a5 ad ff ff 	l.andi r13,r13,0xffff
    2fb8:	b8 84 00 10 	l.slli r4,r4,0x10
    2fbc:	e0 50 10 08 	l.sll r2,r16,r2
    2fc0:	e0 84 68 00 	l.add r4,r4,r13
    2fc4:	e4 82 20 00 	l.sfltu r2,r4
    2fc8:	10 00 00 03 	l.bf 2fd4 <__udivdi3+0x53c>
    2fcc:	9c 60 00 01 	l.addi r3,r0,0x1
    2fd0:	9c 60 00 00 	l.addi r3,r0,0x0
    2fd4:	a4 63 00 ff 	l.andi r3,r3,0xff
    2fd8:	bc 23 00 00 	l.sfnei r3,0x0
    2fdc:	0f ff ff a6 	l.bnf 2e74 <__udivdi3+0x3dc>
    2fe0:	15 00 00 00 	l.nop 0x0
    2fe4:	9d 6b ff ff 	l.addi r11,r11,0xffffffff
    2fe8:	03 ff ff 36 	l.j 2cc0 <__udivdi3+0x228>
    2fec:	9c 80 00 00 	l.addi r4,r0,0x0
    2ff0:	03 ff fe cb 	l.j 2b1c <__udivdi3+0x84>
    2ff4:	a8 65 00 00 	l.ori r3,r5,0x0
    2ff8:	e0 42 28 08 	l.sll r2,r2,r5
    2ffc:	e0 d0 20 48 	l.srl r6,r16,r4
    3000:	ba 42 00 50 	l.srli r18,r2,0x10
    3004:	e1 ce 28 08 	l.sll r14,r14,r5
    3008:	a8 76 00 00 	l.ori r3,r22,0x0
    300c:	a8 92 00 00 	l.ori r4,r18,0x0
    3010:	e3 4e 30 04 	l.or r26,r14,r6
    3014:	04 00 0b 3b 	l.jal 5d00 <__umodsi3>
    3018:	e2 90 28 08 	l.sll r20,r16,r5
    301c:	a8 76 00 00 	l.ori r3,r22,0x0
    3020:	a8 92 00 00 	l.ori r4,r18,0x0
    3024:	a6 02 ff ff 	l.andi r16,r2,0xffff
    3028:	04 00 0a f7 	l.jal 5c04 <__udivsi3>
    302c:	a9 cb 00 00 	l.ori r14,r11,0x0
    3030:	e0 ab 83 06 	l.mul r5,r11,r16
    3034:	b8 6e 00 10 	l.slli r3,r14,0x10
    3038:	b8 9a 00 50 	l.srli r4,r26,0x10
    303c:	e0 63 20 04 	l.or r3,r3,r4
    3040:	e4 a5 18 00 	l.sfleu r5,r3
    3044:	10 00 00 0b 	l.bf 3070 <__udivdi3+0x5d8>
    3048:	aa cb 00 00 	l.ori r22,r11,0x0
    304c:	e0 63 10 00 	l.add r3,r3,r2
    3050:	e4 42 18 00 	l.sfgtu r2,r3
    3054:	10 00 00 07 	l.bf 3070 <__udivdi3+0x5d8>
    3058:	9e cb ff ff 	l.addi r22,r11,0xffffffff
    305c:	e4 a5 18 00 	l.sfleu r5,r3
    3060:	10 00 00 05 	l.bf 3074 <__udivdi3+0x5dc>
    3064:	e3 03 28 02 	l.sub r24,r3,r5
    3068:	9e d6 ff ff 	l.addi r22,r22,0xffffffff
    306c:	e0 63 10 00 	l.add r3,r3,r2
    3070:	e3 03 28 02 	l.sub r24,r3,r5
    3074:	a8 92 00 00 	l.ori r4,r18,0x0
    3078:	a8 78 00 00 	l.ori r3,r24,0x0
    307c:	04 00 0b 21 	l.jal 5d00 <__umodsi3>
    3080:	a7 5a ff ff 	l.andi r26,r26,0xffff
    3084:	a8 78 00 00 	l.ori r3,r24,0x0
    3088:	a8 92 00 00 	l.ori r4,r18,0x0
    308c:	04 00 0a de 	l.jal 5c04 <__udivsi3>
    3090:	a9 cb 00 00 	l.ori r14,r11,0x0
    3094:	e0 ab 83 06 	l.mul r5,r11,r16
    3098:	b9 ce 00 10 	l.slli r14,r14,0x10
    309c:	e1 ce d0 04 	l.or r14,r14,r26
    30a0:	e4 a5 70 00 	l.sfleu r5,r14
    30a4:	10 00 00 0b 	l.bf 30d0 <__udivdi3+0x638>
    30a8:	a8 6b 00 00 	l.ori r3,r11,0x0
    30ac:	e1 ce 10 00 	l.add r14,r14,r2
    30b0:	e4 42 70 00 	l.sfgtu r2,r14
    30b4:	10 00 00 07 	l.bf 30d0 <__udivdi3+0x638>
    30b8:	9c 6b ff ff 	l.addi r3,r11,0xffffffff
    30bc:	e4 a5 70 00 	l.sfleu r5,r14
    30c0:	10 00 00 04 	l.bf 30d0 <__udivdi3+0x638>
    30c4:	15 00 00 00 	l.nop 0x0
    30c8:	9c 63 ff ff 	l.addi r3,r3,0xffffffff
    30cc:	e1 ce 10 00 	l.add r14,r14,r2
    30d0:	ba d6 00 10 	l.slli r22,r22,0x10
    30d4:	e1 ce 28 02 	l.sub r14,r14,r5
    30d8:	03 ff ff 24 	l.j 2d68 <__udivdi3+0x2d0>
    30dc:	e3 03 b0 04 	l.or r24,r3,r22
    30e0:	9c 40 00 08 	l.addi r2,r0,0x8
    30e4:	03 ff fe dc 	l.j 2c54 <__udivdi3+0x1bc>
    30e8:	a8 62 00 00 	l.ori r3,r2,0x0
    30ec:	03 ff fe da 	l.j 2c54 <__udivdi3+0x1bc>
    30f0:	a8 62 00 00 	l.ori r3,r2,0x0
    30f4:	03 ff ff 0e 	l.j 2d2c <__udivdi3+0x294>
    30f8:	a8 83 00 00 	l.ori r4,r3,0x0
    30fc:	03 ff fe ec 	l.j 2cac <__udivdi3+0x214>
    3100:	a9 63 00 00 	l.ori r11,r3,0x0
    3104:	e4 a7 18 00 	l.sfleu r7,r3
    3108:	13 ff ff 91 	l.bf 2f4c <__udivdi3+0x4b4>
    310c:	b9 76 00 10 	l.slli r11,r22,0x10
    3110:	9c a5 ff ff 	l.addi r5,r5,0xffffffff
    3114:	03 ff ff 8e 	l.j 2f4c <__udivdi3+0x4b4>
    3118:	e0 63 90 00 	l.add r3,r3,r18
    311c:	9e 10 ff ff 	l.addi r16,r16,0xffffffff
    3120:	03 ff fe a5 	l.j 2bb4 <__udivdi3+0x11c>
    3124:	e0 63 10 00 	l.add r3,r3,r2
    3128:	9d ce ff ff 	l.addi r14,r14,0xffffffff
    312c:	03 ff ff 24 	l.j 2dbc <__udivdi3+0x324>
    3130:	e0 63 10 00 	l.add r3,r3,r2
    3134:	bc 42 00 ff 	l.sfgtui r2,0xff
    3138:	0f ff ff 4b 	l.bnf 2e64 <__udivdi3+0x3cc>
    313c:	15 00 00 00 	l.nop 0x0
    3140:	9c 60 00 08 	l.addi r3,r0,0x8
    3144:	03 ff fe fa 	l.j 2d2c <__udivdi3+0x294>
    3148:	a8 83 00 00 	l.ori r4,r3,0x0

0000314c <_fpadd_parts>:
    314c:	d7 e1 17 fc 	l.sw 0xfffffffc(r1),r2
    3150:	84 c3 00 00 	l.lwz r6,0x0(r3)
    3154:	bc a6 00 01 	l.sfleui r6,0x1
    3158:	10 00 00 4e 	l.bf 3290 <_fpadd_parts+0x144>
    315c:	9c 21 ff fc 	l.addi r1,r1,0xfffffffc
    3160:	84 e4 00 00 	l.lwz r7,0x0(r4)
    3164:	bc a7 00 01 	l.sfleui r7,0x1
    3168:	10 00 00 6e 	l.bf 3320 <_fpadd_parts+0x1d4>
    316c:	bc 26 00 04 	l.sfnei r6,0x4
    3170:	0c 00 00 83 	l.bnf 337c <_fpadd_parts+0x230>
    3174:	bc 07 00 04 	l.sfeqi r7,0x4
    3178:	10 00 00 6a 	l.bf 3320 <_fpadd_parts+0x1d4>
    317c:	bc 27 00 02 	l.sfnei r7,0x2
    3180:	0c 00 00 55 	l.bnf 32d4 <_fpadd_parts+0x188>
    3184:	bc 06 00 02 	l.sfeqi r6,0x2
    3188:	10 00 00 66 	l.bf 3320 <_fpadd_parts+0x1d4>
    318c:	15 00 00 00 	l.nop 0x0
    3190:	84 e3 00 08 	l.lwz r7,0x8(r3)
    3194:	85 a4 00 08 	l.lwz r13,0x8(r4)
    3198:	85 83 00 0c 	l.lwz r12,0xc(r3)
    319c:	e1 67 68 02 	l.sub r11,r7,r13
    31a0:	b9 eb 00 9f 	l.srai r15,r11,0x1f
    31a4:	e0 cf 58 05 	l.xor r6,r15,r11
    31a8:	e0 c6 78 02 	l.sub r6,r6,r15
    31ac:	bd 46 00 1f 	l.sfgtsi r6,0x1f
    31b0:	10 00 00 3c 	l.bf 32a0 <_fpadd_parts+0x154>
    31b4:	85 04 00 0c 	l.lwz r8,0xc(r4)
    31b8:	bd ab 00 00 	l.sflesi r11,0x0
    31bc:	10 00 00 64 	l.bf 334c <_fpadd_parts+0x200>
    31c0:	9d a0 00 01 	l.addi r13,r0,0x1
    31c4:	e1 68 30 48 	l.srl r11,r8,r6
    31c8:	e0 cd 30 08 	l.sll r6,r13,r6
    31cc:	9c c6 ff ff 	l.addi r6,r6,0xffffffff
    31d0:	e1 06 40 03 	l.and r8,r6,r8
    31d4:	e0 c0 40 02 	l.sub r6,r0,r8
    31d8:	e1 06 40 04 	l.or r8,r6,r8
    31dc:	b9 08 00 5f 	l.srli r8,r8,0x1f
    31e0:	e1 08 58 04 	l.or r8,r8,r11
    31e4:	84 63 00 04 	l.lwz r3,0x4(r3)
    31e8:	84 84 00 04 	l.lwz r4,0x4(r4)
    31ec:	e4 03 20 00 	l.sfeq r3,r4
    31f0:	10 00 00 35 	l.bf 32c4 <_fpadd_parts+0x178>
    31f4:	e0 88 60 00 	l.add r4,r8,r12
    31f8:	bc 03 00 00 	l.sfeqi r3,0x0
    31fc:	10 00 00 03 	l.bf 3208 <_fpadd_parts+0xbc>
    3200:	e0 8c 40 02 	l.sub r4,r12,r8
    3204:	e0 88 60 02 	l.sub r4,r8,r12
    3208:	bd 84 00 00 	l.sfltsi r4,0x0
    320c:	10 00 00 4a 	l.bf 3334 <_fpadd_parts+0x1e8>
    3210:	9c 40 00 00 	l.addi r2,r0,0x0
    3214:	d4 05 38 08 	l.sw 0x8(r5),r7
    3218:	d4 05 10 04 	l.sw 0x4(r5),r2
    321c:	d4 05 20 0c 	l.sw 0xc(r5),r4
    3220:	18 40 3f ff 	l.movhi r2,0x3fff
    3224:	9c 64 ff ff 	l.addi r3,r4,0xffffffff
    3228:	a8 42 ff fe 	l.ori r2,r2,0xfffe
    322c:	e4 43 10 00 	l.sfgtu r3,r2
    3230:	10 00 00 0d 	l.bf 3264 <_fpadd_parts+0x118>
    3234:	9c c0 00 03 	l.addi r6,r0,0x3
    3238:	84 65 00 08 	l.lwz r3,0x8(r5)
    323c:	e0 84 20 00 	l.add r4,r4,r4
    3240:	18 40 3f ff 	l.movhi r2,0x3fff
    3244:	9c c4 ff ff 	l.addi r6,r4,0xffffffff
    3248:	a8 42 ff fe 	l.ori r2,r2,0xfffe
    324c:	e4 a6 10 00 	l.sfleu r6,r2
    3250:	13 ff ff fb 	l.bf 323c <_fpadd_parts+0xf0>
    3254:	9c 63 ff ff 	l.addi r3,r3,0xffffffff
    3258:	d4 05 20 0c 	l.sw 0xc(r5),r4
    325c:	d4 05 18 08 	l.sw 0x8(r5),r3
    3260:	9c c0 00 03 	l.addi r6,r0,0x3
    3264:	a8 65 00 00 	l.ori r3,r5,0x0
    3268:	bd 64 00 00 	l.sfgesi r4,0x0
    326c:	10 00 00 09 	l.bf 3290 <_fpadd_parts+0x144>
    3270:	d4 05 30 00 	l.sw 0x0(r5),r6
    3274:	b8 c4 00 41 	l.srli r6,r4,0x1
    3278:	84 a5 00 08 	l.lwz r5,0x8(r5)
    327c:	a4 84 00 01 	l.andi r4,r4,0x1
    3280:	9c a5 00 01 	l.addi r5,r5,0x1
    3284:	e0 84 30 04 	l.or r4,r4,r6
    3288:	d4 03 28 08 	l.sw 0x8(r3),r5
    328c:	d4 03 20 0c 	l.sw 0xc(r3),r4
    3290:	9c 21 00 04 	l.addi r1,r1,0x4
    3294:	a9 63 00 00 	l.ori r11,r3,0x0
    3298:	44 00 48 00 	l.jr r9
    329c:	84 41 ff fc 	l.lwz r2,0xfffffffc(r1)
    32a0:	e5 a7 68 00 	l.sfles r7,r13
    32a4:	10 00 00 1c 	l.bf 3314 <_fpadd_parts+0x1c8>
    32a8:	15 00 00 00 	l.nop 0x0
    32ac:	84 63 00 04 	l.lwz r3,0x4(r3)
    32b0:	84 84 00 04 	l.lwz r4,0x4(r4)
    32b4:	e4 03 20 00 	l.sfeq r3,r4
    32b8:	0f ff ff d0 	l.bnf 31f8 <_fpadd_parts+0xac>
    32bc:	9d 00 00 00 	l.addi r8,r0,0x0
    32c0:	e0 88 60 00 	l.add r4,r8,r12
    32c4:	d4 05 18 04 	l.sw 0x4(r5),r3
    32c8:	d4 05 38 08 	l.sw 0x8(r5),r7
    32cc:	03 ff ff e5 	l.j 3260 <_fpadd_parts+0x114>
    32d0:	d4 05 20 0c 	l.sw 0xc(r5),r4
    32d4:	bc 26 00 02 	l.sfnei r6,0x2
    32d8:	13 ff ff ee 	l.bf 3290 <_fpadd_parts+0x144>
    32dc:	15 00 00 00 	l.nop 0x0
    32e0:	d4 05 30 00 	l.sw 0x0(r5),r6
    32e4:	84 c3 00 04 	l.lwz r6,0x4(r3)
    32e8:	d4 05 30 04 	l.sw 0x4(r5),r6
    32ec:	84 c3 00 08 	l.lwz r6,0x8(r3)
    32f0:	d4 05 30 08 	l.sw 0x8(r5),r6
    32f4:	84 c3 00 0c 	l.lwz r6,0xc(r3)
    32f8:	d4 05 30 0c 	l.sw 0xc(r5),r6
    32fc:	84 c3 00 04 	l.lwz r6,0x4(r3)
    3300:	84 84 00 04 	l.lwz r4,0x4(r4)
    3304:	a8 65 00 00 	l.ori r3,r5,0x0
    3308:	e0 84 30 03 	l.and r4,r4,r6
    330c:	03 ff ff e1 	l.j 3290 <_fpadd_parts+0x144>
    3310:	d4 05 20 04 	l.sw 0x4(r5),r4
    3314:	a8 ed 00 00 	l.ori r7,r13,0x0
    3318:	03 ff ff b3 	l.j 31e4 <_fpadd_parts+0x98>
    331c:	9d 80 00 00 	l.addi r12,r0,0x0
    3320:	a8 64 00 00 	l.ori r3,r4,0x0
    3324:	9c 21 00 04 	l.addi r1,r1,0x4
    3328:	a9 63 00 00 	l.ori r11,r3,0x0
    332c:	44 00 48 00 	l.jr r9
    3330:	84 41 ff fc 	l.lwz r2,0xfffffffc(r1)
    3334:	e0 80 20 02 	l.sub r4,r0,r4
    3338:	9c 60 00 01 	l.addi r3,r0,0x1
    333c:	d4 05 38 08 	l.sw 0x8(r5),r7
    3340:	d4 05 18 04 	l.sw 0x4(r5),r3
    3344:	03 ff ff b7 	l.j 3220 <_fpadd_parts+0xd4>
    3348:	d4 05 20 0c 	l.sw 0xc(r5),r4
    334c:	bc 0b 00 00 	l.sfeqi r11,0x0
    3350:	13 ff ff a5 	l.bf 31e4 <_fpadd_parts+0x98>
    3354:	e1 6c 30 48 	l.srl r11,r12,r6
    3358:	e1 ad 30 08 	l.sll r13,r13,r6
    335c:	e0 e7 30 00 	l.add r7,r7,r6
    3360:	9c cd ff ff 	l.addi r6,r13,0xffffffff
    3364:	e1 86 60 03 	l.and r12,r6,r12
    3368:	e0 c0 60 02 	l.sub r6,r0,r12
    336c:	e1 86 60 04 	l.or r12,r6,r12
    3370:	b9 8c 00 5f 	l.srli r12,r12,0x1f
    3374:	03 ff ff 9c 	l.j 31e4 <_fpadd_parts+0x98>
    3378:	e1 8c 58 04 	l.or r12,r12,r11
    337c:	bc 27 00 04 	l.sfnei r7,0x4
    3380:	13 ff ff c4 	l.bf 3290 <_fpadd_parts+0x144>
    3384:	15 00 00 00 	l.nop 0x0
    3388:	84 a3 00 04 	l.lwz r5,0x4(r3)
    338c:	84 84 00 04 	l.lwz r4,0x4(r4)
    3390:	e4 25 20 00 	l.sfne r5,r4
    3394:	0f ff ff bf 	l.bnf 3290 <_fpadd_parts+0x144>
    3398:	15 00 00 00 	l.nop 0x0
    339c:	18 60 00 00 	l.movhi r3,0x0
    33a0:	03 ff ff bc 	l.j 3290 <_fpadd_parts+0x144>
    33a4:	a8 63 60 38 	l.ori r3,r3,0x6038

000033a8 <__pack_f>:
    33a8:	d7 e1 17 fc 	l.sw 0xfffffffc(r1),r2
    33ac:	84 a3 00 00 	l.lwz r5,0x0(r3)
    33b0:	9c 21 ff fc 	l.addi r1,r1,0xfffffffc
    33b4:	84 83 00 0c 	l.lwz r4,0xc(r3)
    33b8:	bc 45 00 01 	l.sfgtui r5,0x1
    33bc:	0c 00 00 3d 	l.bnf 34b0 <__pack_f+0x108>
    33c0:	84 c3 00 04 	l.lwz r6,0x4(r3)
    33c4:	bc 05 00 04 	l.sfeqi r5,0x4
    33c8:	10 00 00 37 	l.bf 34a4 <__pack_f+0xfc>
    33cc:	bc 05 00 02 	l.sfeqi r5,0x2
    33d0:	10 00 00 24 	l.bf 3460 <__pack_f+0xb8>
    33d4:	bc 04 00 00 	l.sfeqi r4,0x0
    33d8:	10 00 00 1b 	l.bf 3444 <__pack_f+0x9c>
    33dc:	15 00 00 00 	l.nop 0x0
    33e0:	84 63 00 08 	l.lwz r3,0x8(r3)
    33e4:	bd 63 ff 82 	l.sfgesi r3,0xffffff82
    33e8:	0c 00 00 39 	l.bnf 34cc <__pack_f+0x124>
    33ec:	bd 43 00 7f 	l.sfgtsi r3,0x7f
    33f0:	10 00 00 2d 	l.bf 34a4 <__pack_f+0xfc>
    33f4:	a4 a4 00 7f 	l.andi r5,r4,0x7f
    33f8:	bc 25 00 40 	l.sfnei r5,0x40
    33fc:	0c 00 00 21 	l.bnf 3480 <__pack_f+0xd8>
    3400:	9c 63 00 7f 	l.addi r3,r3,0x7f
    3404:	9c 84 00 3f 	l.addi r4,r4,0x3f
    3408:	bd 64 00 00 	l.sfgesi r4,0x0
    340c:	0c 00 00 23 	l.bnf 3498 <__pack_f+0xf0>
    3410:	15 00 00 00 	l.nop 0x0
    3414:	18 40 00 7f 	l.movhi r2,0x7f
    3418:	b8 a4 00 47 	l.srli r5,r4,0x7
    341c:	a8 42 ff ff 	l.ori r2,r2,0xffff
    3420:	a4 83 00 ff 	l.andi r4,r3,0xff
    3424:	e0 65 10 03 	l.and r3,r5,r2
    3428:	b8 84 00 17 	l.slli r4,r4,0x17
    342c:	b8 a6 00 1f 	l.slli r5,r6,0x1f
    3430:	e0 83 20 04 	l.or r4,r3,r4
    3434:	9c 21 00 04 	l.addi r1,r1,0x4
    3438:	e1 64 28 04 	l.or r11,r4,r5
    343c:	44 00 48 00 	l.jr r9
    3440:	84 41 ff fc 	l.lwz r2,0xfffffffc(r1)
    3444:	a8 64 00 00 	l.ori r3,r4,0x0
    3448:	b8 a6 00 1f 	l.slli r5,r6,0x1f
    344c:	e0 83 20 04 	l.or r4,r3,r4
    3450:	9c 21 00 04 	l.addi r1,r1,0x4
    3454:	e1 64 28 04 	l.or r11,r4,r5
    3458:	44 00 48 00 	l.jr r9
    345c:	84 41 ff fc 	l.lwz r2,0xfffffffc(r1)
    3460:	9c 80 00 00 	l.addi r4,r0,0x0
    3464:	b8 a6 00 1f 	l.slli r5,r6,0x1f
    3468:	a8 64 00 00 	l.ori r3,r4,0x0
    346c:	9c 21 00 04 	l.addi r1,r1,0x4
    3470:	e0 83 20 04 	l.or r4,r3,r4
    3474:	84 41 ff fc 	l.lwz r2,0xfffffffc(r1)
    3478:	44 00 48 00 	l.jr r9
    347c:	e1 64 28 04 	l.or r11,r4,r5
    3480:	a4 a4 00 80 	l.andi r5,r4,0x80
    3484:	bc 05 00 00 	l.sfeqi r5,0x0
    3488:	13 ff ff e1 	l.bf 340c <__pack_f+0x64>
    348c:	bd 64 00 00 	l.sfgesi r4,0x0
    3490:	03 ff ff de 	l.j 3408 <__pack_f+0x60>
    3494:	9c 84 00 40 	l.addi r4,r4,0x40
    3498:	b8 84 00 41 	l.srli r4,r4,0x1
    349c:	03 ff ff de 	l.j 3414 <__pack_f+0x6c>
    34a0:	9c 63 00 01 	l.addi r3,r3,0x1
    34a4:	18 80 7f 80 	l.movhi r4,0x7f80
    34a8:	03 ff ff e1 	l.j 342c <__pack_f+0x84>
    34ac:	9c 60 00 00 	l.addi r3,r0,0x0
    34b0:	18 40 00 10 	l.movhi r2,0x10
    34b4:	e0 64 10 04 	l.or r3,r4,r2
    34b8:	18 40 00 7f 	l.movhi r2,0x7f
    34bc:	18 80 7f 80 	l.movhi r4,0x7f80
    34c0:	a8 42 ff ff 	l.ori r2,r2,0xffff
    34c4:	03 ff ff da 	l.j 342c <__pack_f+0x84>
    34c8:	e0 63 10 03 	l.and r3,r3,r2
    34cc:	9c e0 ff 82 	l.addi r7,r0,0xffffff82
    34d0:	e0 67 18 02 	l.sub r3,r7,r3
    34d4:	bd 43 00 19 	l.sfgtsi r3,0x19
    34d8:	10 00 00 1f 	l.bf 3554 <__pack_f+0x1ac>
    34dc:	9c a0 00 00 	l.addi r5,r0,0x0
    34e0:	9c e0 00 01 	l.addi r7,r0,0x1
    34e4:	e0 a4 18 48 	l.srl r5,r4,r3
    34e8:	e0 67 18 08 	l.sll r3,r7,r3
    34ec:	9c 63 ff ff 	l.addi r3,r3,0xffffffff
    34f0:	e0 83 20 03 	l.and r4,r3,r4
    34f4:	e0 60 20 02 	l.sub r3,r0,r4
    34f8:	e0 63 20 04 	l.or r3,r3,r4
    34fc:	b8 63 00 5f 	l.srli r3,r3,0x1f
    3500:	e0 a3 28 04 	l.or r5,r3,r5
    3504:	a4 65 00 7f 	l.andi r3,r5,0x7f
    3508:	bc 23 00 40 	l.sfnei r3,0x40
    350c:	10 00 00 12 	l.bf 3554 <__pack_f+0x1ac>
    3510:	15 00 00 00 	l.nop 0x0
    3514:	a4 65 00 80 	l.andi r3,r5,0x80
    3518:	bc 03 00 00 	l.sfeqi r3,0x0
    351c:	10 00 00 04 	l.bf 352c <__pack_f+0x184>
    3520:	18 40 3f ff 	l.movhi r2,0x3fff
    3524:	9c a5 00 40 	l.addi r5,r5,0x40
    3528:	18 40 3f ff 	l.movhi r2,0x3fff
    352c:	b8 65 00 47 	l.srli r3,r5,0x7
    3530:	a8 42 ff ff 	l.ori r2,r2,0xffff
    3534:	9c 80 00 01 	l.addi r4,r0,0x1
    3538:	e4 45 10 00 	l.sfgtu r5,r2
    353c:	18 40 00 7f 	l.movhi r2,0x7f
    3540:	a8 42 ff ff 	l.ori r2,r2,0xffff
    3544:	13 ff ff b9 	l.bf 3428 <__pack_f+0x80>
    3548:	e0 63 10 03 	l.and r3,r3,r2
    354c:	03 ff ff b7 	l.j 3428 <__pack_f+0x80>
    3550:	9c 80 00 00 	l.addi r4,r0,0x0
    3554:	03 ff ff f5 	l.j 3528 <__pack_f+0x180>
    3558:	9c a5 00 3f 	l.addi r5,r5,0x3f

0000355c <__unpack_f>:
    355c:	d7 e1 17 fc 	l.sw 0xfffffffc(r1),r2
    3560:	18 40 00 7f 	l.movhi r2,0x7f
    3564:	84 a3 00 00 	l.lwz r5,0x0(r3)
    3568:	a8 42 ff ff 	l.ori r2,r2,0xffff
    356c:	b8 c5 00 57 	l.srli r6,r5,0x17
    3570:	b8 e5 00 5f 	l.srli r7,r5,0x1f
    3574:	9c 21 ff fc 	l.addi r1,r1,0xfffffffc
    3578:	a4 c6 00 ff 	l.andi r6,r6,0xff
    357c:	d4 04 38 04 	l.sw 0x4(r4),r7
    3580:	bc 26 00 00 	l.sfnei r6,0x0
    3584:	10 00 00 16 	l.bf 35dc <__unpack_f+0x80>
    3588:	e0 65 10 03 	l.and r3,r5,r2
    358c:	bc 23 00 00 	l.sfnei r3,0x0
    3590:	0c 00 00 20 	l.bnf 3610 <__unpack_f+0xb4>
    3594:	9c a0 ff 82 	l.addi r5,r0,0xffffff82
    3598:	b8 63 00 07 	l.slli r3,r3,0x7
    359c:	d4 04 28 08 	l.sw 0x8(r4),r5
    35a0:	9c a0 00 03 	l.addi r5,r0,0x3
    35a4:	d4 04 28 00 	l.sw 0x0(r4),r5
    35a8:	9c a0 ff 81 	l.addi r5,r0,0xffffff81
    35ac:	18 40 3f ff 	l.movhi r2,0x3fff
    35b0:	e0 63 18 00 	l.add r3,r3,r3
    35b4:	a8 42 ff ff 	l.ori r2,r2,0xffff
    35b8:	a8 c5 00 00 	l.ori r6,r5,0x0
    35bc:	e4 a3 10 00 	l.sfleu r3,r2
    35c0:	13 ff ff fb 	l.bf 35ac <__unpack_f+0x50>
    35c4:	9c a5 ff ff 	l.addi r5,r5,0xffffffff
    35c8:	9c 21 00 04 	l.addi r1,r1,0x4
    35cc:	d4 04 30 08 	l.sw 0x8(r4),r6
    35d0:	d4 04 18 0c 	l.sw 0xc(r4),r3
    35d4:	44 00 48 00 	l.jr r9
    35d8:	84 41 ff fc 	l.lwz r2,0xfffffffc(r1)
    35dc:	bc 26 00 ff 	l.sfnei r6,0xff
    35e0:	0c 00 00 11 	l.bnf 3624 <__unpack_f+0xc8>
    35e4:	9c c6 ff 81 	l.addi r6,r6,0xffffff81
    35e8:	b8 63 00 07 	l.slli r3,r3,0x7
    35ec:	18 40 40 00 	l.movhi r2,0x4000
    35f0:	d4 04 30 08 	l.sw 0x8(r4),r6
    35f4:	e0 63 10 04 	l.or r3,r3,r2
    35f8:	9c a0 00 03 	l.addi r5,r0,0x3
    35fc:	d4 04 28 00 	l.sw 0x0(r4),r5
    3600:	d4 04 18 0c 	l.sw 0xc(r4),r3
    3604:	9c 21 00 04 	l.addi r1,r1,0x4
    3608:	44 00 48 00 	l.jr r9
    360c:	84 41 ff fc 	l.lwz r2,0xfffffffc(r1)
    3610:	9c 60 00 02 	l.addi r3,r0,0x2
    3614:	9c 21 00 04 	l.addi r1,r1,0x4
    3618:	d4 04 18 00 	l.sw 0x0(r4),r3
    361c:	44 00 48 00 	l.jr r9
    3620:	84 41 ff fc 	l.lwz r2,0xfffffffc(r1)
    3624:	bc 23 00 00 	l.sfnei r3,0x0
    3628:	0c 00 00 0a 	l.bnf 3650 <__unpack_f+0xf4>
    362c:	15 00 00 00 	l.nop 0x0
    3630:	18 40 00 10 	l.movhi r2,0x10
    3634:	e0 a5 10 03 	l.and r5,r5,r2
    3638:	bc 05 00 00 	l.sfeqi r5,0x0
    363c:	13 ff ff f0 	l.bf 35fc <__unpack_f+0xa0>
    3640:	15 00 00 00 	l.nop 0x0
    3644:	9c a0 00 01 	l.addi r5,r0,0x1
    3648:	03 ff ff ee 	l.j 3600 <__unpack_f+0xa4>
    364c:	d4 04 28 00 	l.sw 0x0(r4),r5
    3650:	9c 60 00 04 	l.addi r3,r0,0x4
    3654:	03 ff ff ec 	l.j 3604 <__unpack_f+0xa8>
    3658:	d4 04 18 00 	l.sw 0x0(r4),r3

0000365c <__addsf3>:
    365c:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
    3660:	d7 e1 17 f4 	l.sw 0xfffffff4(r1),r2
    3664:	d7 e1 77 f8 	l.sw 0xfffffff8(r1),r14
    3668:	9c 21 ff bc 	l.addi r1,r1,0xffffffbc
    366c:	9d c1 00 20 	l.addi r14,r1,0x20
    3670:	d4 01 18 34 	l.sw 0x34(r1),r3
    3674:	d4 01 20 30 	l.sw 0x30(r1),r4
    3678:	9c 61 00 34 	l.addi r3,r1,0x34
    367c:	a8 8e 00 00 	l.ori r4,r14,0x0
    3680:	07 ff ff b7 	l.jal 355c <__unpack_f>
    3684:	9c 41 00 10 	l.addi r2,r1,0x10
    3688:	9c 61 00 30 	l.addi r3,r1,0x30
    368c:	07 ff ff b4 	l.jal 355c <__unpack_f>
    3690:	a8 82 00 00 	l.ori r4,r2,0x0
    3694:	a8 6e 00 00 	l.ori r3,r14,0x0
    3698:	a8 82 00 00 	l.ori r4,r2,0x0
    369c:	07 ff fe ac 	l.jal 314c <_fpadd_parts>
    36a0:	a8 a1 00 00 	l.ori r5,r1,0x0
    36a4:	07 ff ff 41 	l.jal 33a8 <__pack_f>
    36a8:	a8 6b 00 00 	l.ori r3,r11,0x0
    36ac:	9c 21 00 44 	l.addi r1,r1,0x44
    36b0:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    36b4:	84 41 ff f4 	l.lwz r2,0xfffffff4(r1)
    36b8:	44 00 48 00 	l.jr r9
    36bc:	85 c1 ff f8 	l.lwz r14,0xfffffff8(r1)

000036c0 <__subsf3>:
    36c0:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
    36c4:	d7 e1 17 f4 	l.sw 0xfffffff4(r1),r2
    36c8:	d7 e1 77 f8 	l.sw 0xfffffff8(r1),r14
    36cc:	9c 21 ff bc 	l.addi r1,r1,0xffffffbc
    36d0:	9d c1 00 20 	l.addi r14,r1,0x20
    36d4:	d4 01 18 34 	l.sw 0x34(r1),r3
    36d8:	d4 01 20 30 	l.sw 0x30(r1),r4
    36dc:	9c 61 00 34 	l.addi r3,r1,0x34
    36e0:	a8 8e 00 00 	l.ori r4,r14,0x0
    36e4:	07 ff ff 9e 	l.jal 355c <__unpack_f>
    36e8:	9c 41 00 10 	l.addi r2,r1,0x10
    36ec:	9c 61 00 30 	l.addi r3,r1,0x30
    36f0:	07 ff ff 9b 	l.jal 355c <__unpack_f>
    36f4:	a8 82 00 00 	l.ori r4,r2,0x0
    36f8:	84 c1 00 14 	l.lwz r6,0x14(r1)
    36fc:	a8 6e 00 00 	l.ori r3,r14,0x0
    3700:	ac c6 00 01 	l.xori r6,r6,0x1
    3704:	a8 82 00 00 	l.ori r4,r2,0x0
    3708:	a8 a1 00 00 	l.ori r5,r1,0x0
    370c:	07 ff fe 90 	l.jal 314c <_fpadd_parts>
    3710:	d4 01 30 14 	l.sw 0x14(r1),r6
    3714:	07 ff ff 25 	l.jal 33a8 <__pack_f>
    3718:	a8 6b 00 00 	l.ori r3,r11,0x0
    371c:	9c 21 00 44 	l.addi r1,r1,0x44
    3720:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    3724:	84 41 ff f4 	l.lwz r2,0xfffffff4(r1)
    3728:	44 00 48 00 	l.jr r9
    372c:	85 c1 ff f8 	l.lwz r14,0xfffffff8(r1)

00003730 <__mulsf3>:
    3730:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
    3734:	d7 e1 17 f4 	l.sw 0xfffffff4(r1),r2
    3738:	d7 e1 77 f8 	l.sw 0xfffffff8(r1),r14
    373c:	9c 21 ff bc 	l.addi r1,r1,0xffffffbc
    3740:	9c 41 00 20 	l.addi r2,r1,0x20
    3744:	d4 01 18 34 	l.sw 0x34(r1),r3
    3748:	d4 01 20 30 	l.sw 0x30(r1),r4
    374c:	9c 61 00 34 	l.addi r3,r1,0x34
    3750:	a8 82 00 00 	l.ori r4,r2,0x0
    3754:	07 ff ff 82 	l.jal 355c <__unpack_f>
    3758:	9d c1 00 10 	l.addi r14,r1,0x10
    375c:	9c 61 00 30 	l.addi r3,r1,0x30
    3760:	07 ff ff 7f 	l.jal 355c <__unpack_f>
    3764:	a8 8e 00 00 	l.ori r4,r14,0x0
    3768:	84 a1 00 20 	l.lwz r5,0x20(r1)
    376c:	bc 45 00 01 	l.sfgtui r5,0x1
    3770:	0c 00 00 5e 	l.bnf 38e8 <__mulsf3+0x1b8>
    3774:	84 c1 00 10 	l.lwz r6,0x10(r1)
    3778:	bc 46 00 01 	l.sfgtui r6,0x1
    377c:	0c 00 00 6d 	l.bnf 3930 <__mulsf3+0x200>
    3780:	bc 25 00 04 	l.sfnei r5,0x4
    3784:	0c 00 00 55 	l.bnf 38d8 <__mulsf3+0x1a8>
    3788:	bc 26 00 04 	l.sfnei r6,0x4
    378c:	0c 00 00 65 	l.bnf 3920 <__mulsf3+0x1f0>
    3790:	bc 25 00 02 	l.sfnei r5,0x2
    3794:	0c 00 00 55 	l.bnf 38e8 <__mulsf3+0x1b8>
    3798:	bc 26 00 02 	l.sfnei r6,0x2
    379c:	0c 00 00 65 	l.bnf 3930 <__mulsf3+0x200>
    37a0:	9c 60 00 00 	l.addi r3,r0,0x0
    37a4:	84 81 00 1c 	l.lwz r4,0x1c(r1)
    37a8:	a8 a3 00 00 	l.ori r5,r3,0x0
    37ac:	04 00 09 5d 	l.jal 5d20 <__muldi3>
    37b0:	84 c1 00 2c 	l.lwz r6,0x2c(r1)
    37b4:	84 61 00 24 	l.lwz r3,0x24(r1)
    37b8:	84 41 00 14 	l.lwz r2,0x14(r1)
    37bc:	84 81 00 28 	l.lwz r4,0x28(r1)
    37c0:	e0 43 10 05 	l.xor r2,r3,r2
    37c4:	84 a1 00 18 	l.lwz r5,0x18(r1)
    37c8:	e0 60 10 02 	l.sub r3,r0,r2
    37cc:	e0 85 20 00 	l.add r4,r5,r4
    37d0:	e0 43 10 04 	l.or r2,r3,r2
    37d4:	9c 64 00 02 	l.addi r3,r4,0x2
    37d8:	b8 42 00 5f 	l.srli r2,r2,0x1f
    37dc:	d4 01 18 08 	l.sw 0x8(r1),r3
    37e0:	bd 6b 00 00 	l.sfgesi r11,0x0
    37e4:	d4 01 10 04 	l.sw 0x4(r1),r2
    37e8:	10 00 00 08 	l.bf 3808 <__mulsf3+0xd8>
    37ec:	a8 6b 00 00 	l.ori r3,r11,0x0
    37f0:	a4 4b 00 01 	l.andi r2,r11,0x1
    37f4:	bc 02 00 00 	l.sfeqi r2,0x0
    37f8:	0c 00 00 2a 	l.bnf 38a0 <__mulsf3+0x170>
    37fc:	9c 84 00 03 	l.addi r4,r4,0x3
    3800:	b8 6b 00 41 	l.srli r3,r11,0x1
    3804:	d4 01 20 08 	l.sw 0x8(r1),r4
    3808:	18 40 3f ff 	l.movhi r2,0x3fff
    380c:	a8 42 ff ff 	l.ori r2,r2,0xffff
    3810:	e4 43 10 00 	l.sfgtu r3,r2
    3814:	10 00 00 14 	l.bf 3864 <__mulsf3+0x134>
    3818:	84 81 00 08 	l.lwz r4,0x8(r1)
    381c:	00 00 00 08 	l.j 383c <__mulsf3+0x10c>
    3820:	e0 63 18 00 	l.add r3,r3,r3
    3824:	18 40 3f ff 	l.movhi r2,0x3fff
    3828:	a8 42 ff ff 	l.ori r2,r2,0xffff
    382c:	e4 a3 10 00 	l.sfleu r3,r2
    3830:	0c 00 00 0c 	l.bnf 3860 <__mulsf3+0x130>
    3834:	e1 8c 60 00 	l.add r12,r12,r12
    3838:	e0 63 18 00 	l.add r3,r3,r3
    383c:	bd 6c 00 00 	l.sfgesi r12,0x0
    3840:	13 ff ff f9 	l.bf 3824 <__mulsf3+0xf4>
    3844:	9c 84 ff ff 	l.addi r4,r4,0xffffffff
    3848:	18 40 3f ff 	l.movhi r2,0x3fff
    384c:	a8 63 00 01 	l.ori r3,r3,0x1
    3850:	a8 42 ff ff 	l.ori r2,r2,0xffff
    3854:	e4 a3 10 00 	l.sfleu r3,r2
    3858:	13 ff ff f8 	l.bf 3838 <__mulsf3+0x108>
    385c:	e1 8c 60 00 	l.add r12,r12,r12
    3860:	d4 01 20 08 	l.sw 0x8(r1),r4
    3864:	a4 43 00 7f 	l.andi r2,r3,0x7f
    3868:	bc 22 00 40 	l.sfnei r2,0x40
    386c:	0c 00 00 11 	l.bnf 38b0 <__mulsf3+0x180>
    3870:	a4 43 00 80 	l.andi r2,r3,0x80
    3874:	9c 40 00 03 	l.addi r2,r0,0x3
    3878:	d4 01 18 0c 	l.sw 0xc(r1),r3
    387c:	d4 01 10 00 	l.sw 0x0(r1),r2
    3880:	a8 61 00 00 	l.ori r3,r1,0x0
    3884:	07 ff fe c9 	l.jal 33a8 <__pack_f>
    3888:	15 00 00 00 	l.nop 0x0
    388c:	9c 21 00 44 	l.addi r1,r1,0x44
    3890:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    3894:	84 41 ff f4 	l.lwz r2,0xfffffff4(r1)
    3898:	44 00 48 00 	l.jr r9
    389c:	85 c1 ff f8 	l.lwz r14,0xfffffff8(r1)
    38a0:	b9 8c 00 41 	l.srli r12,r12,0x1
    38a4:	18 40 80 00 	l.movhi r2,0x8000
    38a8:	03 ff ff d6 	l.j 3800 <__mulsf3+0xd0>
    38ac:	e1 8c 10 04 	l.or r12,r12,r2
    38b0:	bc 22 00 00 	l.sfnei r2,0x0
    38b4:	13 ff ff f1 	l.bf 3878 <__mulsf3+0x148>
    38b8:	9c 40 00 03 	l.addi r2,r0,0x3
    38bc:	bc 0c 00 00 	l.sfeqi r12,0x0
    38c0:	13 ff ff ee 	l.bf 3878 <__mulsf3+0x148>
    38c4:	15 00 00 00 	l.nop 0x0
    38c8:	9c 63 00 40 	l.addi r3,r3,0x40
    38cc:	9c 40 ff 80 	l.addi r2,r0,0xffffff80
    38d0:	03 ff ff e9 	l.j 3874 <__mulsf3+0x144>
    38d4:	e0 63 10 03 	l.and r3,r3,r2
    38d8:	18 60 00 00 	l.movhi r3,0x0
    38dc:	bc 06 00 02 	l.sfeqi r6,0x2
    38e0:	13 ff ff e9 	l.bf 3884 <__mulsf3+0x154>
    38e4:	a8 63 60 38 	l.ori r3,r3,0x6038
    38e8:	84 81 00 24 	l.lwz r4,0x24(r1)
    38ec:	a8 62 00 00 	l.ori r3,r2,0x0
    38f0:	84 41 00 14 	l.lwz r2,0x14(r1)
    38f4:	e0 44 10 05 	l.xor r2,r4,r2
    38f8:	e0 80 10 02 	l.sub r4,r0,r2
    38fc:	e0 44 10 04 	l.or r2,r4,r2
    3900:	b8 42 00 5f 	l.srli r2,r2,0x1f
    3904:	07 ff fe a9 	l.jal 33a8 <__pack_f>
    3908:	d4 01 10 24 	l.sw 0x24(r1),r2
    390c:	9c 21 00 44 	l.addi r1,r1,0x44
    3910:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    3914:	84 41 ff f4 	l.lwz r2,0xfffffff4(r1)
    3918:	44 00 48 00 	l.jr r9
    391c:	85 c1 ff f8 	l.lwz r14,0xfffffff8(r1)
    3920:	18 60 00 00 	l.movhi r3,0x0
    3924:	bc 05 00 02 	l.sfeqi r5,0x2
    3928:	13 ff ff d7 	l.bf 3884 <__mulsf3+0x154>
    392c:	a8 63 60 38 	l.ori r3,r3,0x6038
    3930:	84 41 00 14 	l.lwz r2,0x14(r1)
    3934:	84 81 00 24 	l.lwz r4,0x24(r1)
    3938:	a8 6e 00 00 	l.ori r3,r14,0x0
    393c:	e0 44 10 05 	l.xor r2,r4,r2
    3940:	e0 80 10 02 	l.sub r4,r0,r2
    3944:	e0 44 10 04 	l.or r2,r4,r2
    3948:	b8 42 00 5f 	l.srli r2,r2,0x1f
    394c:	07 ff fe 97 	l.jal 33a8 <__pack_f>
    3950:	d4 01 10 14 	l.sw 0x14(r1),r2
    3954:	9c 21 00 44 	l.addi r1,r1,0x44
    3958:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    395c:	84 41 ff f4 	l.lwz r2,0xfffffff4(r1)
    3960:	44 00 48 00 	l.jr r9
    3964:	85 c1 ff f8 	l.lwz r14,0xfffffff8(r1)

00003968 <__divsf3>:
    3968:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
    396c:	d7 e1 17 f4 	l.sw 0xfffffff4(r1),r2
    3970:	d7 e1 77 f8 	l.sw 0xfffffff8(r1),r14
    3974:	9c 21 ff cc 	l.addi r1,r1,0xffffffcc
    3978:	9c 41 00 10 	l.addi r2,r1,0x10
    397c:	d4 01 18 24 	l.sw 0x24(r1),r3
    3980:	d4 01 20 20 	l.sw 0x20(r1),r4
    3984:	9c 61 00 24 	l.addi r3,r1,0x24
    3988:	07 ff fe f5 	l.jal 355c <__unpack_f>
    398c:	a8 82 00 00 	l.ori r4,r2,0x0
    3990:	9c 61 00 20 	l.addi r3,r1,0x20
    3994:	07 ff fe f2 	l.jal 355c <__unpack_f>
    3998:	a8 81 00 00 	l.ori r4,r1,0x0
    399c:	84 a1 00 10 	l.lwz r5,0x10(r1)
    39a0:	bc a5 00 01 	l.sfleui r5,0x1
    39a4:	10 00 00 2c 	l.bf 3a54 <__divsf3+0xec>
    39a8:	a8 62 00 00 	l.ori r3,r2,0x0
    39ac:	84 c1 00 00 	l.lwz r6,0x0(r1)
    39b0:	bc a6 00 01 	l.sfleui r6,0x1
    39b4:	10 00 00 28 	l.bf 3a54 <__divsf3+0xec>
    39b8:	a8 61 00 00 	l.ori r3,r1,0x0
    39bc:	84 81 00 14 	l.lwz r4,0x14(r1)
    39c0:	84 61 00 04 	l.lwz r3,0x4(r1)
    39c4:	bc 05 00 04 	l.sfeqi r5,0x4
    39c8:	e0 64 18 05 	l.xor r3,r4,r3
    39cc:	10 00 00 2d 	l.bf 3a80 <__divsf3+0x118>
    39d0:	d4 01 18 14 	l.sw 0x14(r1),r3
    39d4:	bc 25 00 02 	l.sfnei r5,0x2
    39d8:	0c 00 00 2a 	l.bnf 3a80 <__divsf3+0x118>
    39dc:	bc 26 00 04 	l.sfnei r6,0x4
    39e0:	0c 00 00 40 	l.bnf 3ae0 <__divsf3+0x178>
    39e4:	bc 26 00 02 	l.sfnei r6,0x2
    39e8:	0c 00 00 35 	l.bnf 3abc <__divsf3+0x154>
    39ec:	84 a1 00 18 	l.lwz r5,0x18(r1)
    39f0:	84 81 00 08 	l.lwz r4,0x8(r1)
    39f4:	84 61 00 1c 	l.lwz r3,0x1c(r1)
    39f8:	e0 85 20 02 	l.sub r4,r5,r4
    39fc:	84 e1 00 0c 	l.lwz r7,0xc(r1)
    3a00:	e4 63 38 00 	l.sfgeu r3,r7
    3a04:	0c 00 00 1b 	l.bnf 3a70 <__divsf3+0x108>
    3a08:	d4 01 20 18 	l.sw 0x18(r1),r4
    3a0c:	9c a0 00 1f 	l.addi r5,r0,0x1f
    3a10:	18 c0 40 00 	l.movhi r6,0x4000
    3a14:	9d 00 00 00 	l.addi r8,r0,0x0
    3a18:	e4 47 18 00 	l.sfgtu r7,r3
    3a1c:	10 00 00 04 	l.bf 3a2c <__divsf3+0xc4>
    3a20:	9c a5 ff ff 	l.addi r5,r5,0xffffffff
    3a24:	e1 08 30 04 	l.or r8,r8,r6
    3a28:	e0 63 38 02 	l.sub r3,r3,r7
    3a2c:	b8 c6 00 41 	l.srli r6,r6,0x1
    3a30:	bc 25 00 00 	l.sfnei r5,0x0
    3a34:	13 ff ff f9 	l.bf 3a18 <__divsf3+0xb0>
    3a38:	e0 63 18 00 	l.add r3,r3,r3
    3a3c:	a4 88 00 7f 	l.andi r4,r8,0x7f
    3a40:	bc 24 00 40 	l.sfnei r4,0x40
    3a44:	0c 00 00 15 	l.bnf 3a98 <__divsf3+0x130>
    3a48:	a4 88 00 80 	l.andi r4,r8,0x80
    3a4c:	d4 01 40 1c 	l.sw 0x1c(r1),r8
    3a50:	a8 62 00 00 	l.ori r3,r2,0x0
    3a54:	07 ff fe 55 	l.jal 33a8 <__pack_f>
    3a58:	15 00 00 00 	l.nop 0x0
    3a5c:	9c 21 00 34 	l.addi r1,r1,0x34
    3a60:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    3a64:	84 41 ff f4 	l.lwz r2,0xfffffff4(r1)
    3a68:	44 00 48 00 	l.jr r9
    3a6c:	85 c1 ff f8 	l.lwz r14,0xfffffff8(r1)
    3a70:	9c 84 ff ff 	l.addi r4,r4,0xffffffff
    3a74:	e0 63 18 00 	l.add r3,r3,r3
    3a78:	03 ff ff e5 	l.j 3a0c <__divsf3+0xa4>
    3a7c:	d4 01 20 18 	l.sw 0x18(r1),r4
    3a80:	18 60 00 00 	l.movhi r3,0x0
    3a84:	e4 05 30 00 	l.sfeq r5,r6
    3a88:	0f ff ff f2 	l.bnf 3a50 <__divsf3+0xe8>
    3a8c:	a8 63 60 38 	l.ori r3,r3,0x6038
    3a90:	03 ff ff f1 	l.j 3a54 <__divsf3+0xec>
    3a94:	15 00 00 00 	l.nop 0x0
    3a98:	bc 24 00 00 	l.sfnei r4,0x0
    3a9c:	13 ff ff ec 	l.bf 3a4c <__divsf3+0xe4>
    3aa0:	bc 03 00 00 	l.sfeqi r3,0x0
    3aa4:	13 ff ff ea 	l.bf 3a4c <__divsf3+0xe4>
    3aa8:	9c 60 ff 80 	l.addi r3,r0,0xffffff80
    3aac:	9d 08 00 40 	l.addi r8,r8,0x40
    3ab0:	e1 08 18 03 	l.and r8,r8,r3
    3ab4:	03 ff ff e7 	l.j 3a50 <__divsf3+0xe8>
    3ab8:	d4 01 40 1c 	l.sw 0x1c(r1),r8
    3abc:	a8 62 00 00 	l.ori r3,r2,0x0
    3ac0:	9c 40 00 04 	l.addi r2,r0,0x4
    3ac4:	07 ff fe 39 	l.jal 33a8 <__pack_f>
    3ac8:	d4 01 10 10 	l.sw 0x10(r1),r2
    3acc:	9c 21 00 34 	l.addi r1,r1,0x34
    3ad0:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    3ad4:	84 41 ff f4 	l.lwz r2,0xfffffff4(r1)
    3ad8:	44 00 48 00 	l.jr r9
    3adc:	85 c1 ff f8 	l.lwz r14,0xfffffff8(r1)
    3ae0:	9c 60 00 00 	l.addi r3,r0,0x0
    3ae4:	d4 01 18 1c 	l.sw 0x1c(r1),r3
    3ae8:	d4 01 18 18 	l.sw 0x18(r1),r3
    3aec:	03 ff ff da 	l.j 3a54 <__divsf3+0xec>
    3af0:	a8 62 00 00 	l.ori r3,r2,0x0

00003af4 <__fpcmp_parts_f>:
    3af4:	84 a3 00 00 	l.lwz r5,0x0(r3)
    3af8:	9d 60 00 01 	l.addi r11,r0,0x1
    3afc:	e4 a5 58 00 	l.sfleu r5,r11
    3b00:	10 00 00 16 	l.bf 3b58 <__fpcmp_parts_f+0x64>
    3b04:	15 00 00 00 	l.nop 0x0
    3b08:	84 c4 00 00 	l.lwz r6,0x0(r4)
    3b0c:	e4 a6 58 00 	l.sfleu r6,r11
    3b10:	10 00 00 12 	l.bf 3b58 <__fpcmp_parts_f+0x64>
    3b14:	bc 25 00 04 	l.sfnei r5,0x4
    3b18:	0c 00 00 37 	l.bnf 3bf4 <__fpcmp_parts_f+0x100>
    3b1c:	bc 26 00 04 	l.sfnei r6,0x4
    3b20:	0c 00 00 19 	l.bnf 3b84 <__fpcmp_parts_f+0x90>
    3b24:	bc 25 00 02 	l.sfnei r5,0x2
    3b28:	0c 00 00 14 	l.bnf 3b78 <__fpcmp_parts_f+0x84>
    3b2c:	bc 26 00 02 	l.sfnei r6,0x2
    3b30:	0c 00 00 0c 	l.bnf 3b60 <__fpcmp_parts_f+0x6c>
    3b34:	15 00 00 00 	l.nop 0x0
    3b38:	84 a3 00 04 	l.lwz r5,0x4(r3)
    3b3c:	84 c4 00 04 	l.lwz r6,0x4(r4)
    3b40:	e4 05 30 00 	l.sfeq r5,r6
    3b44:	10 00 00 16 	l.bf 3b9c <__fpcmp_parts_f+0xa8>
    3b48:	15 00 00 00 	l.nop 0x0
    3b4c:	bc 05 00 00 	l.sfeqi r5,0x0
    3b50:	0c 00 00 08 	l.bnf 3b70 <__fpcmp_parts_f+0x7c>
    3b54:	15 00 00 00 	l.nop 0x0
    3b58:	44 00 48 00 	l.jr r9
    3b5c:	15 00 00 00 	l.nop 0x0
    3b60:	84 63 00 04 	l.lwz r3,0x4(r3)
    3b64:	bc 03 00 00 	l.sfeqi r3,0x0
    3b68:	13 ff ff fc 	l.bf 3b58 <__fpcmp_parts_f+0x64>
    3b6c:	15 00 00 00 	l.nop 0x0
    3b70:	44 00 48 00 	l.jr r9
    3b74:	9d 60 ff ff 	l.addi r11,r0,0xffffffff
    3b78:	bc 06 00 02 	l.sfeqi r6,0x2
    3b7c:	13 ff ff f7 	l.bf 3b58 <__fpcmp_parts_f+0x64>
    3b80:	9d 60 00 00 	l.addi r11,r0,0x0
    3b84:	84 64 00 04 	l.lwz r3,0x4(r4)
    3b88:	bc 03 00 00 	l.sfeqi r3,0x0
    3b8c:	13 ff ff f3 	l.bf 3b58 <__fpcmp_parts_f+0x64>
    3b90:	9d 60 ff ff 	l.addi r11,r0,0xffffffff
    3b94:	44 00 48 00 	l.jr r9
    3b98:	9d 60 00 01 	l.addi r11,r0,0x1
    3b9c:	84 e3 00 08 	l.lwz r7,0x8(r3)
    3ba0:	84 c4 00 08 	l.lwz r6,0x8(r4)
    3ba4:	e5 a7 30 00 	l.sfles r7,r6
    3ba8:	0f ff ff ea 	l.bnf 3b50 <__fpcmp_parts_f+0x5c>
    3bac:	bc 05 00 00 	l.sfeqi r5,0x0
    3bb0:	e5 67 30 00 	l.sfges r7,r6
    3bb4:	0c 00 00 0c 	l.bnf 3be4 <__fpcmp_parts_f+0xf0>
    3bb8:	bc 05 00 00 	l.sfeqi r5,0x0
    3bbc:	84 c3 00 0c 	l.lwz r6,0xc(r3)
    3bc0:	84 64 00 0c 	l.lwz r3,0xc(r4)
    3bc4:	e4 a6 18 00 	l.sfleu r6,r3
    3bc8:	10 00 00 04 	l.bf 3bd8 <__fpcmp_parts_f+0xe4>
    3bcc:	e4 66 18 00 	l.sfgeu r6,r3
    3bd0:	03 ff ff df 	l.j 3b4c <__fpcmp_parts_f+0x58>
    3bd4:	9d 60 00 01 	l.addi r11,r0,0x1
    3bd8:	13 ff ff e0 	l.bf 3b58 <__fpcmp_parts_f+0x64>
    3bdc:	9d 60 00 00 	l.addi r11,r0,0x0
    3be0:	bc 05 00 00 	l.sfeqi r5,0x0
    3be4:	0f ff ff ec 	l.bnf 3b94 <__fpcmp_parts_f+0xa0>
    3be8:	9d 60 ff ff 	l.addi r11,r0,0xffffffff
    3bec:	44 00 48 00 	l.jr r9
    3bf0:	15 00 00 00 	l.nop 0x0
    3bf4:	13 ff ff db 	l.bf 3b60 <__fpcmp_parts_f+0x6c>
    3bf8:	15 00 00 00 	l.nop 0x0
    3bfc:	85 64 00 04 	l.lwz r11,0x4(r4)
    3c00:	84 63 00 04 	l.lwz r3,0x4(r3)
    3c04:	44 00 48 00 	l.jr r9
    3c08:	e1 6b 18 02 	l.sub r11,r11,r3

00003c0c <__cmpsf2>:
    3c0c:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
    3c10:	d7 e1 17 f4 	l.sw 0xfffffff4(r1),r2
    3c14:	d7 e1 77 f8 	l.sw 0xfffffff8(r1),r14
    3c18:	9c 21 ff cc 	l.addi r1,r1,0xffffffcc
    3c1c:	9d c1 00 10 	l.addi r14,r1,0x10
    3c20:	d4 01 18 24 	l.sw 0x24(r1),r3
    3c24:	d4 01 20 20 	l.sw 0x20(r1),r4
    3c28:	9c 61 00 24 	l.addi r3,r1,0x24
    3c2c:	07 ff fe 4c 	l.jal 355c <__unpack_f>
    3c30:	a8 8e 00 00 	l.ori r4,r14,0x0
    3c34:	9c 61 00 20 	l.addi r3,r1,0x20
    3c38:	07 ff fe 49 	l.jal 355c <__unpack_f>
    3c3c:	a8 81 00 00 	l.ori r4,r1,0x0
    3c40:	a8 6e 00 00 	l.ori r3,r14,0x0
    3c44:	07 ff ff ac 	l.jal 3af4 <__fpcmp_parts_f>
    3c48:	a8 81 00 00 	l.ori r4,r1,0x0
    3c4c:	9c 21 00 34 	l.addi r1,r1,0x34
    3c50:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    3c54:	84 41 ff f4 	l.lwz r2,0xfffffff4(r1)
    3c58:	44 00 48 00 	l.jr r9
    3c5c:	85 c1 ff f8 	l.lwz r14,0xfffffff8(r1)

00003c60 <__eqsf2>:
    3c60:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
    3c64:	d7 e1 77 f8 	l.sw 0xfffffff8(r1),r14
    3c68:	d7 e1 17 f4 	l.sw 0xfffffff4(r1),r2
    3c6c:	9c 21 ff cc 	l.addi r1,r1,0xffffffcc
    3c70:	9d c1 00 10 	l.addi r14,r1,0x10
    3c74:	d4 01 18 24 	l.sw 0x24(r1),r3
    3c78:	d4 01 20 20 	l.sw 0x20(r1),r4
    3c7c:	9c 61 00 24 	l.addi r3,r1,0x24
    3c80:	07 ff fe 37 	l.jal 355c <__unpack_f>
    3c84:	a8 8e 00 00 	l.ori r4,r14,0x0
    3c88:	9c 61 00 20 	l.addi r3,r1,0x20
    3c8c:	07 ff fe 34 	l.jal 355c <__unpack_f>
    3c90:	a8 81 00 00 	l.ori r4,r1,0x0
    3c94:	9d 60 00 01 	l.addi r11,r0,0x1
    3c98:	84 61 00 10 	l.lwz r3,0x10(r1)
    3c9c:	e4 a3 58 00 	l.sfleu r3,r11
    3ca0:	10 00 00 07 	l.bf 3cbc <__eqsf2+0x5c>
    3ca4:	84 61 00 00 	l.lwz r3,0x0(r1)
    3ca8:	e4 a3 58 00 	l.sfleu r3,r11
    3cac:	10 00 00 04 	l.bf 3cbc <__eqsf2+0x5c>
    3cb0:	a8 6e 00 00 	l.ori r3,r14,0x0
    3cb4:	07 ff ff 90 	l.jal 3af4 <__fpcmp_parts_f>
    3cb8:	a8 81 00 00 	l.ori r4,r1,0x0
    3cbc:	9c 21 00 34 	l.addi r1,r1,0x34
    3cc0:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    3cc4:	84 41 ff f4 	l.lwz r2,0xfffffff4(r1)
    3cc8:	44 00 48 00 	l.jr r9
    3ccc:	85 c1 ff f8 	l.lwz r14,0xfffffff8(r1)

00003cd0 <__nesf2>:
    3cd0:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
    3cd4:	d7 e1 77 f8 	l.sw 0xfffffff8(r1),r14
    3cd8:	d7 e1 17 f4 	l.sw 0xfffffff4(r1),r2
    3cdc:	9c 21 ff cc 	l.addi r1,r1,0xffffffcc
    3ce0:	9d c1 00 10 	l.addi r14,r1,0x10
    3ce4:	d4 01 18 24 	l.sw 0x24(r1),r3
    3ce8:	d4 01 20 20 	l.sw 0x20(r1),r4
    3cec:	9c 61 00 24 	l.addi r3,r1,0x24
    3cf0:	07 ff fe 1b 	l.jal 355c <__unpack_f>
    3cf4:	a8 8e 00 00 	l.ori r4,r14,0x0
    3cf8:	9c 61 00 20 	l.addi r3,r1,0x20
    3cfc:	07 ff fe 18 	l.jal 355c <__unpack_f>
    3d00:	a8 81 00 00 	l.ori r4,r1,0x0
    3d04:	9d 60 00 01 	l.addi r11,r0,0x1
    3d08:	84 61 00 10 	l.lwz r3,0x10(r1)
    3d0c:	e4 a3 58 00 	l.sfleu r3,r11
    3d10:	10 00 00 07 	l.bf 3d2c <__nesf2+0x5c>
    3d14:	84 61 00 00 	l.lwz r3,0x0(r1)
    3d18:	e4 a3 58 00 	l.sfleu r3,r11
    3d1c:	10 00 00 04 	l.bf 3d2c <__nesf2+0x5c>
    3d20:	a8 6e 00 00 	l.ori r3,r14,0x0
    3d24:	07 ff ff 74 	l.jal 3af4 <__fpcmp_parts_f>
    3d28:	a8 81 00 00 	l.ori r4,r1,0x0
    3d2c:	9c 21 00 34 	l.addi r1,r1,0x34
    3d30:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    3d34:	84 41 ff f4 	l.lwz r2,0xfffffff4(r1)
    3d38:	44 00 48 00 	l.jr r9
    3d3c:	85 c1 ff f8 	l.lwz r14,0xfffffff8(r1)

00003d40 <__gtsf2>:
    3d40:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
    3d44:	d7 e1 77 f8 	l.sw 0xfffffff8(r1),r14
    3d48:	d7 e1 17 f4 	l.sw 0xfffffff4(r1),r2
    3d4c:	9c 21 ff cc 	l.addi r1,r1,0xffffffcc
    3d50:	9d c1 00 10 	l.addi r14,r1,0x10
    3d54:	d4 01 18 24 	l.sw 0x24(r1),r3
    3d58:	d4 01 20 20 	l.sw 0x20(r1),r4
    3d5c:	9c 61 00 24 	l.addi r3,r1,0x24
    3d60:	07 ff fd ff 	l.jal 355c <__unpack_f>
    3d64:	a8 8e 00 00 	l.ori r4,r14,0x0
    3d68:	9c 61 00 20 	l.addi r3,r1,0x20
    3d6c:	07 ff fd fc 	l.jal 355c <__unpack_f>
    3d70:	a8 81 00 00 	l.ori r4,r1,0x0
    3d74:	84 61 00 10 	l.lwz r3,0x10(r1)
    3d78:	bc a3 00 01 	l.sfleui r3,0x1
    3d7c:	10 00 00 08 	l.bf 3d9c <__gtsf2+0x5c>
    3d80:	9d 60 ff ff 	l.addi r11,r0,0xffffffff
    3d84:	84 61 00 00 	l.lwz r3,0x0(r1)
    3d88:	bc a3 00 01 	l.sfleui r3,0x1
    3d8c:	10 00 00 04 	l.bf 3d9c <__gtsf2+0x5c>
    3d90:	a8 6e 00 00 	l.ori r3,r14,0x0
    3d94:	07 ff ff 58 	l.jal 3af4 <__fpcmp_parts_f>
    3d98:	a8 81 00 00 	l.ori r4,r1,0x0
    3d9c:	9c 21 00 34 	l.addi r1,r1,0x34
    3da0:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    3da4:	84 41 ff f4 	l.lwz r2,0xfffffff4(r1)
    3da8:	44 00 48 00 	l.jr r9
    3dac:	85 c1 ff f8 	l.lwz r14,0xfffffff8(r1)

00003db0 <__gesf2>:
    3db0:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
    3db4:	d7 e1 77 f8 	l.sw 0xfffffff8(r1),r14
    3db8:	d7 e1 17 f4 	l.sw 0xfffffff4(r1),r2
    3dbc:	9c 21 ff cc 	l.addi r1,r1,0xffffffcc
    3dc0:	9d c1 00 10 	l.addi r14,r1,0x10
    3dc4:	d4 01 18 24 	l.sw 0x24(r1),r3
    3dc8:	d4 01 20 20 	l.sw 0x20(r1),r4
    3dcc:	9c 61 00 24 	l.addi r3,r1,0x24
    3dd0:	07 ff fd e3 	l.jal 355c <__unpack_f>
    3dd4:	a8 8e 00 00 	l.ori r4,r14,0x0
    3dd8:	9c 61 00 20 	l.addi r3,r1,0x20
    3ddc:	07 ff fd e0 	l.jal 355c <__unpack_f>
    3de0:	a8 81 00 00 	l.ori r4,r1,0x0
    3de4:	84 61 00 10 	l.lwz r3,0x10(r1)
    3de8:	bc a3 00 01 	l.sfleui r3,0x1
    3dec:	10 00 00 08 	l.bf 3e0c <__gesf2+0x5c>
    3df0:	9d 60 ff ff 	l.addi r11,r0,0xffffffff
    3df4:	84 61 00 00 	l.lwz r3,0x0(r1)
    3df8:	bc a3 00 01 	l.sfleui r3,0x1
    3dfc:	10 00 00 04 	l.bf 3e0c <__gesf2+0x5c>
    3e00:	a8 6e 00 00 	l.ori r3,r14,0x0
    3e04:	07 ff ff 3c 	l.jal 3af4 <__fpcmp_parts_f>
    3e08:	a8 81 00 00 	l.ori r4,r1,0x0
    3e0c:	9c 21 00 34 	l.addi r1,r1,0x34
    3e10:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    3e14:	84 41 ff f4 	l.lwz r2,0xfffffff4(r1)
    3e18:	44 00 48 00 	l.jr r9
    3e1c:	85 c1 ff f8 	l.lwz r14,0xfffffff8(r1)

00003e20 <__ltsf2>:
    3e20:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
    3e24:	d7 e1 77 f8 	l.sw 0xfffffff8(r1),r14
    3e28:	d7 e1 17 f4 	l.sw 0xfffffff4(r1),r2
    3e2c:	9c 21 ff cc 	l.addi r1,r1,0xffffffcc
    3e30:	9d c1 00 10 	l.addi r14,r1,0x10
    3e34:	d4 01 18 24 	l.sw 0x24(r1),r3
    3e38:	d4 01 20 20 	l.sw 0x20(r1),r4
    3e3c:	9c 61 00 24 	l.addi r3,r1,0x24
    3e40:	07 ff fd c7 	l.jal 355c <__unpack_f>
    3e44:	a8 8e 00 00 	l.ori r4,r14,0x0
    3e48:	9c 61 00 20 	l.addi r3,r1,0x20
    3e4c:	07 ff fd c4 	l.jal 355c <__unpack_f>
    3e50:	a8 81 00 00 	l.ori r4,r1,0x0
    3e54:	9d 60 00 01 	l.addi r11,r0,0x1
    3e58:	84 61 00 10 	l.lwz r3,0x10(r1)
    3e5c:	e4 a3 58 00 	l.sfleu r3,r11
    3e60:	10 00 00 07 	l.bf 3e7c <__ltsf2+0x5c>
    3e64:	84 61 00 00 	l.lwz r3,0x0(r1)
    3e68:	e4 a3 58 00 	l.sfleu r3,r11
    3e6c:	10 00 00 04 	l.bf 3e7c <__ltsf2+0x5c>
    3e70:	a8 6e 00 00 	l.ori r3,r14,0x0
    3e74:	07 ff ff 20 	l.jal 3af4 <__fpcmp_parts_f>
    3e78:	a8 81 00 00 	l.ori r4,r1,0x0
    3e7c:	9c 21 00 34 	l.addi r1,r1,0x34
    3e80:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    3e84:	84 41 ff f4 	l.lwz r2,0xfffffff4(r1)
    3e88:	44 00 48 00 	l.jr r9
    3e8c:	85 c1 ff f8 	l.lwz r14,0xfffffff8(r1)

00003e90 <__lesf2>:
    3e90:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
    3e94:	d7 e1 77 f8 	l.sw 0xfffffff8(r1),r14
    3e98:	d7 e1 17 f4 	l.sw 0xfffffff4(r1),r2
    3e9c:	9c 21 ff cc 	l.addi r1,r1,0xffffffcc
    3ea0:	9d c1 00 10 	l.addi r14,r1,0x10
    3ea4:	d4 01 18 24 	l.sw 0x24(r1),r3
    3ea8:	d4 01 20 20 	l.sw 0x20(r1),r4
    3eac:	9c 61 00 24 	l.addi r3,r1,0x24
    3eb0:	07 ff fd ab 	l.jal 355c <__unpack_f>
    3eb4:	a8 8e 00 00 	l.ori r4,r14,0x0
    3eb8:	9c 61 00 20 	l.addi r3,r1,0x20
    3ebc:	07 ff fd a8 	l.jal 355c <__unpack_f>
    3ec0:	a8 81 00 00 	l.ori r4,r1,0x0
    3ec4:	9d 60 00 01 	l.addi r11,r0,0x1
    3ec8:	84 61 00 10 	l.lwz r3,0x10(r1)
    3ecc:	e4 a3 58 00 	l.sfleu r3,r11
    3ed0:	10 00 00 07 	l.bf 3eec <__lesf2+0x5c>
    3ed4:	84 61 00 00 	l.lwz r3,0x0(r1)
    3ed8:	e4 a3 58 00 	l.sfleu r3,r11
    3edc:	10 00 00 04 	l.bf 3eec <__lesf2+0x5c>
    3ee0:	a8 6e 00 00 	l.ori r3,r14,0x0
    3ee4:	07 ff ff 04 	l.jal 3af4 <__fpcmp_parts_f>
    3ee8:	a8 81 00 00 	l.ori r4,r1,0x0
    3eec:	9c 21 00 34 	l.addi r1,r1,0x34
    3ef0:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    3ef4:	84 41 ff f4 	l.lwz r2,0xfffffff4(r1)
    3ef8:	44 00 48 00 	l.jr r9
    3efc:	85 c1 ff f8 	l.lwz r14,0xfffffff8(r1)

00003f00 <__unordsf2>:
    3f00:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
    3f04:	9c 21 ff d4 	l.addi r1,r1,0xffffffd4
    3f08:	d4 01 18 24 	l.sw 0x24(r1),r3
    3f0c:	d4 01 20 20 	l.sw 0x20(r1),r4
    3f10:	9c 61 00 24 	l.addi r3,r1,0x24
    3f14:	07 ff fd 92 	l.jal 355c <__unpack_f>
    3f18:	9c 81 00 10 	l.addi r4,r1,0x10
    3f1c:	9c 61 00 20 	l.addi r3,r1,0x20
    3f20:	07 ff fd 8f 	l.jal 355c <__unpack_f>
    3f24:	a8 81 00 00 	l.ori r4,r1,0x0
    3f28:	9d 60 00 01 	l.addi r11,r0,0x1
    3f2c:	84 61 00 10 	l.lwz r3,0x10(r1)
    3f30:	e4 a3 58 00 	l.sfleu r3,r11
    3f34:	10 00 00 05 	l.bf 3f48 <__unordsf2+0x48>
    3f38:	84 61 00 00 	l.lwz r3,0x0(r1)
    3f3c:	e4 a3 58 00 	l.sfleu r3,r11
    3f40:	0c 00 00 06 	l.bnf 3f58 <__unordsf2+0x58>
    3f44:	15 00 00 00 	l.nop 0x0
    3f48:	9c 21 00 2c 	l.addi r1,r1,0x2c
    3f4c:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    3f50:	44 00 48 00 	l.jr r9
    3f54:	15 00 00 00 	l.nop 0x0
    3f58:	9c 21 00 2c 	l.addi r1,r1,0x2c
    3f5c:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    3f60:	44 00 48 00 	l.jr r9
    3f64:	9d 60 00 00 	l.addi r11,r0,0x0

00003f68 <__floatsisf>:
    3f68:	b8 83 00 5f 	l.srli r4,r3,0x1f
    3f6c:	d7 e1 17 f8 	l.sw 0xfffffff8(r1),r2
    3f70:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
    3f74:	9c 40 00 03 	l.addi r2,r0,0x3
    3f78:	9c 21 ff e8 	l.addi r1,r1,0xffffffe8
    3f7c:	bc 23 00 00 	l.sfnei r3,0x0
    3f80:	d4 01 10 00 	l.sw 0x0(r1),r2
    3f84:	10 00 00 0a 	l.bf 3fac <__floatsisf+0x44>
    3f88:	d4 01 20 04 	l.sw 0x4(r1),r4
    3f8c:	9c 40 00 02 	l.addi r2,r0,0x2
    3f90:	d4 01 10 00 	l.sw 0x0(r1),r2
    3f94:	07 ff fd 05 	l.jal 33a8 <__pack_f>
    3f98:	a8 61 00 00 	l.ori r3,r1,0x0
    3f9c:	9c 21 00 18 	l.addi r1,r1,0x18
    3fa0:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    3fa4:	44 00 48 00 	l.jr r9
    3fa8:	84 41 ff f8 	l.lwz r2,0xfffffff8(r1)
    3fac:	a8 43 00 00 	l.ori r2,r3,0x0
    3fb0:	9c 60 00 1e 	l.addi r3,r0,0x1e
    3fb4:	bc 04 00 00 	l.sfeqi r4,0x0
    3fb8:	10 00 00 07 	l.bf 3fd4 <__floatsisf+0x6c>
    3fbc:	d4 01 18 08 	l.sw 0x8(r1),r3
    3fc0:	18 60 80 00 	l.movhi r3,0x8000
    3fc4:	e4 02 18 00 	l.sfeq r2,r3
    3fc8:	10 00 00 0f 	l.bf 4004 <__floatsisf+0x9c>
    3fcc:	15 00 00 00 	l.nop 0x0
    3fd0:	e0 40 10 02 	l.sub r2,r0,r2
    3fd4:	a8 62 00 00 	l.ori r3,r2,0x0
    3fd8:	04 00 07 97 	l.jal 5e34 <__clzsi2>
    3fdc:	d4 01 10 0c 	l.sw 0xc(r1),r2
    3fe0:	9d 6b ff ff 	l.addi r11,r11,0xffffffff
    3fe4:	bd ab 00 00 	l.sflesi r11,0x0
    3fe8:	13 ff ff eb 	l.bf 3f94 <__floatsisf+0x2c>
    3fec:	9c 60 00 1e 	l.addi r3,r0,0x1e
    3ff0:	e0 42 58 08 	l.sll r2,r2,r11
    3ff4:	e1 63 58 02 	l.sub r11,r3,r11
    3ff8:	d4 01 10 0c 	l.sw 0xc(r1),r2
    3ffc:	03 ff ff e6 	l.j 3f94 <__floatsisf+0x2c>
    4000:	d4 01 58 08 	l.sw 0x8(r1),r11
    4004:	18 40 00 00 	l.movhi r2,0x0
    4008:	a8 42 62 d8 	l.ori r2,r2,0x62d8
    400c:	03 ff ff e4 	l.j 3f9c <__floatsisf+0x34>
    4010:	85 62 00 00 	l.lwz r11,0x0(r2)

00004014 <__floatunsisf>:
    4014:	d7 e1 17 f4 	l.sw 0xfffffff4(r1),r2
    4018:	9c 80 00 00 	l.addi r4,r0,0x0
    401c:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
    4020:	d7 e1 77 f8 	l.sw 0xfffffff8(r1),r14
    4024:	9c 21 ff e4 	l.addi r1,r1,0xffffffe4
    4028:	a8 43 00 00 	l.ori r2,r3,0x0
    402c:	e4 23 20 00 	l.sfne r3,r4
    4030:	0c 00 00 18 	l.bnf 4090 <__floatunsisf+0x7c>
    4034:	d4 01 20 04 	l.sw 0x4(r1),r4
    4038:	9c 80 00 03 	l.addi r4,r0,0x3
    403c:	9d c0 00 1e 	l.addi r14,r0,0x1e
    4040:	d4 01 20 00 	l.sw 0x0(r1),r4
    4044:	d4 01 70 08 	l.sw 0x8(r1),r14
    4048:	04 00 07 7b 	l.jal 5e34 <__clzsi2>
    404c:	d4 01 18 0c 	l.sw 0xc(r1),r3
    4050:	9d 6b ff ff 	l.addi r11,r11,0xffffffff
    4054:	bd 6b 00 00 	l.sfgesi r11,0x0
    4058:	0c 00 00 17 	l.bnf 40b4 <__floatunsisf+0xa0>
    405c:	bc 0b 00 00 	l.sfeqi r11,0x0
    4060:	10 00 00 05 	l.bf 4074 <__floatunsisf+0x60>
    4064:	e0 42 58 08 	l.sll r2,r2,r11
    4068:	e1 6e 58 02 	l.sub r11,r14,r11
    406c:	d4 01 10 0c 	l.sw 0xc(r1),r2
    4070:	d4 01 58 08 	l.sw 0x8(r1),r11
    4074:	07 ff fc cd 	l.jal 33a8 <__pack_f>
    4078:	a8 61 00 00 	l.ori r3,r1,0x0
    407c:	9c 21 00 1c 	l.addi r1,r1,0x1c
    4080:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    4084:	84 41 ff f4 	l.lwz r2,0xfffffff4(r1)
    4088:	44 00 48 00 	l.jr r9
    408c:	85 c1 ff f8 	l.lwz r14,0xfffffff8(r1)
    4090:	9c 40 00 02 	l.addi r2,r0,0x2
    4094:	a8 61 00 00 	l.ori r3,r1,0x0
    4098:	07 ff fc c4 	l.jal 33a8 <__pack_f>
    409c:	d4 01 10 00 	l.sw 0x0(r1),r2
    40a0:	9c 21 00 1c 	l.addi r1,r1,0x1c
    40a4:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    40a8:	84 41 ff f4 	l.lwz r2,0xfffffff4(r1)
    40ac:	44 00 48 00 	l.jr r9
    40b0:	85 c1 ff f8 	l.lwz r14,0xfffffff8(r1)
    40b4:	e0 60 58 02 	l.sub r3,r0,r11
    40b8:	9c a0 00 01 	l.addi r5,r0,0x1
    40bc:	e0 82 18 48 	l.srl r4,r2,r3
    40c0:	e0 65 18 08 	l.sll r3,r5,r3
    40c4:	e1 6e 58 02 	l.sub r11,r14,r11
    40c8:	9c 63 ff ff 	l.addi r3,r3,0xffffffff
    40cc:	d4 01 58 08 	l.sw 0x8(r1),r11
    40d0:	e0 43 10 03 	l.and r2,r3,r2
    40d4:	e0 60 10 02 	l.sub r3,r0,r2
    40d8:	e0 43 10 04 	l.or r2,r3,r2
    40dc:	a8 61 00 00 	l.ori r3,r1,0x0
    40e0:	b8 42 00 5f 	l.srli r2,r2,0x1f
    40e4:	e0 42 20 04 	l.or r2,r2,r4
    40e8:	07 ff fc b0 	l.jal 33a8 <__pack_f>
    40ec:	d4 01 10 0c 	l.sw 0xc(r1),r2
    40f0:	9c 21 00 1c 	l.addi r1,r1,0x1c
    40f4:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    40f8:	84 41 ff f4 	l.lwz r2,0xfffffff4(r1)
    40fc:	44 00 48 00 	l.jr r9
    4100:	85 c1 ff f8 	l.lwz r14,0xfffffff8(r1)

00004104 <__fixsfsi>:
    4104:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
    4108:	9c 21 ff e8 	l.addi r1,r1,0xffffffe8
    410c:	d4 01 18 10 	l.sw 0x10(r1),r3
    4110:	a8 81 00 00 	l.ori r4,r1,0x0
    4114:	07 ff fd 12 	l.jal 355c <__unpack_f>
    4118:	9c 61 00 10 	l.addi r3,r1,0x10
    411c:	84 61 00 00 	l.lwz r3,0x0(r1)
    4120:	bc 03 00 02 	l.sfeqi r3,0x2
    4124:	10 00 00 12 	l.bf 416c <__fixsfsi+0x68>
    4128:	9d 60 00 00 	l.addi r11,r0,0x0
    412c:	bc a3 00 01 	l.sfleui r3,0x1
    4130:	10 00 00 0f 	l.bf 416c <__fixsfsi+0x68>
    4134:	bc 23 00 04 	l.sfnei r3,0x4
    4138:	0c 00 00 1d 	l.bnf 41ac <__fixsfsi+0xa8>
    413c:	84 61 00 08 	l.lwz r3,0x8(r1)
    4140:	bd 83 00 00 	l.sfltsi r3,0x0
    4144:	10 00 00 0a 	l.bf 416c <__fixsfsi+0x68>
    4148:	bd a3 00 1e 	l.sflesi r3,0x1e
    414c:	10 00 00 0c 	l.bf 417c <__fixsfsi+0x78>
    4150:	15 00 00 00 	l.nop 0x0
    4154:	84 61 00 04 	l.lwz r3,0x4(r1)
    4158:	bc 03 00 00 	l.sfeqi r3,0x0
    415c:	0c 00 00 18 	l.bnf 41bc <__fixsfsi+0xb8>
    4160:	15 00 00 00 	l.nop 0x0
    4164:	19 60 7f ff 	l.movhi r11,0x7fff
    4168:	a9 6b ff ff 	l.ori r11,r11,0xffff
    416c:	9c 21 00 18 	l.addi r1,r1,0x18
    4170:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    4174:	44 00 48 00 	l.jr r9
    4178:	15 00 00 00 	l.nop 0x0
    417c:	9d 60 00 1e 	l.addi r11,r0,0x1e
    4180:	e0 6b 18 02 	l.sub r3,r11,r3
    4184:	85 61 00 0c 	l.lwz r11,0xc(r1)
    4188:	e1 6b 18 48 	l.srl r11,r11,r3
    418c:	84 61 00 04 	l.lwz r3,0x4(r1)
    4190:	bc 03 00 00 	l.sfeqi r3,0x0
    4194:	13 ff ff f6 	l.bf 416c <__fixsfsi+0x68>
    4198:	15 00 00 00 	l.nop 0x0
    419c:	9c 21 00 18 	l.addi r1,r1,0x18
    41a0:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    41a4:	44 00 48 00 	l.jr r9
    41a8:	e1 60 58 02 	l.sub r11,r0,r11
    41ac:	84 61 00 04 	l.lwz r3,0x4(r1)
    41b0:	e4 03 58 00 	l.sfeq r3,r11
    41b4:	13 ff ff ec 	l.bf 4164 <__fixsfsi+0x60>
    41b8:	15 00 00 00 	l.nop 0x0
    41bc:	9c 21 00 18 	l.addi r1,r1,0x18
    41c0:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    41c4:	44 00 48 00 	l.jr r9
    41c8:	19 60 80 00 	l.movhi r11,0x8000

000041cc <__negsf2>:
    41cc:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
    41d0:	d7 e1 17 f8 	l.sw 0xfffffff8(r1),r2
    41d4:	9c 21 ff e4 	l.addi r1,r1,0xffffffe4
    41d8:	d4 01 18 10 	l.sw 0x10(r1),r3
    41dc:	a8 81 00 00 	l.ori r4,r1,0x0
    41e0:	07 ff fc df 	l.jal 355c <__unpack_f>
    41e4:	9c 61 00 10 	l.addi r3,r1,0x10
    41e8:	84 81 00 04 	l.lwz r4,0x4(r1)
    41ec:	a8 61 00 00 	l.ori r3,r1,0x0
    41f0:	e0 40 20 02 	l.sub r2,r0,r4
    41f4:	e0 42 20 04 	l.or r2,r2,r4
    41f8:	ac 42 ff ff 	l.xori r2,r2,0xffffffff
    41fc:	b8 42 00 5f 	l.srli r2,r2,0x1f
    4200:	07 ff fc 6a 	l.jal 33a8 <__pack_f>
    4204:	d4 01 10 04 	l.sw 0x4(r1),r2
    4208:	9c 21 00 1c 	l.addi r1,r1,0x1c
    420c:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    4210:	44 00 48 00 	l.jr r9
    4214:	84 41 ff f8 	l.lwz r2,0xfffffff8(r1)

00004218 <__make_fp>:
    4218:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
    421c:	9c 21 ff ec 	l.addi r1,r1,0xffffffec
    4220:	d4 01 18 00 	l.sw 0x0(r1),r3
    4224:	a8 61 00 00 	l.ori r3,r1,0x0
    4228:	d4 01 20 04 	l.sw 0x4(r1),r4
    422c:	d4 01 28 08 	l.sw 0x8(r1),r5
    4230:	07 ff fc 5e 	l.jal 33a8 <__pack_f>
    4234:	d4 01 30 0c 	l.sw 0xc(r1),r6
    4238:	9c 21 00 14 	l.addi r1,r1,0x14
    423c:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    4240:	44 00 48 00 	l.jr r9
    4244:	15 00 00 00 	l.nop 0x0

00004248 <__extendsfdf2>:
    4248:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
    424c:	d7 e1 17 f8 	l.sw 0xfffffff8(r1),r2
    4250:	9c 21 ff e4 	l.addi r1,r1,0xffffffe4
    4254:	d4 01 18 10 	l.sw 0x10(r1),r3
    4258:	a8 81 00 00 	l.ori r4,r1,0x0
    425c:	07 ff fc c0 	l.jal 355c <__unpack_f>
    4260:	9c 61 00 10 	l.addi r3,r1,0x10
    4264:	85 01 00 0c 	l.lwz r8,0xc(r1)
    4268:	84 61 00 00 	l.lwz r3,0x0(r1)
    426c:	b8 e8 00 42 	l.srli r7,r8,0x2
    4270:	b9 08 00 1e 	l.slli r8,r8,0x1e
    4274:	84 81 00 04 	l.lwz r4,0x4(r1)
    4278:	04 00 06 36 	l.jal 5b50 <__make_dp>
    427c:	84 a1 00 08 	l.lwz r5,0x8(r1)
    4280:	9c 21 00 1c 	l.addi r1,r1,0x1c
    4284:	a8 4b 00 00 	l.ori r2,r11,0x0
    4288:	a8 6c 00 00 	l.ori r3,r12,0x0
    428c:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    4290:	e1 62 00 04 	l.or r11,r2,r0
    4294:	e1 83 00 04 	l.or r12,r3,r0
    4298:	44 00 48 00 	l.jr r9
    429c:	84 41 ff f8 	l.lwz r2,0xfffffff8(r1)

000042a0 <_fpadd_parts>:
    42a0:	d7 e1 17 f8 	l.sw 0xfffffff8(r1),r2
    42a4:	d7 e1 77 fc 	l.sw 0xfffffffc(r1),r14
    42a8:	84 43 00 00 	l.lwz r2,0x0(r3)
    42ac:	9c 21 ff f8 	l.addi r1,r1,0xfffffff8
    42b0:	bc a2 00 01 	l.sfleui r2,0x1
    42b4:	10 00 00 8c 	l.bf 44e4 <_fpadd_parts+0x244>
    42b8:	a9 63 00 00 	l.ori r11,r3,0x0
    42bc:	84 64 00 00 	l.lwz r3,0x0(r4)
    42c0:	bc a3 00 01 	l.sfleui r3,0x1
    42c4:	10 00 00 cf 	l.bf 4600 <_fpadd_parts+0x360>
    42c8:	bc 22 00 04 	l.sfnei r2,0x4
    42cc:	0c 00 01 09 	l.bnf 46f0 <_fpadd_parts+0x450>
    42d0:	bc 03 00 04 	l.sfeqi r3,0x4
    42d4:	10 00 00 cb 	l.bf 4600 <_fpadd_parts+0x360>
    42d8:	bc 23 00 02 	l.sfnei r3,0x2
    42dc:	0c 00 00 9a 	l.bnf 4544 <_fpadd_parts+0x2a4>
    42e0:	bc 02 00 02 	l.sfeqi r2,0x2
    42e4:	10 00 00 c7 	l.bf 4600 <_fpadd_parts+0x360>
    42e8:	15 00 00 00 	l.nop 0x0
    42ec:	85 8b 00 08 	l.lwz r12,0x8(r11)
    42f0:	85 e4 00 08 	l.lwz r15,0x8(r4)
    42f4:	84 cb 00 0c 	l.lwz r6,0xc(r11)
    42f8:	84 eb 00 10 	l.lwz r7,0x10(r11)
    42fc:	e1 ac 78 02 	l.sub r13,r12,r15
    4300:	84 44 00 0c 	l.lwz r2,0xc(r4)
    4304:	84 64 00 10 	l.lwz r3,0x10(r4)
    4308:	ba 2d 00 9f 	l.srai r17,r13,0x1f
    430c:	e1 11 68 05 	l.xor r8,r17,r13
    4310:	e1 08 88 02 	l.sub r8,r8,r17
    4314:	bd 48 00 3f 	l.sfgtsi r8,0x3f
    4318:	10 00 00 77 	l.bf 44f4 <_fpadd_parts+0x254>
    431c:	e5 ac 78 00 	l.sfles r12,r15
    4320:	bd ad 00 00 	l.sflesi r13,0x0
    4324:	10 00 00 bc 	l.bf 4614 <_fpadd_parts+0x374>
    4328:	bc 0d 00 00 	l.sfeqi r13,0x0
    432c:	9d a8 ff e0 	l.addi r13,r8,0xffffffe0
    4330:	bd 8d 00 00 	l.sfltsi r13,0x0
    4334:	10 00 00 d4 	l.bf 4684 <_fpadd_parts+0x3e4>
    4338:	a9 c2 00 00 	l.ori r14,r2,0x0
    433c:	9e a0 00 00 	l.addi r21,r0,0x0
    4340:	e1 ee 68 48 	l.srl r15,r14,r13
    4344:	bd 8d 00 00 	l.sfltsi r13,0x0
    4348:	10 00 00 dc 	l.bf 46b8 <_fpadd_parts+0x418>
    434c:	9e 20 00 01 	l.addi r17,r0,0x1
    4350:	9d 00 00 00 	l.addi r8,r0,0x0
    4354:	e1 b1 68 08 	l.sll r13,r17,r13
    4358:	9e 28 ff ff 	l.addi r17,r8,0xffffffff
    435c:	e4 91 40 00 	l.sfltu r17,r8
    4360:	10 00 00 03 	l.bf 436c <_fpadd_parts+0xcc>
    4364:	9e 60 00 01 	l.addi r19,r0,0x1
    4368:	9e 60 00 00 	l.addi r19,r0,0x0
    436c:	9d 0d ff ff 	l.addi r8,r13,0xffffffff
    4370:	e2 31 18 03 	l.and r17,r17,r3
    4374:	e1 13 40 00 	l.add r8,r19,r8
    4378:	e1 08 10 03 	l.and r8,r8,r2
    437c:	a8 55 00 00 	l.ori r2,r21,0x0
    4380:	e1 08 88 04 	l.or r8,r8,r17
    4384:	e1 a0 40 02 	l.sub r13,r0,r8
    4388:	e1 0d 40 04 	l.or r8,r13,r8
    438c:	b9 08 00 5f 	l.srli r8,r8,0x1f
    4390:	e1 e8 78 04 	l.or r15,r8,r15
    4394:	a8 6f 00 00 	l.ori r3,r15,0x0
    4398:	85 0b 00 04 	l.lwz r8,0x4(r11)
    439c:	84 84 00 04 	l.lwz r4,0x4(r4)
    43a0:	e4 08 20 00 	l.sfeq r8,r4
    43a4:	10 00 00 5d 	l.bf 4518 <_fpadd_parts+0x278>
    43a8:	e0 83 38 00 	l.add r4,r3,r7
    43ac:	bc 08 00 00 	l.sfeqi r8,0x0
    43b0:	10 00 00 7f 	l.bf 45ac <_fpadd_parts+0x30c>
    43b4:	e0 87 18 02 	l.sub r4,r7,r3
    43b8:	e0 83 38 02 	l.sub r4,r3,r7
    43bc:	e4 44 18 00 	l.sfgtu r4,r3
    43c0:	10 00 00 03 	l.bf 43cc <_fpadd_parts+0x12c>
    43c4:	9d 00 00 01 	l.addi r8,r0,0x1
    43c8:	9d 00 00 00 	l.addi r8,r0,0x0
    43cc:	e0 62 30 02 	l.sub r3,r2,r6
    43d0:	e0 63 40 02 	l.sub r3,r3,r8
    43d4:	bd 83 00 00 	l.sfltsi r3,0x0
    43d8:	10 00 00 7f 	l.bf 45d4 <_fpadd_parts+0x334>
    43dc:	9c 40 00 01 	l.addi r2,r0,0x1
    43e0:	9d 60 00 00 	l.addi r11,r0,0x0
    43e4:	d4 05 60 08 	l.sw 0x8(r5),r12
    43e8:	d4 05 58 04 	l.sw 0x4(r5),r11
    43ec:	d4 05 18 0c 	l.sw 0xc(r5),r3
    43f0:	d4 05 20 10 	l.sw 0x10(r5),r4
    43f4:	9c c4 ff ff 	l.addi r6,r4,0xffffffff
    43f8:	e4 86 20 00 	l.sfltu r6,r4
    43fc:	10 00 00 03 	l.bf 4408 <_fpadd_parts+0x168>
    4400:	9c 40 00 01 	l.addi r2,r0,0x1
    4404:	9c 40 00 00 	l.addi r2,r0,0x0
    4408:	9c e3 ff ff 	l.addi r7,r3,0xffffffff
    440c:	19 a0 0f ff 	l.movhi r13,0xfff
    4410:	e0 42 38 00 	l.add r2,r2,r7
    4414:	a9 ad ff ff 	l.ori r13,r13,0xffff
    4418:	e4 42 68 00 	l.sfgtu r2,r13
    441c:	10 00 00 20 	l.bf 449c <_fpadd_parts+0x1fc>
    4420:	e4 22 68 00 	l.sfne r2,r13
    4424:	0c 00 00 a1 	l.bnf 46a8 <_fpadd_parts+0x408>
    4428:	bc 46 ff fe 	l.sfgtui r6,0xfffffffe
    442c:	00 00 00 04 	l.j 443c <_fpadd_parts+0x19c>
    4430:	84 45 00 08 	l.lwz r2,0x8(r5)
    4434:	0c 00 00 5a 	l.bnf 459c <_fpadd_parts+0x2fc>
    4438:	bc 4b ff fe 	l.sfgtui r11,0xfffffffe
    443c:	e0 c4 20 00 	l.add r6,r4,r4
    4440:	e0 63 18 00 	l.add r3,r3,r3
    4444:	9d 66 ff ff 	l.addi r11,r6,0xffffffff
    4448:	e4 86 20 00 	l.sfltu r6,r4
    444c:	10 00 00 03 	l.bf 4458 <_fpadd_parts+0x1b8>
    4450:	9d 00 00 01 	l.addi r8,r0,0x1
    4454:	9d 00 00 00 	l.addi r8,r0,0x0
    4458:	e0 68 18 00 	l.add r3,r8,r3
    445c:	9c e0 00 01 	l.addi r7,r0,0x1
    4460:	e4 8b 30 00 	l.sfltu r11,r6
    4464:	9d 03 ff ff 	l.addi r8,r3,0xffffffff
    4468:	a8 86 00 00 	l.ori r4,r6,0x0
    446c:	10 00 00 03 	l.bf 4478 <_fpadd_parts+0x1d8>
    4470:	9c 42 ff ff 	l.addi r2,r2,0xffffffff
    4474:	9c e0 00 00 	l.addi r7,r0,0x0
    4478:	e0 e7 40 00 	l.add r7,r7,r8
    447c:	19 00 0f ff 	l.movhi r8,0xfff
    4480:	a9 08 ff ff 	l.ori r8,r8,0xffff
    4484:	e4 47 40 00 	l.sfgtu r7,r8
    4488:	0f ff ff eb 	l.bnf 4434 <_fpadd_parts+0x194>
    448c:	e4 27 40 00 	l.sfne r7,r8
    4490:	d4 05 18 0c 	l.sw 0xc(r5),r3
    4494:	d4 05 30 10 	l.sw 0x10(r5),r6
    4498:	d4 05 10 08 	l.sw 0x8(r5),r2
    449c:	19 a0 1f ff 	l.movhi r13,0x1fff
    44a0:	9c 40 00 03 	l.addi r2,r0,0x3
    44a4:	a9 ad ff ff 	l.ori r13,r13,0xffff
    44a8:	e4 43 68 00 	l.sfgtu r3,r13
    44ac:	0c 00 00 0d 	l.bnf 44e0 <_fpadd_parts+0x240>
    44b0:	d4 05 10 00 	l.sw 0x0(r5),r2
    44b4:	b8 e3 00 1f 	l.slli r7,r3,0x1f
    44b8:	b8 44 00 41 	l.srli r2,r4,0x1
    44bc:	84 c5 00 08 	l.lwz r6,0x8(r5)
    44c0:	a4 84 00 01 	l.andi r4,r4,0x1
    44c4:	e0 47 10 04 	l.or r2,r7,r2
    44c8:	b8 63 00 41 	l.srli r3,r3,0x1
    44cc:	e0 44 10 04 	l.or r2,r4,r2
    44d0:	9c c6 00 01 	l.addi r6,r6,0x1
    44d4:	d4 05 18 0c 	l.sw 0xc(r5),r3
    44d8:	d4 05 10 10 	l.sw 0x10(r5),r2
    44dc:	d4 05 30 08 	l.sw 0x8(r5),r6
    44e0:	a9 65 00 00 	l.ori r11,r5,0x0
    44e4:	9c 21 00 08 	l.addi r1,r1,0x8
    44e8:	84 41 ff f8 	l.lwz r2,0xfffffff8(r1)
    44ec:	44 00 48 00 	l.jr r9
    44f0:	85 c1 ff fc 	l.lwz r14,0xfffffffc(r1)
    44f4:	10 00 00 26 	l.bf 458c <_fpadd_parts+0x2ec>
    44f8:	15 00 00 00 	l.nop 0x0
    44fc:	85 0b 00 04 	l.lwz r8,0x4(r11)
    4500:	84 84 00 04 	l.lwz r4,0x4(r4)
    4504:	9c 40 00 00 	l.addi r2,r0,0x0
    4508:	e4 08 20 00 	l.sfeq r8,r4
    450c:	0f ff ff a8 	l.bnf 43ac <_fpadd_parts+0x10c>
    4510:	9c 60 00 00 	l.addi r3,r0,0x0
    4514:	e0 83 38 00 	l.add r4,r3,r7
    4518:	d4 05 40 04 	l.sw 0x4(r5),r8
    451c:	d4 05 60 08 	l.sw 0x8(r5),r12
    4520:	e4 84 18 00 	l.sfltu r4,r3
    4524:	10 00 00 03 	l.bf 4530 <_fpadd_parts+0x290>
    4528:	9d 00 00 01 	l.addi r8,r0,0x1
    452c:	9d 00 00 00 	l.addi r8,r0,0x0
    4530:	e0 42 30 00 	l.add r2,r2,r6
    4534:	d4 05 20 10 	l.sw 0x10(r5),r4
    4538:	e0 68 10 00 	l.add r3,r8,r2
    453c:	03 ff ff d8 	l.j 449c <_fpadd_parts+0x1fc>
    4540:	d4 05 18 0c 	l.sw 0xc(r5),r3
    4544:	bc 22 00 02 	l.sfnei r2,0x2
    4548:	13 ff ff e7 	l.bf 44e4 <_fpadd_parts+0x244>
    454c:	15 00 00 00 	l.nop 0x0
    4550:	d4 05 10 00 	l.sw 0x0(r5),r2
    4554:	84 4b 00 04 	l.lwz r2,0x4(r11)
    4558:	d4 05 10 04 	l.sw 0x4(r5),r2
    455c:	84 4b 00 08 	l.lwz r2,0x8(r11)
    4560:	d4 05 10 08 	l.sw 0x8(r5),r2
    4564:	84 4b 00 0c 	l.lwz r2,0xc(r11)
    4568:	d4 05 10 0c 	l.sw 0xc(r5),r2
    456c:	84 4b 00 10 	l.lwz r2,0x10(r11)
    4570:	d4 05 10 10 	l.sw 0x10(r5),r2
    4574:	84 4b 00 04 	l.lwz r2,0x4(r11)
    4578:	84 64 00 04 	l.lwz r3,0x4(r4)
    457c:	a9 65 00 00 	l.ori r11,r5,0x0
    4580:	e0 43 10 03 	l.and r2,r3,r2
    4584:	03 ff ff d8 	l.j 44e4 <_fpadd_parts+0x244>
    4588:	d4 05 10 04 	l.sw 0x4(r5),r2
    458c:	a9 8f 00 00 	l.ori r12,r15,0x0
    4590:	9c c0 00 00 	l.addi r6,r0,0x0
    4594:	03 ff ff 81 	l.j 4398 <_fpadd_parts+0xf8>
    4598:	9c e0 00 00 	l.addi r7,r0,0x0
    459c:	0f ff ff a8 	l.bnf 443c <_fpadd_parts+0x19c>
    45a0:	15 00 00 00 	l.nop 0x0
    45a4:	03 ff ff bc 	l.j 4494 <_fpadd_parts+0x1f4>
    45a8:	d4 05 18 0c 	l.sw 0xc(r5),r3
    45ac:	e4 44 38 00 	l.sfgtu r4,r7
    45b0:	10 00 00 03 	l.bf 45bc <_fpadd_parts+0x31c>
    45b4:	9d 60 00 01 	l.addi r11,r0,0x1
    45b8:	a9 68 00 00 	l.ori r11,r8,0x0
    45bc:	e0 66 10 02 	l.sub r3,r6,r2
    45c0:	e0 63 58 02 	l.sub r3,r3,r11
    45c4:	bd 83 00 00 	l.sfltsi r3,0x0
    45c8:	0f ff ff 87 	l.bnf 43e4 <_fpadd_parts+0x144>
    45cc:	9d 60 00 00 	l.addi r11,r0,0x0
    45d0:	9c 40 00 01 	l.addi r2,r0,0x1
    45d4:	e0 80 20 02 	l.sub r4,r0,r4
    45d8:	d4 05 10 04 	l.sw 0x4(r5),r2
    45dc:	bc 44 00 00 	l.sfgtui r4,0x0
    45e0:	10 00 00 03 	l.bf 45ec <_fpadd_parts+0x34c>
    45e4:	d4 05 60 08 	l.sw 0x8(r5),r12
    45e8:	9c 40 00 00 	l.addi r2,r0,0x0
    45ec:	e0 60 18 02 	l.sub r3,r0,r3
    45f0:	d4 05 20 10 	l.sw 0x10(r5),r4
    45f4:	e0 63 10 02 	l.sub r3,r3,r2
    45f8:	03 ff ff 7f 	l.j 43f4 <_fpadd_parts+0x154>
    45fc:	d4 05 18 0c 	l.sw 0xc(r5),r3
    4600:	9c 21 00 08 	l.addi r1,r1,0x8
    4604:	a9 64 00 00 	l.ori r11,r4,0x0
    4608:	84 41 ff f8 	l.lwz r2,0xfffffff8(r1)
    460c:	44 00 48 00 	l.jr r9
    4610:	85 c1 ff fc 	l.lwz r14,0xfffffffc(r1)
    4614:	13 ff ff 61 	l.bf 4398 <_fpadd_parts+0xf8>
    4618:	9d a8 ff e0 	l.addi r13,r8,0xffffffe0
    461c:	bd 8d 00 00 	l.sfltsi r13,0x0
    4620:	10 00 00 2c 	l.bf 46d0 <_fpadd_parts+0x430>
    4624:	e1 8c 40 00 	l.add r12,r12,r8
    4628:	e1 e6 68 48 	l.srl r15,r6,r13
    462c:	9e a0 00 00 	l.addi r21,r0,0x0
    4630:	bd 8d 00 00 	l.sfltsi r13,0x0
    4634:	10 00 00 24 	l.bf 46c4 <_fpadd_parts+0x424>
    4638:	9e 20 00 01 	l.addi r17,r0,0x1
    463c:	9d 00 00 00 	l.addi r8,r0,0x0
    4640:	e1 b1 68 08 	l.sll r13,r17,r13
    4644:	9e 28 ff ff 	l.addi r17,r8,0xffffffff
    4648:	e4 91 40 00 	l.sfltu r17,r8
    464c:	10 00 00 03 	l.bf 4658 <_fpadd_parts+0x3b8>
    4650:	9e 60 00 01 	l.addi r19,r0,0x1
    4654:	9e 60 00 00 	l.addi r19,r0,0x0
    4658:	9d 0d ff ff 	l.addi r8,r13,0xffffffff
    465c:	e2 31 38 03 	l.and r17,r17,r7
    4660:	e1 13 40 00 	l.add r8,r19,r8
    4664:	e1 08 30 03 	l.and r8,r8,r6
    4668:	a8 d5 00 00 	l.ori r6,r21,0x0
    466c:	e1 08 88 04 	l.or r8,r8,r17
    4670:	e1 a0 40 02 	l.sub r13,r0,r8
    4674:	e1 0d 40 04 	l.or r8,r13,r8
    4678:	b9 08 00 5f 	l.srli r8,r8,0x1f
    467c:	03 ff ff 47 	l.j 4398 <_fpadd_parts+0xf8>
    4680:	e0 e8 78 04 	l.or r7,r8,r15
    4684:	9e 20 00 1f 	l.addi r17,r0,0x1f
    4688:	ba 6e 00 01 	l.slli r19,r14,0x1
    468c:	e2 31 40 02 	l.sub r17,r17,r8
    4690:	e1 e3 40 48 	l.srl r15,r3,r8
    4694:	e2 33 88 08 	l.sll r17,r19,r17
    4698:	a9 c2 00 00 	l.ori r14,r2,0x0
    469c:	e1 f1 78 04 	l.or r15,r17,r15
    46a0:	03 ff ff 29 	l.j 4344 <_fpadd_parts+0xa4>
    46a4:	e2 ae 40 48 	l.srl r21,r14,r8
    46a8:	0f ff ff 61 	l.bnf 442c <_fpadd_parts+0x18c>
    46ac:	15 00 00 00 	l.nop 0x0
    46b0:	03 ff ff 7c 	l.j 44a0 <_fpadd_parts+0x200>
    46b4:	19 a0 1f ff 	l.movhi r13,0x1fff
    46b8:	9d a0 00 00 	l.addi r13,r0,0x0
    46bc:	03 ff ff 27 	l.j 4358 <_fpadd_parts+0xb8>
    46c0:	e1 11 40 08 	l.sll r8,r17,r8
    46c4:	9d a0 00 00 	l.addi r13,r0,0x0
    46c8:	03 ff ff df 	l.j 4644 <_fpadd_parts+0x3a4>
    46cc:	e1 11 40 08 	l.sll r8,r17,r8
    46d0:	9e 20 00 1f 	l.addi r17,r0,0x1f
    46d4:	ba 66 00 01 	l.slli r19,r6,0x1
    46d8:	e2 31 40 02 	l.sub r17,r17,r8
    46dc:	e1 e7 40 48 	l.srl r15,r7,r8
    46e0:	e2 33 88 08 	l.sll r17,r19,r17
    46e4:	e2 a6 40 48 	l.srl r21,r6,r8
    46e8:	03 ff ff d2 	l.j 4630 <_fpadd_parts+0x390>
    46ec:	e1 f1 78 04 	l.or r15,r17,r15
    46f0:	bc 23 00 04 	l.sfnei r3,0x4
    46f4:	13 ff ff 7c 	l.bf 44e4 <_fpadd_parts+0x244>
    46f8:	15 00 00 00 	l.nop 0x0
    46fc:	84 6b 00 04 	l.lwz r3,0x4(r11)
    4700:	84 44 00 04 	l.lwz r2,0x4(r4)
    4704:	e4 23 10 00 	l.sfne r3,r2
    4708:	0f ff ff 77 	l.bnf 44e4 <_fpadd_parts+0x244>
    470c:	15 00 00 00 	l.nop 0x0
    4710:	19 60 00 00 	l.movhi r11,0x0
    4714:	03 ff ff 74 	l.j 44e4 <_fpadd_parts+0x244>
    4718:	a9 6b 60 48 	l.ori r11,r11,0x6048

0000471c <__pack_d>:
    471c:	d7 e1 87 ec 	l.sw 0xffffffec(r1),r16
    4720:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
    4724:	d7 e1 17 e4 	l.sw 0xffffffe4(r1),r2
    4728:	d7 e1 77 e8 	l.sw 0xffffffe8(r1),r14
    472c:	d7 e1 97 f0 	l.sw 0xfffffff0(r1),r18
    4730:	d7 e1 a7 f4 	l.sw 0xfffffff4(r1),r20
    4734:	d7 e1 b7 f8 	l.sw 0xfffffff8(r1),r22
    4738:	84 83 00 00 	l.lwz r4,0x0(r3)
    473c:	9c 21 ff dc 	l.addi r1,r1,0xffffffdc
    4740:	84 43 00 0c 	l.lwz r2,0xc(r3)
    4744:	85 c3 00 10 	l.lwz r14,0x10(r3)
    4748:	bc 44 00 01 	l.sfgtui r4,0x1
    474c:	0c 00 00 51 	l.bnf 4890 <__pack_d+0x174>
    4750:	86 03 00 04 	l.lwz r16,0x4(r3)
    4754:	bc 04 00 04 	l.sfeqi r4,0x4
    4758:	10 00 00 49 	l.bf 487c <__pack_d+0x160>
    475c:	bc 04 00 02 	l.sfeqi r4,0x2
    4760:	10 00 00 2a 	l.bf 4808 <__pack_d+0xec>
    4764:	e0 82 70 04 	l.or r4,r2,r14
    4768:	bc 04 00 00 	l.sfeqi r4,0x0
    476c:	10 00 00 27 	l.bf 4808 <__pack_d+0xec>
    4770:	15 00 00 00 	l.nop 0x0
    4774:	84 63 00 08 	l.lwz r3,0x8(r3)
    4778:	bd 63 fc 02 	l.sfgesi r3,0xfffffc02
    477c:	0c 00 00 4e 	l.bnf 48b4 <__pack_d+0x198>
    4780:	bd 43 03 ff 	l.sfgtsi r3,0x3ff
    4784:	10 00 00 3e 	l.bf 487c <__pack_d+0x160>
    4788:	a4 8e 00 ff 	l.andi r4,r14,0xff
    478c:	bc 24 00 80 	l.sfnei r4,0x80
    4790:	0c 00 00 31 	l.bnf 4854 <__pack_d+0x138>
    4794:	9c 63 03 ff 	l.addi r3,r3,0x3ff
    4798:	9c 8e 00 7f 	l.addi r4,r14,0x7f
    479c:	e4 84 70 00 	l.sfltu r4,r14
    47a0:	0c 00 00 35 	l.bnf 4874 <__pack_d+0x158>
    47a4:	9c a0 00 01 	l.addi r5,r0,0x1
    47a8:	e0 45 10 00 	l.add r2,r5,r2
    47ac:	a9 c4 00 00 	l.ori r14,r4,0x0
    47b0:	18 a0 1f ff 	l.movhi r5,0x1fff
    47b4:	a8 a5 ff ff 	l.ori r5,r5,0xffff
    47b8:	e4 42 28 00 	l.sfgtu r2,r5
    47bc:	0c 00 00 06 	l.bnf 47d4 <__pack_d+0xb8>
    47c0:	b8 82 00 1f 	l.slli r4,r2,0x1f
    47c4:	b9 ce 00 41 	l.srli r14,r14,0x1
    47c8:	b8 42 00 41 	l.srli r2,r2,0x1
    47cc:	9c 63 00 01 	l.addi r3,r3,0x1
    47d0:	e1 c4 70 04 	l.or r14,r4,r14
    47d4:	a4 a3 07 ff 	l.andi r5,r3,0x7ff
    47d8:	19 00 00 0f 	l.movhi r8,0xf
    47dc:	b8 e2 00 48 	l.srli r7,r2,0x8
    47e0:	b8 a5 00 14 	l.slli r5,r5,0x14
    47e4:	a9 08 ff ff 	l.ori r8,r8,0xffff
    47e8:	b8 82 00 18 	l.slli r4,r2,0x18
    47ec:	b9 ce 00 48 	l.srli r14,r14,0x8
    47f0:	a8 45 00 00 	l.ori r2,r5,0x0
    47f4:	e0 a7 40 03 	l.and r5,r7,r8
    47f8:	9c e0 00 00 	l.addi r7,r0,0x0
    47fc:	e0 c4 70 04 	l.or r6,r4,r14
    4800:	00 00 00 06 	l.j 4818 <__pack_d+0xfc>
    4804:	a8 67 00 00 	l.ori r3,r7,0x0
    4808:	9c 40 00 00 	l.addi r2,r0,0x0
    480c:	9c 60 00 00 	l.addi r3,r0,0x0
    4810:	e0 a2 00 04 	l.or r5,r2,r0
    4814:	e0 c3 00 04 	l.or r6,r3,r0
    4818:	b8 90 00 1f 	l.slli r4,r16,0x1f
    481c:	9c 21 00 24 	l.addi r1,r1,0x24
    4820:	e0 e5 10 04 	l.or r7,r5,r2
    4824:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    4828:	e0 46 18 04 	l.or r2,r6,r3
    482c:	e0 67 20 04 	l.or r3,r7,r4
    4830:	a9 82 00 00 	l.ori r12,r2,0x0
    4834:	a9 63 00 00 	l.ori r11,r3,0x0
    4838:	84 41 ff e4 	l.lwz r2,0xffffffe4(r1)
    483c:	85 c1 ff e8 	l.lwz r14,0xffffffe8(r1)
    4840:	86 01 ff ec 	l.lwz r16,0xffffffec(r1)
    4844:	86 41 ff f0 	l.lwz r18,0xfffffff0(r1)
    4848:	86 81 ff f4 	l.lwz r20,0xfffffff4(r1)
    484c:	44 00 48 00 	l.jr r9
    4850:	86 c1 ff f8 	l.lwz r22,0xfffffff8(r1)
    4854:	a4 8e 01 00 	l.andi r4,r14,0x100
    4858:	bc 04 00 00 	l.sfeqi r4,0x0
    485c:	13 ff ff d6 	l.bf 47b4 <__pack_d+0x98>
    4860:	18 a0 1f ff 	l.movhi r5,0x1fff
    4864:	9c 8e 00 80 	l.addi r4,r14,0x80
    4868:	e4 84 70 00 	l.sfltu r4,r14
    486c:	13 ff ff cf 	l.bf 47a8 <__pack_d+0x8c>
    4870:	9c a0 00 01 	l.addi r5,r0,0x1
    4874:	03 ff ff cd 	l.j 47a8 <__pack_d+0x8c>
    4878:	9c a0 00 00 	l.addi r5,r0,0x0
    487c:	18 40 7f f0 	l.movhi r2,0x7ff0
    4880:	9c 60 00 00 	l.addi r3,r0,0x0
    4884:	9c a0 00 00 	l.addi r5,r0,0x0
    4888:	03 ff ff e4 	l.j 4818 <__pack_d+0xfc>
    488c:	9c c0 00 00 	l.addi r6,r0,0x0
    4890:	18 60 00 08 	l.movhi r3,0x8
    4894:	18 80 00 0f 	l.movhi r4,0xf
    4898:	e0 42 18 04 	l.or r2,r2,r3
    489c:	a8 84 ff ff 	l.ori r4,r4,0xffff
    48a0:	9c 60 00 00 	l.addi r3,r0,0x0
    48a4:	e0 a2 20 03 	l.and r5,r2,r4
    48a8:	a8 ce 00 00 	l.ori r6,r14,0x0
    48ac:	03 ff ff db 	l.j 4818 <__pack_d+0xfc>
    48b0:	18 40 7f f0 	l.movhi r2,0x7ff0
    48b4:	9e 40 fc 02 	l.addi r18,r0,0xfffffc02
    48b8:	9c e0 00 00 	l.addi r7,r0,0x0
    48bc:	9d 00 00 00 	l.addi r8,r0,0x0
    48c0:	e2 52 18 02 	l.sub r18,r18,r3
    48c4:	d4 01 38 00 	l.sw 0x0(r1),r7
    48c8:	d4 01 40 04 	l.sw 0x4(r1),r8
    48cc:	bd 52 00 38 	l.sfgtsi r18,0x38
    48d0:	10 00 00 46 	l.bf 49e8 <__pack_d+0x2cc>
    48d4:	85 01 00 04 	l.lwz r8,0x4(r1)
    48d8:	a8 62 00 00 	l.ori r3,r2,0x0
    48dc:	a8 8e 00 00 	l.ori r4,r14,0x0
    48e0:	04 00 05 2d 	l.jal 5d94 <__lshrdi3>
    48e4:	a8 b2 00 00 	l.ori r5,r18,0x0
    48e8:	a8 b2 00 00 	l.ori r5,r18,0x0
    48ec:	9c 60 00 00 	l.addi r3,r0,0x0
    48f0:	9c 80 00 01 	l.addi r4,r0,0x1
    48f4:	aa cb 00 00 	l.ori r22,r11,0x0
    48f8:	04 00 05 3b 	l.jal 5de4 <__ashldi3>
    48fc:	aa 8c 00 00 	l.ori r20,r12,0x0
    4900:	9c 80 00 01 	l.addi r4,r0,0x1
    4904:	a8 6b 00 00 	l.ori r3,r11,0x0
    4908:	bc 2c 00 00 	l.sfnei r12,0x0
    490c:	10 00 00 03 	l.bf 4918 <__pack_d+0x1fc>
    4910:	9c ac ff ff 	l.addi r5,r12,0xffffffff
    4914:	9c 80 00 00 	l.addi r4,r0,0x0
    4918:	9c 63 ff ff 	l.addi r3,r3,0xffffffff
    491c:	e1 c5 70 03 	l.and r14,r5,r14
    4920:	e0 84 18 00 	l.add r4,r4,r3
    4924:	d4 01 b0 00 	l.sw 0x0(r1),r22
    4928:	e0 44 10 03 	l.and r2,r4,r2
    492c:	e0 42 70 04 	l.or r2,r2,r14
    4930:	e0 60 10 02 	l.sub r3,r0,r2
    4934:	e0 43 10 04 	l.or r2,r3,r2
    4938:	b8 42 00 5f 	l.srli r2,r2,0x1f
    493c:	e2 82 a0 04 	l.or r20,r2,r20
    4940:	a4 54 00 ff 	l.andi r2,r20,0xff
    4944:	bc 22 00 80 	l.sfnei r2,0x80
    4948:	10 00 00 27 	l.bf 49e4 <__pack_d+0x2c8>
    494c:	d4 01 a0 04 	l.sw 0x4(r1),r20
    4950:	a4 54 01 00 	l.andi r2,r20,0x100
    4954:	bc 02 00 00 	l.sfeqi r2,0x0
    4958:	10 00 00 0e 	l.bf 4990 <__pack_d+0x274>
    495c:	85 01 00 00 	l.lwz r8,0x0(r1)
    4960:	9c 54 00 80 	l.addi r2,r20,0x80
    4964:	e4 82 a0 00 	l.sfltu r2,r20
    4968:	0c 00 00 24 	l.bnf 49f8 <__pack_d+0x2dc>
    496c:	9c 60 00 01 	l.addi r3,r0,0x1
    4970:	84 e1 00 00 	l.lwz r7,0x0(r1)
    4974:	a8 82 00 00 	l.ori r4,r2,0x0
    4978:	e0 a3 38 00 	l.add r5,r3,r7
    497c:	a8 64 00 00 	l.ori r3,r4,0x0
    4980:	a8 45 00 00 	l.ori r2,r5,0x0
    4984:	d4 01 10 00 	l.sw 0x0(r1),r2
    4988:	d4 01 18 04 	l.sw 0x4(r1),r3
    498c:	85 01 00 00 	l.lwz r8,0x0(r1)
    4990:	84 a1 00 04 	l.lwz r5,0x4(r1)
    4994:	b8 e8 00 18 	l.slli r7,r8,0x18
    4998:	b8 85 00 48 	l.srli r4,r5,0x8
    499c:	b8 48 00 48 	l.srli r2,r8,0x8
    49a0:	19 00 00 0f 	l.movhi r8,0xf
    49a4:	e0 c7 20 04 	l.or r6,r7,r4
    49a8:	18 e0 0f ff 	l.movhi r7,0xfff
    49ac:	a9 08 ff ff 	l.ori r8,r8,0xffff
    49b0:	84 81 00 00 	l.lwz r4,0x0(r1)
    49b4:	a8 e7 ff ff 	l.ori r7,r7,0xffff
    49b8:	e0 a2 40 03 	l.and r5,r2,r8
    49bc:	e4 44 38 00 	l.sfgtu r4,r7
    49c0:	10 00 00 03 	l.bf 49cc <__pack_d+0x2b0>
    49c4:	9c 60 00 01 	l.addi r3,r0,0x1
    49c8:	9c 60 00 00 	l.addi r3,r0,0x0
    49cc:	a4 83 07 ff 	l.andi r4,r3,0x7ff
    49d0:	b8 84 00 14 	l.slli r4,r4,0x14
    49d4:	a8 44 00 00 	l.ori r2,r4,0x0
    49d8:	9c 80 00 00 	l.addi r4,r0,0x0
    49dc:	03 ff ff 8f 	l.j 4818 <__pack_d+0xfc>
    49e0:	a8 64 00 00 	l.ori r3,r4,0x0
    49e4:	85 01 00 04 	l.lwz r8,0x4(r1)
    49e8:	9c 48 00 7f 	l.addi r2,r8,0x7f
    49ec:	e4 82 40 00 	l.sfltu r2,r8
    49f0:	13 ff ff e0 	l.bf 4970 <__pack_d+0x254>
    49f4:	9c 60 00 01 	l.addi r3,r0,0x1
    49f8:	03 ff ff de 	l.j 4970 <__pack_d+0x254>
    49fc:	9c 60 00 00 	l.addi r3,r0,0x0

00004a00 <__unpack_d>:
    4a00:	d7 e1 17 fc 	l.sw 0xfffffffc(r1),r2
    4a04:	18 40 00 0f 	l.movhi r2,0xf
    4a08:	84 c3 00 00 	l.lwz r6,0x0(r3)
    4a0c:	84 a3 00 04 	l.lwz r5,0x4(r3)
    4a10:	b8 e6 00 54 	l.srli r7,r6,0x14
    4a14:	b9 06 00 5f 	l.srli r8,r6,0x1f
    4a18:	a8 42 ff ff 	l.ori r2,r2,0xffff
    4a1c:	a4 e7 07 ff 	l.andi r7,r7,0x7ff
    4a20:	d4 04 40 04 	l.sw 0x4(r4),r8
    4a24:	9c 21 ff fc 	l.addi r1,r1,0xfffffffc
    4a28:	bc 27 00 00 	l.sfnei r7,0x0
    4a2c:	10 00 00 22 	l.bf 4ab4 <__unpack_d+0xb4>
    4a30:	e0 66 10 03 	l.and r3,r6,r2
    4a34:	e0 c3 28 04 	l.or r6,r3,r5
    4a38:	bc 26 00 00 	l.sfnei r6,0x0
    4a3c:	0c 00 00 2f 	l.bnf 4af8 <__unpack_d+0xf8>
    4a40:	b8 c5 00 58 	l.srli r6,r5,0x18
    4a44:	b8 63 00 08 	l.slli r3,r3,0x8
    4a48:	9c e0 fc 02 	l.addi r7,r0,0xfffffc02
    4a4c:	b8 a5 00 08 	l.slli r5,r5,0x8
    4a50:	e0 66 18 04 	l.or r3,r6,r3
    4a54:	9c c0 00 03 	l.addi r6,r0,0x3
    4a58:	d4 04 38 08 	l.sw 0x8(r4),r7
    4a5c:	d4 04 30 00 	l.sw 0x0(r4),r6
    4a60:	9c c0 fc 01 	l.addi r6,r0,0xfffffc01
    4a64:	e0 e5 28 00 	l.add r7,r5,r5
    4a68:	e0 63 18 00 	l.add r3,r3,r3
    4a6c:	e4 87 28 00 	l.sfltu r7,r5
    4a70:	10 00 00 03 	l.bf 4a7c <__unpack_d+0x7c>
    4a74:	9d 00 00 01 	l.addi r8,r0,0x1
    4a78:	9d 00 00 00 	l.addi r8,r0,0x0
    4a7c:	18 40 0f ff 	l.movhi r2,0xfff
    4a80:	e0 68 18 00 	l.add r3,r8,r3
    4a84:	a8 42 ff ff 	l.ori r2,r2,0xffff
    4a88:	a9 66 00 00 	l.ori r11,r6,0x0
    4a8c:	a8 a7 00 00 	l.ori r5,r7,0x0
    4a90:	e4 43 10 00 	l.sfgtu r3,r2
    4a94:	0f ff ff f4 	l.bnf 4a64 <__unpack_d+0x64>
    4a98:	9c c6 ff ff 	l.addi r6,r6,0xffffffff
    4a9c:	9c 21 00 04 	l.addi r1,r1,0x4
    4aa0:	d4 04 58 08 	l.sw 0x8(r4),r11
    4aa4:	d4 04 18 0c 	l.sw 0xc(r4),r3
    4aa8:	d4 04 38 10 	l.sw 0x10(r4),r7
    4aac:	44 00 48 00 	l.jr r9
    4ab0:	84 41 ff fc 	l.lwz r2,0xfffffffc(r1)
    4ab4:	bc 27 07 ff 	l.sfnei r7,0x7ff
    4ab8:	0c 00 00 15 	l.bnf 4b0c <__unpack_d+0x10c>
    4abc:	9c e7 fc 01 	l.addi r7,r7,0xfffffc01
    4ac0:	b8 c5 00 58 	l.srli r6,r5,0x18
    4ac4:	b8 63 00 08 	l.slli r3,r3,0x8
    4ac8:	18 40 10 00 	l.movhi r2,0x1000
    4acc:	e0 66 18 04 	l.or r3,r6,r3
    4ad0:	b8 a5 00 08 	l.slli r5,r5,0x8
    4ad4:	e0 63 10 04 	l.or r3,r3,r2
    4ad8:	d4 04 38 08 	l.sw 0x8(r4),r7
    4adc:	9c c0 00 03 	l.addi r6,r0,0x3
    4ae0:	d4 04 30 00 	l.sw 0x0(r4),r6
    4ae4:	d4 04 18 0c 	l.sw 0xc(r4),r3
    4ae8:	d4 04 28 10 	l.sw 0x10(r4),r5
    4aec:	9c 21 00 04 	l.addi r1,r1,0x4
    4af0:	44 00 48 00 	l.jr r9
    4af4:	84 41 ff fc 	l.lwz r2,0xfffffffc(r1)
    4af8:	9c 60 00 02 	l.addi r3,r0,0x2
    4afc:	9c 21 00 04 	l.addi r1,r1,0x4
    4b00:	d4 04 18 00 	l.sw 0x0(r4),r3
    4b04:	44 00 48 00 	l.jr r9
    4b08:	84 41 ff fc 	l.lwz r2,0xfffffffc(r1)
    4b0c:	e0 e3 28 04 	l.or r7,r3,r5
    4b10:	bc 27 00 00 	l.sfnei r7,0x0
    4b14:	0c 00 00 0a 	l.bnf 4b3c <__unpack_d+0x13c>
    4b18:	15 00 00 00 	l.nop 0x0
    4b1c:	18 40 00 08 	l.movhi r2,0x8
    4b20:	e0 c6 10 03 	l.and r6,r6,r2
    4b24:	bc 06 00 00 	l.sfeqi r6,0x0
    4b28:	13 ff ff ee 	l.bf 4ae0 <__unpack_d+0xe0>
    4b2c:	15 00 00 00 	l.nop 0x0
    4b30:	9c c0 00 01 	l.addi r6,r0,0x1
    4b34:	03 ff ff ec 	l.j 4ae4 <__unpack_d+0xe4>
    4b38:	d4 04 30 00 	l.sw 0x0(r4),r6
    4b3c:	9c 60 00 04 	l.addi r3,r0,0x4
    4b40:	03 ff ff eb 	l.j 4aec <__unpack_d+0xec>
    4b44:	d4 04 18 00 	l.sw 0x0(r4),r3

00004b48 <__adddf3>:
    4b48:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
    4b4c:	d7 e1 17 f4 	l.sw 0xfffffff4(r1),r2
    4b50:	d7 e1 77 f8 	l.sw 0xfffffff8(r1),r14
    4b54:	9c 21 ff a8 	l.addi r1,r1,0xffffffa8
    4b58:	9d c1 00 28 	l.addi r14,r1,0x28
    4b5c:	d4 01 18 44 	l.sw 0x44(r1),r3
    4b60:	d4 01 20 48 	l.sw 0x48(r1),r4
    4b64:	9c 61 00 44 	l.addi r3,r1,0x44
    4b68:	a8 8e 00 00 	l.ori r4,r14,0x0
    4b6c:	d4 01 28 3c 	l.sw 0x3c(r1),r5
    4b70:	d4 01 30 40 	l.sw 0x40(r1),r6
    4b74:	07 ff ff a3 	l.jal 4a00 <__unpack_d>
    4b78:	9c 41 00 14 	l.addi r2,r1,0x14
    4b7c:	9c 61 00 3c 	l.addi r3,r1,0x3c
    4b80:	07 ff ff a0 	l.jal 4a00 <__unpack_d>
    4b84:	a8 82 00 00 	l.ori r4,r2,0x0
    4b88:	a8 6e 00 00 	l.ori r3,r14,0x0
    4b8c:	a8 82 00 00 	l.ori r4,r2,0x0
    4b90:	07 ff fd c4 	l.jal 42a0 <_fpadd_parts>
    4b94:	a8 a1 00 00 	l.ori r5,r1,0x0
    4b98:	07 ff fe e1 	l.jal 471c <__pack_d>
    4b9c:	a8 6b 00 00 	l.ori r3,r11,0x0
    4ba0:	9c 21 00 58 	l.addi r1,r1,0x58
    4ba4:	a8 4b 00 00 	l.ori r2,r11,0x0
    4ba8:	a8 6c 00 00 	l.ori r3,r12,0x0
    4bac:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    4bb0:	e1 62 00 04 	l.or r11,r2,r0
    4bb4:	e1 83 00 04 	l.or r12,r3,r0
    4bb8:	85 c1 ff f8 	l.lwz r14,0xfffffff8(r1)
    4bbc:	44 00 48 00 	l.jr r9
    4bc0:	84 41 ff f4 	l.lwz r2,0xfffffff4(r1)

00004bc4 <__subdf3>:
    4bc4:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
    4bc8:	d7 e1 17 f4 	l.sw 0xfffffff4(r1),r2
    4bcc:	d7 e1 77 f8 	l.sw 0xfffffff8(r1),r14
    4bd0:	9c 21 ff a8 	l.addi r1,r1,0xffffffa8
    4bd4:	9c 41 00 28 	l.addi r2,r1,0x28
    4bd8:	d4 01 18 44 	l.sw 0x44(r1),r3
    4bdc:	d4 01 20 48 	l.sw 0x48(r1),r4
    4be0:	9c 61 00 44 	l.addi r3,r1,0x44
    4be4:	a8 82 00 00 	l.ori r4,r2,0x0
    4be8:	d4 01 28 3c 	l.sw 0x3c(r1),r5
    4bec:	d4 01 30 40 	l.sw 0x40(r1),r6
    4bf0:	07 ff ff 84 	l.jal 4a00 <__unpack_d>
    4bf4:	9d c1 00 14 	l.addi r14,r1,0x14
    4bf8:	9c 61 00 3c 	l.addi r3,r1,0x3c
    4bfc:	07 ff ff 81 	l.jal 4a00 <__unpack_d>
    4c00:	a8 8e 00 00 	l.ori r4,r14,0x0
    4c04:	84 c1 00 18 	l.lwz r6,0x18(r1)
    4c08:	a8 8e 00 00 	l.ori r4,r14,0x0
    4c0c:	ac c6 00 01 	l.xori r6,r6,0x1
    4c10:	a8 a1 00 00 	l.ori r5,r1,0x0
    4c14:	a8 62 00 00 	l.ori r3,r2,0x0
    4c18:	07 ff fd a2 	l.jal 42a0 <_fpadd_parts>
    4c1c:	d4 01 30 18 	l.sw 0x18(r1),r6
    4c20:	07 ff fe bf 	l.jal 471c <__pack_d>
    4c24:	a8 6b 00 00 	l.ori r3,r11,0x0
    4c28:	9c 21 00 58 	l.addi r1,r1,0x58
    4c2c:	a8 4b 00 00 	l.ori r2,r11,0x0
    4c30:	a8 6c 00 00 	l.ori r3,r12,0x0
    4c34:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    4c38:	e1 62 00 04 	l.or r11,r2,r0
    4c3c:	e1 83 00 04 	l.or r12,r3,r0
    4c40:	85 c1 ff f8 	l.lwz r14,0xfffffff8(r1)
    4c44:	44 00 48 00 	l.jr r9
    4c48:	84 41 ff f4 	l.lwz r2,0xfffffff4(r1)

00004c4c <__muldf3>:
    4c4c:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
    4c50:	d7 e1 17 dc 	l.sw 0xffffffdc(r1),r2
    4c54:	d7 e1 77 e0 	l.sw 0xffffffe0(r1),r14
    4c58:	d7 e1 87 e4 	l.sw 0xffffffe4(r1),r16
    4c5c:	d7 e1 97 e8 	l.sw 0xffffffe8(r1),r18
    4c60:	d7 e1 a7 ec 	l.sw 0xffffffec(r1),r20
    4c64:	d7 e1 b7 f0 	l.sw 0xfffffff0(r1),r22
    4c68:	d7 e1 c7 f4 	l.sw 0xfffffff4(r1),r24
    4c6c:	d7 e1 d7 f8 	l.sw 0xfffffff8(r1),r26
    4c70:	9c 21 ff 90 	l.addi r1,r1,0xffffff90
    4c74:	9d c1 00 28 	l.addi r14,r1,0x28
    4c78:	d4 01 18 44 	l.sw 0x44(r1),r3
    4c7c:	d4 01 20 48 	l.sw 0x48(r1),r4
    4c80:	9c 61 00 44 	l.addi r3,r1,0x44
    4c84:	a8 8e 00 00 	l.ori r4,r14,0x0
    4c88:	d4 01 28 3c 	l.sw 0x3c(r1),r5
    4c8c:	d4 01 30 40 	l.sw 0x40(r1),r6
    4c90:	07 ff ff 5c 	l.jal 4a00 <__unpack_d>
    4c94:	9e 01 00 14 	l.addi r16,r1,0x14
    4c98:	9c 61 00 3c 	l.addi r3,r1,0x3c
    4c9c:	07 ff ff 59 	l.jal 4a00 <__unpack_d>
    4ca0:	a8 90 00 00 	l.ori r4,r16,0x0
    4ca4:	84 41 00 28 	l.lwz r2,0x28(r1)
    4ca8:	bc 42 00 01 	l.sfgtui r2,0x1
    4cac:	0c 00 00 c7 	l.bnf 4fc8 <__muldf3+0x37c>
    4cb0:	84 a1 00 14 	l.lwz r5,0x14(r1)
    4cb4:	bc 45 00 01 	l.sfgtui r5,0x1
    4cb8:	0c 00 00 df 	l.bnf 5034 <__muldf3+0x3e8>
    4cbc:	bc 22 00 04 	l.sfnei r2,0x4
    4cc0:	0c 00 00 be 	l.bnf 4fb8 <__muldf3+0x36c>
    4cc4:	bc 25 00 04 	l.sfnei r5,0x4
    4cc8:	0c 00 00 d7 	l.bnf 5024 <__muldf3+0x3d8>
    4ccc:	bc 22 00 02 	l.sfnei r2,0x2
    4cd0:	0c 00 00 be 	l.bnf 4fc8 <__muldf3+0x37c>
    4cd4:	bc 25 00 02 	l.sfnei r5,0x2
    4cd8:	0c 00 00 d7 	l.bnf 5034 <__muldf3+0x3e8>
    4cdc:	84 41 00 38 	l.lwz r2,0x38(r1)
    4ce0:	9c 60 00 00 	l.addi r3,r0,0x0
    4ce4:	86 01 00 24 	l.lwz r16,0x24(r1)
    4ce8:	a8 a3 00 00 	l.ori r5,r3,0x0
    4cec:	a8 82 00 00 	l.ori r4,r2,0x0
    4cf0:	a8 d0 00 00 	l.ori r6,r16,0x0
    4cf4:	04 00 04 0b 	l.jal 5d20 <__muldi3>
    4cf8:	86 81 00 20 	l.lwz r20,0x20(r1)
    4cfc:	9c 60 00 00 	l.addi r3,r0,0x0
    4d00:	a8 94 00 00 	l.ori r4,r20,0x0
    4d04:	a8 a3 00 00 	l.ori r5,r3,0x0
    4d08:	a8 c2 00 00 	l.ori r6,r2,0x0
    4d0c:	a9 cb 00 00 	l.ori r14,r11,0x0
    4d10:	04 00 04 04 	l.jal 5d20 <__muldi3>
    4d14:	ab 0c 00 00 	l.ori r24,r12,0x0
    4d18:	9c 60 00 00 	l.addi r3,r0,0x0
    4d1c:	87 41 00 34 	l.lwz r26,0x34(r1)
    4d20:	a8 a3 00 00 	l.ori r5,r3,0x0
    4d24:	a8 d4 00 00 	l.ori r6,r20,0x0
    4d28:	a8 9a 00 00 	l.ori r4,r26,0x0
    4d2c:	aa 4c 00 00 	l.ori r18,r12,0x0
    4d30:	04 00 03 fc 	l.jal 5d20 <__muldi3>
    4d34:	a8 4b 00 00 	l.ori r2,r11,0x0
    4d38:	9c 60 00 00 	l.addi r3,r0,0x0
    4d3c:	a8 9a 00 00 	l.ori r4,r26,0x0
    4d40:	a8 a3 00 00 	l.ori r5,r3,0x0
    4d44:	a8 d0 00 00 	l.ori r6,r16,0x0
    4d48:	aa 8b 00 00 	l.ori r20,r11,0x0
    4d4c:	04 00 03 f5 	l.jal 5d20 <__muldi3>
    4d50:	aa cc 00 00 	l.ori r22,r12,0x0
    4d54:	e0 ac 90 00 	l.add r5,r12,r18
    4d58:	a9 0b 00 00 	l.ori r8,r11,0x0
    4d5c:	e4 85 60 00 	l.sfltu r5,r12
    4d60:	0c 00 00 6d 	l.bnf 4f14 <__muldf3+0x2c8>
    4d64:	9d a0 00 01 	l.addi r13,r0,0x1
    4d68:	e0 e8 10 00 	l.add r7,r8,r2
    4d6c:	e0 ed 38 00 	l.add r7,r13,r7
    4d70:	e4 42 38 00 	l.sfgtu r2,r7
    4d74:	0c 00 00 63 	l.bnf 4f00 <__muldf3+0x2b4>
    4d78:	e4 22 38 00 	l.sfne r2,r7
    4d7c:	9c 40 00 01 	l.addi r2,r0,0x1
    4d80:	9c 60 00 00 	l.addi r3,r0,0x0
    4d84:	e0 a5 70 00 	l.add r5,r5,r14
    4d88:	e4 4e 28 00 	l.sfgtu r14,r5
    4d8c:	0c 00 00 09 	l.bnf 4db0 <__muldf3+0x164>
    4d90:	a8 d8 00 00 	l.ori r6,r24,0x0
    4d94:	9c 83 00 01 	l.addi r4,r3,0x1
    4d98:	e4 84 18 00 	l.sfltu r4,r3
    4d9c:	0c 00 00 81 	l.bnf 4fa0 <__muldf3+0x354>
    4da0:	9d 00 00 01 	l.addi r8,r0,0x1
    4da4:	e1 08 10 00 	l.add r8,r8,r2
    4da8:	a8 64 00 00 	l.ori r3,r4,0x0
    4dac:	a8 48 00 00 	l.ori r2,r8,0x0
    4db0:	e1 87 b0 00 	l.add r12,r7,r22
    4db4:	e4 8c 38 00 	l.sfltu r12,r7
    4db8:	10 00 00 03 	l.bf 4dc4 <__muldf3+0x178>
    4dbc:	9c 80 00 01 	l.addi r4,r0,0x1
    4dc0:	9c 80 00 00 	l.addi r4,r0,0x0
    4dc4:	e1 0c 18 00 	l.add r8,r12,r3
    4dc8:	e0 84 a0 00 	l.add r4,r4,r20
    4dcc:	e4 88 60 00 	l.sfltu r8,r12
    4dd0:	10 00 00 03 	l.bf 4ddc <__muldf3+0x190>
    4dd4:	9d a0 00 01 	l.addi r13,r0,0x1
    4dd8:	9d a0 00 00 	l.addi r13,r0,0x0
    4ddc:	84 e1 00 18 	l.lwz r7,0x18(r1)
    4de0:	85 81 00 2c 	l.lwz r12,0x2c(r1)
    4de4:	85 c1 00 1c 	l.lwz r14,0x1c(r1)
    4de8:	e1 8c 38 05 	l.xor r12,r12,r7
    4dec:	84 e1 00 30 	l.lwz r7,0x30(r1)
    4df0:	e1 60 60 02 	l.sub r11,r0,r12
    4df4:	e0 ee 38 00 	l.add r7,r14,r7
    4df8:	e1 8b 60 04 	l.or r12,r11,r12
    4dfc:	e0 84 10 00 	l.add r4,r4,r2
    4e00:	b9 8c 00 5f 	l.srli r12,r12,0x1f
    4e04:	9c 67 00 04 	l.addi r3,r7,0x4
    4e08:	18 40 1f ff 	l.movhi r2,0x1fff
    4e0c:	e0 8d 20 00 	l.add r4,r13,r4
    4e10:	d4 01 18 08 	l.sw 0x8(r1),r3
    4e14:	a8 42 ff ff 	l.ori r2,r2,0xffff
    4e18:	d4 01 60 04 	l.sw 0x4(r1),r12
    4e1c:	e4 44 10 00 	l.sfgtu r4,r2
    4e20:	0c 00 00 17 	l.bnf 4e7c <__muldf3+0x230>
    4e24:	a8 68 00 00 	l.ori r3,r8,0x0
    4e28:	9c e7 00 05 	l.addi r7,r7,0x5
    4e2c:	b9 03 00 41 	l.srli r8,r3,0x1
    4e30:	a4 63 00 01 	l.andi r3,r3,0x1
    4e34:	b9 64 00 1f 	l.slli r11,r4,0x1f
    4e38:	b9 85 00 1f 	l.slli r12,r5,0x1f
    4e3c:	b8 46 00 41 	l.srli r2,r6,0x1
    4e40:	b9 a5 00 41 	l.srli r13,r5,0x1
    4e44:	b8 84 00 41 	l.srli r4,r4,0x1
    4e48:	bc 03 00 00 	l.sfeqi r3,0x0
    4e4c:	10 00 00 05 	l.bf 4e60 <__muldf3+0x214>
    4e50:	a9 e7 00 00 	l.ori r15,r7,0x0
    4e54:	18 60 80 00 	l.movhi r3,0x8000
    4e58:	e0 cc 10 04 	l.or r6,r12,r2
    4e5c:	e0 ad 18 04 	l.or r5,r13,r3
    4e60:	e0 6b 40 04 	l.or r3,r11,r8
    4e64:	19 00 1f ff 	l.movhi r8,0x1fff
    4e68:	a9 08 ff ff 	l.ori r8,r8,0xffff
    4e6c:	e4 44 40 00 	l.sfgtu r4,r8
    4e70:	13 ff ff ef 	l.bf 4e2c <__muldf3+0x1e0>
    4e74:	9c e7 00 01 	l.addi r7,r7,0x1
    4e78:	d4 01 78 08 	l.sw 0x8(r1),r15
    4e7c:	19 60 0f ff 	l.movhi r11,0xfff
    4e80:	a9 6b ff ff 	l.ori r11,r11,0xffff
    4e84:	e4 44 58 00 	l.sfgtu r4,r11
    4e88:	10 00 00 2c 	l.bf 4f38 <__muldf3+0x2ec>
    4e8c:	84 e1 00 08 	l.lwz r7,0x8(r1)
    4e90:	00 00 00 0d 	l.j 4ec4 <__muldf3+0x278>
    4e94:	e1 63 18 00 	l.add r11,r3,r3
    4e98:	e4 88 30 00 	l.sfltu r8,r6
    4e9c:	10 00 00 03 	l.bf 4ea8 <__muldf3+0x25c>
    4ea0:	9c a0 00 01 	l.addi r5,r0,0x1
    4ea4:	9c a0 00 00 	l.addi r5,r0,0x0
    4ea8:	18 40 0f ff 	l.movhi r2,0xfff
    4eac:	a8 c8 00 00 	l.ori r6,r8,0x0
    4eb0:	a8 42 ff ff 	l.ori r2,r2,0xffff
    4eb4:	e4 4b 10 00 	l.sfgtu r11,r2
    4eb8:	10 00 00 1f 	l.bf 4f34 <__muldf3+0x2e8>
    4ebc:	e0 a5 68 00 	l.add r5,r5,r13
    4ec0:	e1 63 18 00 	l.add r11,r3,r3
    4ec4:	e0 84 20 00 	l.add r4,r4,r4
    4ec8:	e1 06 30 00 	l.add r8,r6,r6
    4ecc:	e1 a5 28 00 	l.add r13,r5,r5
    4ed0:	9d 80 00 01 	l.addi r12,r0,0x1
    4ed4:	e4 8b 18 00 	l.sfltu r11,r3
    4ed8:	10 00 00 03 	l.bf 4ee4 <__muldf3+0x298>
    4edc:	9c e7 ff ff 	l.addi r7,r7,0xffffffff
    4ee0:	9d 80 00 00 	l.addi r12,r0,0x0
    4ee4:	e0 8c 20 00 	l.add r4,r12,r4
    4ee8:	a8 6b 00 00 	l.ori r3,r11,0x0
    4eec:	bd 85 00 00 	l.sfltsi r5,0x0
    4ef0:	0f ff ff ea 	l.bnf 4e98 <__muldf3+0x24c>
    4ef4:	a9 64 00 00 	l.ori r11,r4,0x0
    4ef8:	03 ff ff e8 	l.j 4e98 <__muldf3+0x24c>
    4efc:	a8 63 00 01 	l.ori r3,r3,0x1
    4f00:	0c 00 00 2a 	l.bnf 4fa8 <__muldf3+0x35c>
    4f04:	e4 52 28 00 	l.sfgtu r18,r5
    4f08:	9c 40 00 00 	l.addi r2,r0,0x0
    4f0c:	03 ff ff 9e 	l.j 4d84 <__muldf3+0x138>
    4f10:	9c 60 00 00 	l.addi r3,r0,0x0
    4f14:	9d a0 00 00 	l.addi r13,r0,0x0
    4f18:	e0 e8 10 00 	l.add r7,r8,r2
    4f1c:	e0 ed 38 00 	l.add r7,r13,r7
    4f20:	e4 42 38 00 	l.sfgtu r2,r7
    4f24:	13 ff ff 96 	l.bf 4d7c <__muldf3+0x130>
    4f28:	e4 22 38 00 	l.sfne r2,r7
    4f2c:	03 ff ff f5 	l.j 4f00 <__muldf3+0x2b4>
    4f30:	15 00 00 00 	l.nop 0x0
    4f34:	d4 01 38 08 	l.sw 0x8(r1),r7
    4f38:	a4 43 00 ff 	l.andi r2,r3,0xff
    4f3c:	bc 22 00 80 	l.sfnei r2,0x80
    4f40:	0c 00 00 2b 	l.bnf 4fec <__muldf3+0x3a0>
    4f44:	a4 43 01 00 	l.andi r2,r3,0x100
    4f48:	9c 40 00 03 	l.addi r2,r0,0x3
    4f4c:	d4 01 18 10 	l.sw 0x10(r1),r3
    4f50:	d4 01 20 0c 	l.sw 0xc(r1),r4
    4f54:	d4 01 10 00 	l.sw 0x0(r1),r2
    4f58:	a8 61 00 00 	l.ori r3,r1,0x0
    4f5c:	07 ff fd f0 	l.jal 471c <__pack_d>
    4f60:	15 00 00 00 	l.nop 0x0
    4f64:	9c 21 00 70 	l.addi r1,r1,0x70
    4f68:	a8 4b 00 00 	l.ori r2,r11,0x0
    4f6c:	a8 6c 00 00 	l.ori r3,r12,0x0
    4f70:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    4f74:	e1 62 00 04 	l.or r11,r2,r0
    4f78:	e1 83 00 04 	l.or r12,r3,r0
    4f7c:	85 c1 ff e0 	l.lwz r14,0xffffffe0(r1)
    4f80:	84 41 ff dc 	l.lwz r2,0xffffffdc(r1)
    4f84:	86 01 ff e4 	l.lwz r16,0xffffffe4(r1)
    4f88:	86 41 ff e8 	l.lwz r18,0xffffffe8(r1)
    4f8c:	86 81 ff ec 	l.lwz r20,0xffffffec(r1)
    4f90:	86 c1 ff f0 	l.lwz r22,0xfffffff0(r1)
    4f94:	87 01 ff f4 	l.lwz r24,0xfffffff4(r1)
    4f98:	44 00 48 00 	l.jr r9
    4f9c:	87 41 ff f8 	l.lwz r26,0xfffffff8(r1)
    4fa0:	03 ff ff 81 	l.j 4da4 <__muldf3+0x158>
    4fa4:	9d 00 00 00 	l.addi r8,r0,0x0
    4fa8:	13 ff ff 75 	l.bf 4d7c <__muldf3+0x130>
    4fac:	9c 40 00 00 	l.addi r2,r0,0x0
    4fb0:	03 ff ff 75 	l.j 4d84 <__muldf3+0x138>
    4fb4:	9c 60 00 00 	l.addi r3,r0,0x0
    4fb8:	18 60 00 00 	l.movhi r3,0x0
    4fbc:	bc 05 00 02 	l.sfeqi r5,0x2
    4fc0:	13 ff ff e7 	l.bf 4f5c <__muldf3+0x310>
    4fc4:	a8 63 60 48 	l.ori r3,r3,0x6048
    4fc8:	84 81 00 2c 	l.lwz r4,0x2c(r1)
    4fcc:	84 41 00 18 	l.lwz r2,0x18(r1)
    4fd0:	a8 6e 00 00 	l.ori r3,r14,0x0
    4fd4:	e0 44 10 05 	l.xor r2,r4,r2
    4fd8:	e0 80 10 02 	l.sub r4,r0,r2
    4fdc:	e0 44 10 04 	l.or r2,r4,r2
    4fe0:	b8 42 00 5f 	l.srli r2,r2,0x1f
    4fe4:	03 ff ff de 	l.j 4f5c <__muldf3+0x310>
    4fe8:	d4 01 10 2c 	l.sw 0x2c(r1),r2
    4fec:	bc 22 00 00 	l.sfnei r2,0x0
    4ff0:	13 ff ff d6 	l.bf 4f48 <__muldf3+0x2fc>
    4ff4:	e0 a5 30 04 	l.or r5,r5,r6
    4ff8:	bc 05 00 00 	l.sfeqi r5,0x0
    4ffc:	13 ff ff d3 	l.bf 4f48 <__muldf3+0x2fc>
    5000:	9c a3 00 80 	l.addi r5,r3,0x80
    5004:	e4 85 18 00 	l.sfltu r5,r3
    5008:	10 00 00 03 	l.bf 5014 <__muldf3+0x3c8>
    500c:	9c c0 00 01 	l.addi r6,r0,0x1
    5010:	a8 c2 00 00 	l.ori r6,r2,0x0
    5014:	9c e0 ff 00 	l.addi r7,r0,0xffffff00
    5018:	e0 86 20 00 	l.add r4,r6,r4
    501c:	03 ff ff cb 	l.j 4f48 <__muldf3+0x2fc>
    5020:	e0 65 38 03 	l.and r3,r5,r7
    5024:	18 60 00 00 	l.movhi r3,0x0
    5028:	bc 02 00 02 	l.sfeqi r2,0x2
    502c:	13 ff ff cc 	l.bf 4f5c <__muldf3+0x310>
    5030:	a8 63 60 48 	l.ori r3,r3,0x6048
    5034:	84 41 00 18 	l.lwz r2,0x18(r1)
    5038:	84 81 00 2c 	l.lwz r4,0x2c(r1)
    503c:	a8 70 00 00 	l.ori r3,r16,0x0
    5040:	e0 44 10 05 	l.xor r2,r4,r2
    5044:	e0 80 10 02 	l.sub r4,r0,r2
    5048:	e0 44 10 04 	l.or r2,r4,r2
    504c:	b8 42 00 5f 	l.srli r2,r2,0x1f
    5050:	03 ff ff c3 	l.j 4f5c <__muldf3+0x310>
    5054:	d4 01 10 18 	l.sw 0x18(r1),r2

00005058 <__divdf3>:
    5058:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
    505c:	d7 e1 17 f0 	l.sw 0xfffffff0(r1),r2
    5060:	d7 e1 77 f4 	l.sw 0xfffffff4(r1),r14
    5064:	d7 e1 87 f8 	l.sw 0xfffffff8(r1),r16
    5068:	9c 21 ff b8 	l.addi r1,r1,0xffffffb8
    506c:	9d c1 00 14 	l.addi r14,r1,0x14
    5070:	d4 01 18 30 	l.sw 0x30(r1),r3
    5074:	d4 01 20 34 	l.sw 0x34(r1),r4
    5078:	9c 61 00 30 	l.addi r3,r1,0x30
    507c:	d4 01 28 28 	l.sw 0x28(r1),r5
    5080:	d4 01 30 2c 	l.sw 0x2c(r1),r6
    5084:	07 ff fe 5f 	l.jal 4a00 <__unpack_d>
    5088:	a8 8e 00 00 	l.ori r4,r14,0x0
    508c:	9c 61 00 28 	l.addi r3,r1,0x28
    5090:	07 ff fe 5c 	l.jal 4a00 <__unpack_d>
    5094:	a8 81 00 00 	l.ori r4,r1,0x0
    5098:	84 41 00 14 	l.lwz r2,0x14(r1)
    509c:	bc a2 00 01 	l.sfleui r2,0x1
    50a0:	10 00 00 59 	l.bf 5204 <__divdf3+0x1ac>
    50a4:	a8 6e 00 00 	l.ori r3,r14,0x0
    50a8:	84 a1 00 00 	l.lwz r5,0x0(r1)
    50ac:	bc a5 00 01 	l.sfleui r5,0x1
    50b0:	10 00 00 55 	l.bf 5204 <__divdf3+0x1ac>
    50b4:	a8 61 00 00 	l.ori r3,r1,0x0
    50b8:	84 81 00 18 	l.lwz r4,0x18(r1)
    50bc:	84 61 00 04 	l.lwz r3,0x4(r1)
    50c0:	bc 02 00 04 	l.sfeqi r2,0x4
    50c4:	e0 64 18 05 	l.xor r3,r4,r3
    50c8:	10 00 00 63 	l.bf 5254 <__divdf3+0x1fc>
    50cc:	d4 01 18 18 	l.sw 0x18(r1),r3
    50d0:	bc 22 00 02 	l.sfnei r2,0x2
    50d4:	0c 00 00 60 	l.bnf 5254 <__divdf3+0x1fc>
    50d8:	bc 25 00 04 	l.sfnei r5,0x4
    50dc:	0c 00 00 80 	l.bnf 52dc <__divdf3+0x284>
    50e0:	bc 25 00 02 	l.sfnei r5,0x2
    50e4:	0c 00 00 7a 	l.bnf 52cc <__divdf3+0x274>
    50e8:	84 41 00 08 	l.lwz r2,0x8(r1)
    50ec:	84 61 00 1c 	l.lwz r3,0x1c(r1)
    50f0:	84 c1 00 20 	l.lwz r6,0x20(r1)
    50f4:	e0 43 10 02 	l.sub r2,r3,r2
    50f8:	86 21 00 0c 	l.lwz r17,0xc(r1)
    50fc:	d4 01 10 1c 	l.sw 0x1c(r1),r2
    5100:	84 a1 00 24 	l.lwz r5,0x24(r1)
    5104:	e4 51 30 00 	l.sfgtu r17,r6
    5108:	0c 00 00 4b 	l.bnf 5234 <__divdf3+0x1dc>
    510c:	86 e1 00 10 	l.lwz r23,0x10(r1)
    5110:	e0 65 28 00 	l.add r3,r5,r5
    5114:	e4 83 28 00 	l.sfltu r3,r5
    5118:	0c 00 00 55 	l.bnf 526c <__divdf3+0x214>
    511c:	9c 80 00 01 	l.addi r4,r0,0x1
    5120:	e0 c6 30 00 	l.add r6,r6,r6
    5124:	9c 42 ff ff 	l.addi r2,r2,0xffffffff
    5128:	e0 c4 30 00 	l.add r6,r4,r6
    512c:	a8 a3 00 00 	l.ori r5,r3,0x0
    5130:	d4 01 10 1c 	l.sw 0x1c(r1),r2
    5134:	9d a0 00 3d 	l.addi r13,r0,0x3d
    5138:	18 40 10 00 	l.movhi r2,0x1000
    513c:	9c 60 00 00 	l.addi r3,r0,0x0
    5140:	9d 60 00 00 	l.addi r11,r0,0x0
    5144:	9d 80 00 00 	l.addi r12,r0,0x0
    5148:	ba a2 00 1f 	l.slli r21,r2,0x1f
    514c:	b9 e3 00 41 	l.srli r15,r3,0x1
    5150:	ba 62 00 41 	l.srli r19,r2,0x1
    5154:	9d ad ff ff 	l.addi r13,r13,0xffffffff
    5158:	e1 f5 78 04 	l.or r15,r21,r15
    515c:	a8 f3 00 00 	l.ori r7,r19,0x0
    5160:	e4 51 30 00 	l.sfgtu r17,r6
    5164:	10 00 00 15 	l.bf 51b8 <__divdf3+0x160>
    5168:	a9 0f 00 00 	l.ori r8,r15,0x0
    516c:	e1 eb 10 04 	l.or r15,r11,r2
    5170:	e2 ac 18 04 	l.or r21,r12,r3
    5174:	a8 4f 00 00 	l.ori r2,r15,0x0
    5178:	e2 66 88 02 	l.sub r19,r6,r17
    517c:	e1 e5 b8 02 	l.sub r15,r5,r23
    5180:	e4 31 30 00 	l.sfne r17,r6
    5184:	10 00 00 05 	l.bf 5198 <__divdf3+0x140>
    5188:	a8 75 00 00 	l.ori r3,r21,0x0
    518c:	e4 57 28 00 	l.sfgtu r23,r5
    5190:	10 00 00 0a 	l.bf 51b8 <__divdf3+0x160>
    5194:	15 00 00 00 	l.nop 0x0
    5198:	e4 4f 28 00 	l.sfgtu r15,r5
    519c:	9c c0 00 01 	l.addi r6,r0,0x1
    51a0:	e1 62 00 04 	l.or r11,r2,r0
    51a4:	e1 83 00 04 	l.or r12,r3,r0
    51a8:	10 00 00 03 	l.bf 51b4 <__divdf3+0x15c>
    51ac:	a8 af 00 00 	l.ori r5,r15,0x0
    51b0:	9c c0 00 00 	l.addi r6,r0,0x0
    51b4:	e0 d3 30 02 	l.sub r6,r19,r6
    51b8:	e1 e5 28 00 	l.add r15,r5,r5
    51bc:	e0 c6 30 00 	l.add r6,r6,r6
    51c0:	e4 8f 28 00 	l.sfltu r15,r5
    51c4:	e0 47 00 04 	l.or r2,r7,r0
    51c8:	e0 68 00 04 	l.or r3,r8,r0
    51cc:	10 00 00 03 	l.bf 51d8 <__divdf3+0x180>
    51d0:	9e 60 00 01 	l.addi r19,r0,0x1
    51d4:	9e 60 00 00 	l.addi r19,r0,0x0
    51d8:	a8 af 00 00 	l.ori r5,r15,0x0
    51dc:	bc 2d 00 00 	l.sfnei r13,0x0
    51e0:	13 ff ff da 	l.bf 5148 <__divdf3+0xf0>
    51e4:	e0 d3 30 00 	l.add r6,r19,r6
    51e8:	a4 6c 00 ff 	l.andi r3,r12,0xff
    51ec:	bc 23 00 80 	l.sfnei r3,0x80
    51f0:	0c 00 00 26 	l.bnf 5288 <__divdf3+0x230>
    51f4:	a8 8b 00 00 	l.ori r4,r11,0x0
    51f8:	a8 6e 00 00 	l.ori r3,r14,0x0
    51fc:	d4 01 58 20 	l.sw 0x20(r1),r11
    5200:	d4 01 60 24 	l.sw 0x24(r1),r12
    5204:	07 ff fd 46 	l.jal 471c <__pack_d>
    5208:	15 00 00 00 	l.nop 0x0
    520c:	9c 21 00 48 	l.addi r1,r1,0x48
    5210:	a8 4b 00 00 	l.ori r2,r11,0x0
    5214:	a8 6c 00 00 	l.ori r3,r12,0x0
    5218:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    521c:	e1 62 00 04 	l.or r11,r2,r0
    5220:	e1 83 00 04 	l.or r12,r3,r0
    5224:	85 c1 ff f4 	l.lwz r14,0xfffffff4(r1)
    5228:	84 41 ff f0 	l.lwz r2,0xfffffff0(r1)
    522c:	44 00 48 00 	l.jr r9
    5230:	86 01 ff f8 	l.lwz r16,0xfffffff8(r1)
    5234:	e4 31 30 00 	l.sfne r17,r6
    5238:	13 ff ff c0 	l.bf 5138 <__divdf3+0xe0>
    523c:	9d a0 00 3d 	l.addi r13,r0,0x3d
    5240:	e4 57 28 00 	l.sfgtu r23,r5
    5244:	0f ff ff bd 	l.bnf 5138 <__divdf3+0xe0>
    5248:	e0 65 28 00 	l.add r3,r5,r5
    524c:	03 ff ff b3 	l.j 5118 <__divdf3+0xc0>
    5250:	e4 83 28 00 	l.sfltu r3,r5
    5254:	18 60 00 00 	l.movhi r3,0x0
    5258:	e4 02 28 00 	l.sfeq r2,r5
    525c:	13 ff ff ea 	l.bf 5204 <__divdf3+0x1ac>
    5260:	a8 63 60 48 	l.ori r3,r3,0x6048
    5264:	03 ff ff e8 	l.j 5204 <__divdf3+0x1ac>
    5268:	a8 6e 00 00 	l.ori r3,r14,0x0
    526c:	9c 80 00 00 	l.addi r4,r0,0x0
    5270:	e0 c6 30 00 	l.add r6,r6,r6
    5274:	9c 42 ff ff 	l.addi r2,r2,0xffffffff
    5278:	e0 c4 30 00 	l.add r6,r4,r6
    527c:	a8 a3 00 00 	l.ori r5,r3,0x0
    5280:	03 ff ff ad 	l.j 5134 <__divdf3+0xdc>
    5284:	d4 01 10 1c 	l.sw 0x1c(r1),r2
    5288:	a4 6c 01 00 	l.andi r3,r12,0x100
    528c:	bc 23 00 00 	l.sfnei r3,0x0
    5290:	13 ff ff db 	l.bf 51fc <__divdf3+0x1a4>
    5294:	a8 6e 00 00 	l.ori r3,r14,0x0
    5298:	e0 c6 78 04 	l.or r6,r6,r15
    529c:	bc 06 00 00 	l.sfeqi r6,0x0
    52a0:	13 ff ff d7 	l.bf 51fc <__divdf3+0x1a4>
    52a4:	15 00 00 00 	l.nop 0x0
    52a8:	9c 6c 00 80 	l.addi r3,r12,0x80
    52ac:	e4 83 60 00 	l.sfltu r3,r12
    52b0:	10 00 00 03 	l.bf 52bc <__divdf3+0x264>
    52b4:	9c a0 00 01 	l.addi r5,r0,0x1
    52b8:	a8 ad 00 00 	l.ori r5,r13,0x0
    52bc:	9c 40 ff 00 	l.addi r2,r0,0xffffff00
    52c0:	e1 65 20 00 	l.add r11,r5,r4
    52c4:	03 ff ff cd 	l.j 51f8 <__divdf3+0x1a0>
    52c8:	e1 83 10 03 	l.and r12,r3,r2
    52cc:	9c 40 00 04 	l.addi r2,r0,0x4
    52d0:	a8 6e 00 00 	l.ori r3,r14,0x0
    52d4:	03 ff ff cc 	l.j 5204 <__divdf3+0x1ac>
    52d8:	d4 01 10 14 	l.sw 0x14(r1),r2
    52dc:	9c 60 00 00 	l.addi r3,r0,0x0
    52e0:	9c 40 00 00 	l.addi r2,r0,0x0
    52e4:	d4 01 10 20 	l.sw 0x20(r1),r2
    52e8:	d4 01 18 24 	l.sw 0x24(r1),r3
    52ec:	9c 60 00 00 	l.addi r3,r0,0x0
    52f0:	d4 01 18 1c 	l.sw 0x1c(r1),r3
    52f4:	03 ff ff c4 	l.j 5204 <__divdf3+0x1ac>
    52f8:	a8 6e 00 00 	l.ori r3,r14,0x0

000052fc <__fpcmp_parts_d>:
    52fc:	84 a3 00 00 	l.lwz r5,0x0(r3)
    5300:	9d 60 00 01 	l.addi r11,r0,0x1
    5304:	e4 a5 58 00 	l.sfleu r5,r11
    5308:	10 00 00 16 	l.bf 5360 <__fpcmp_parts_d+0x64>
    530c:	15 00 00 00 	l.nop 0x0
    5310:	84 c4 00 00 	l.lwz r6,0x0(r4)
    5314:	e4 a6 58 00 	l.sfleu r6,r11
    5318:	10 00 00 12 	l.bf 5360 <__fpcmp_parts_d+0x64>
    531c:	bc 25 00 04 	l.sfnei r5,0x4
    5320:	0c 00 00 44 	l.bnf 5430 <__fpcmp_parts_d+0x134>
    5324:	bc 26 00 04 	l.sfnei r6,0x4
    5328:	0c 00 00 19 	l.bnf 538c <__fpcmp_parts_d+0x90>
    532c:	bc 25 00 02 	l.sfnei r5,0x2
    5330:	0c 00 00 14 	l.bnf 5380 <__fpcmp_parts_d+0x84>
    5334:	bc 26 00 02 	l.sfnei r6,0x2
    5338:	0c 00 00 0c 	l.bnf 5368 <__fpcmp_parts_d+0x6c>
    533c:	15 00 00 00 	l.nop 0x0
    5340:	84 a3 00 04 	l.lwz r5,0x4(r3)
    5344:	84 c4 00 04 	l.lwz r6,0x4(r4)
    5348:	e4 05 30 00 	l.sfeq r5,r6
    534c:	10 00 00 16 	l.bf 53a4 <__fpcmp_parts_d+0xa8>
    5350:	15 00 00 00 	l.nop 0x0
    5354:	bc 05 00 00 	l.sfeqi r5,0x0
    5358:	0c 00 00 08 	l.bnf 5378 <__fpcmp_parts_d+0x7c>
    535c:	15 00 00 00 	l.nop 0x0
    5360:	44 00 48 00 	l.jr r9
    5364:	15 00 00 00 	l.nop 0x0
    5368:	84 63 00 04 	l.lwz r3,0x4(r3)
    536c:	bc 03 00 00 	l.sfeqi r3,0x0
    5370:	13 ff ff fc 	l.bf 5360 <__fpcmp_parts_d+0x64>
    5374:	15 00 00 00 	l.nop 0x0
    5378:	44 00 48 00 	l.jr r9
    537c:	9d 60 ff ff 	l.addi r11,r0,0xffffffff
    5380:	bc 06 00 02 	l.sfeqi r6,0x2
    5384:	13 ff ff f7 	l.bf 5360 <__fpcmp_parts_d+0x64>
    5388:	9d 60 00 00 	l.addi r11,r0,0x0
    538c:	84 64 00 04 	l.lwz r3,0x4(r4)
    5390:	bc 03 00 00 	l.sfeqi r3,0x0
    5394:	13 ff ff f3 	l.bf 5360 <__fpcmp_parts_d+0x64>
    5398:	9d 60 ff ff 	l.addi r11,r0,0xffffffff
    539c:	44 00 48 00 	l.jr r9
    53a0:	9d 60 00 01 	l.addi r11,r0,0x1
    53a4:	84 e3 00 08 	l.lwz r7,0x8(r3)
    53a8:	84 c4 00 08 	l.lwz r6,0x8(r4)
    53ac:	e5 a7 30 00 	l.sfles r7,r6
    53b0:	0f ff ff ea 	l.bnf 5358 <__fpcmp_parts_d+0x5c>
    53b4:	bc 05 00 00 	l.sfeqi r5,0x0
    53b8:	e5 67 30 00 	l.sfges r7,r6
    53bc:	0c 00 00 15 	l.bnf 5410 <__fpcmp_parts_d+0x114>
    53c0:	bc 05 00 00 	l.sfeqi r5,0x0
    53c4:	84 c3 00 0c 	l.lwz r6,0xc(r3)
    53c8:	84 e4 00 0c 	l.lwz r7,0xc(r4)
    53cc:	84 63 00 10 	l.lwz r3,0x10(r3)
    53d0:	e4 46 38 00 	l.sfgtu r6,r7
    53d4:	10 00 00 13 	l.bf 5420 <__fpcmp_parts_d+0x124>
    53d8:	84 84 00 10 	l.lwz r4,0x10(r4)
    53dc:	e4 26 38 00 	l.sfne r6,r7
    53e0:	10 00 00 05 	l.bf 53f4 <__fpcmp_parts_d+0xf8>
    53e4:	e4 47 30 00 	l.sfgtu r7,r6
    53e8:	e4 43 20 00 	l.sfgtu r3,r4
    53ec:	10 00 00 0d 	l.bf 5420 <__fpcmp_parts_d+0x124>
    53f0:	e4 47 30 00 	l.sfgtu r7,r6
    53f4:	10 00 00 07 	l.bf 5410 <__fpcmp_parts_d+0x114>
    53f8:	bc 05 00 00 	l.sfeqi r5,0x0
    53fc:	e4 27 30 00 	l.sfne r7,r6
    5400:	10 00 00 0a 	l.bf 5428 <__fpcmp_parts_d+0x12c>
    5404:	e4 44 18 00 	l.sfgtu r4,r3
    5408:	0c 00 00 08 	l.bnf 5428 <__fpcmp_parts_d+0x12c>
    540c:	bc 05 00 00 	l.sfeqi r5,0x0
    5410:	0f ff ff e3 	l.bnf 539c <__fpcmp_parts_d+0xa0>
    5414:	9d 60 ff ff 	l.addi r11,r0,0xffffffff
    5418:	44 00 48 00 	l.jr r9
    541c:	15 00 00 00 	l.nop 0x0
    5420:	03 ff ff cd 	l.j 5354 <__fpcmp_parts_d+0x58>
    5424:	9d 60 00 01 	l.addi r11,r0,0x1
    5428:	44 00 48 00 	l.jr r9
    542c:	9d 60 00 00 	l.addi r11,r0,0x0
    5430:	13 ff ff ce 	l.bf 5368 <__fpcmp_parts_d+0x6c>
    5434:	15 00 00 00 	l.nop 0x0
    5438:	85 64 00 04 	l.lwz r11,0x4(r4)
    543c:	84 63 00 04 	l.lwz r3,0x4(r3)
    5440:	44 00 48 00 	l.jr r9
    5444:	e1 6b 18 02 	l.sub r11,r11,r3

00005448 <__cmpdf2>:
    5448:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
    544c:	d7 e1 17 f4 	l.sw 0xfffffff4(r1),r2
    5450:	d7 e1 77 f8 	l.sw 0xfffffff8(r1),r14
    5454:	9c 21 ff bc 	l.addi r1,r1,0xffffffbc
    5458:	9d c1 00 14 	l.addi r14,r1,0x14
    545c:	d4 01 18 30 	l.sw 0x30(r1),r3
    5460:	d4 01 20 34 	l.sw 0x34(r1),r4
    5464:	9c 61 00 30 	l.addi r3,r1,0x30
    5468:	d4 01 28 28 	l.sw 0x28(r1),r5
    546c:	d4 01 30 2c 	l.sw 0x2c(r1),r6
    5470:	07 ff fd 64 	l.jal 4a00 <__unpack_d>
    5474:	a8 8e 00 00 	l.ori r4,r14,0x0
    5478:	9c 61 00 28 	l.addi r3,r1,0x28
    547c:	07 ff fd 61 	l.jal 4a00 <__unpack_d>
    5480:	a8 81 00 00 	l.ori r4,r1,0x0
    5484:	a8 6e 00 00 	l.ori r3,r14,0x0
    5488:	07 ff ff 9d 	l.jal 52fc <__fpcmp_parts_d>
    548c:	a8 81 00 00 	l.ori r4,r1,0x0
    5490:	9c 21 00 44 	l.addi r1,r1,0x44
    5494:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    5498:	84 41 ff f4 	l.lwz r2,0xfffffff4(r1)
    549c:	44 00 48 00 	l.jr r9
    54a0:	85 c1 ff f8 	l.lwz r14,0xfffffff8(r1)

000054a4 <__eqdf2>:
    54a4:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
    54a8:	d7 e1 77 f8 	l.sw 0xfffffff8(r1),r14
    54ac:	d7 e1 17 f4 	l.sw 0xfffffff4(r1),r2
    54b0:	9c 21 ff bc 	l.addi r1,r1,0xffffffbc
    54b4:	9d c1 00 14 	l.addi r14,r1,0x14
    54b8:	d4 01 18 30 	l.sw 0x30(r1),r3
    54bc:	d4 01 20 34 	l.sw 0x34(r1),r4
    54c0:	9c 61 00 30 	l.addi r3,r1,0x30
    54c4:	d4 01 28 28 	l.sw 0x28(r1),r5
    54c8:	d4 01 30 2c 	l.sw 0x2c(r1),r6
    54cc:	07 ff fd 4d 	l.jal 4a00 <__unpack_d>
    54d0:	a8 8e 00 00 	l.ori r4,r14,0x0
    54d4:	9c 61 00 28 	l.addi r3,r1,0x28
    54d8:	07 ff fd 4a 	l.jal 4a00 <__unpack_d>
    54dc:	a8 81 00 00 	l.ori r4,r1,0x0
    54e0:	9d 60 00 01 	l.addi r11,r0,0x1
    54e4:	84 61 00 14 	l.lwz r3,0x14(r1)
    54e8:	e4 a3 58 00 	l.sfleu r3,r11
    54ec:	10 00 00 07 	l.bf 5508 <__eqdf2+0x64>
    54f0:	84 61 00 00 	l.lwz r3,0x0(r1)
    54f4:	e4 a3 58 00 	l.sfleu r3,r11
    54f8:	10 00 00 04 	l.bf 5508 <__eqdf2+0x64>
    54fc:	a8 6e 00 00 	l.ori r3,r14,0x0
    5500:	07 ff ff 7f 	l.jal 52fc <__fpcmp_parts_d>
    5504:	a8 81 00 00 	l.ori r4,r1,0x0
    5508:	9c 21 00 44 	l.addi r1,r1,0x44
    550c:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    5510:	84 41 ff f4 	l.lwz r2,0xfffffff4(r1)
    5514:	44 00 48 00 	l.jr r9
    5518:	85 c1 ff f8 	l.lwz r14,0xfffffff8(r1)

0000551c <__nedf2>:
    551c:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
    5520:	d7 e1 77 f8 	l.sw 0xfffffff8(r1),r14
    5524:	d7 e1 17 f4 	l.sw 0xfffffff4(r1),r2
    5528:	9c 21 ff bc 	l.addi r1,r1,0xffffffbc
    552c:	9d c1 00 14 	l.addi r14,r1,0x14
    5530:	d4 01 18 30 	l.sw 0x30(r1),r3
    5534:	d4 01 20 34 	l.sw 0x34(r1),r4
    5538:	9c 61 00 30 	l.addi r3,r1,0x30
    553c:	d4 01 28 28 	l.sw 0x28(r1),r5
    5540:	d4 01 30 2c 	l.sw 0x2c(r1),r6
    5544:	07 ff fd 2f 	l.jal 4a00 <__unpack_d>
    5548:	a8 8e 00 00 	l.ori r4,r14,0x0
    554c:	9c 61 00 28 	l.addi r3,r1,0x28
    5550:	07 ff fd 2c 	l.jal 4a00 <__unpack_d>
    5554:	a8 81 00 00 	l.ori r4,r1,0x0
    5558:	9d 60 00 01 	l.addi r11,r0,0x1
    555c:	84 61 00 14 	l.lwz r3,0x14(r1)
    5560:	e4 a3 58 00 	l.sfleu r3,r11
    5564:	10 00 00 07 	l.bf 5580 <__nedf2+0x64>
    5568:	84 61 00 00 	l.lwz r3,0x0(r1)
    556c:	e4 a3 58 00 	l.sfleu r3,r11
    5570:	10 00 00 04 	l.bf 5580 <__nedf2+0x64>
    5574:	a8 6e 00 00 	l.ori r3,r14,0x0
    5578:	07 ff ff 61 	l.jal 52fc <__fpcmp_parts_d>
    557c:	a8 81 00 00 	l.ori r4,r1,0x0
    5580:	9c 21 00 44 	l.addi r1,r1,0x44
    5584:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    5588:	84 41 ff f4 	l.lwz r2,0xfffffff4(r1)
    558c:	44 00 48 00 	l.jr r9
    5590:	85 c1 ff f8 	l.lwz r14,0xfffffff8(r1)

00005594 <__gtdf2>:
    5594:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
    5598:	d7 e1 77 f8 	l.sw 0xfffffff8(r1),r14
    559c:	d7 e1 17 f4 	l.sw 0xfffffff4(r1),r2
    55a0:	9c 21 ff bc 	l.addi r1,r1,0xffffffbc
    55a4:	9d c1 00 14 	l.addi r14,r1,0x14
    55a8:	d4 01 18 30 	l.sw 0x30(r1),r3
    55ac:	d4 01 20 34 	l.sw 0x34(r1),r4
    55b0:	9c 61 00 30 	l.addi r3,r1,0x30
    55b4:	d4 01 28 28 	l.sw 0x28(r1),r5
    55b8:	d4 01 30 2c 	l.sw 0x2c(r1),r6
    55bc:	07 ff fd 11 	l.jal 4a00 <__unpack_d>
    55c0:	a8 8e 00 00 	l.ori r4,r14,0x0
    55c4:	9c 61 00 28 	l.addi r3,r1,0x28
    55c8:	07 ff fd 0e 	l.jal 4a00 <__unpack_d>
    55cc:	a8 81 00 00 	l.ori r4,r1,0x0
    55d0:	84 61 00 14 	l.lwz r3,0x14(r1)
    55d4:	bc a3 00 01 	l.sfleui r3,0x1
    55d8:	10 00 00 08 	l.bf 55f8 <__gtdf2+0x64>
    55dc:	9d 60 ff ff 	l.addi r11,r0,0xffffffff
    55e0:	84 61 00 00 	l.lwz r3,0x0(r1)
    55e4:	bc a3 00 01 	l.sfleui r3,0x1
    55e8:	10 00 00 04 	l.bf 55f8 <__gtdf2+0x64>
    55ec:	a8 6e 00 00 	l.ori r3,r14,0x0
    55f0:	07 ff ff 43 	l.jal 52fc <__fpcmp_parts_d>
    55f4:	a8 81 00 00 	l.ori r4,r1,0x0
    55f8:	9c 21 00 44 	l.addi r1,r1,0x44
    55fc:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    5600:	84 41 ff f4 	l.lwz r2,0xfffffff4(r1)
    5604:	44 00 48 00 	l.jr r9
    5608:	85 c1 ff f8 	l.lwz r14,0xfffffff8(r1)

0000560c <__gedf2>:
    560c:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
    5610:	d7 e1 77 f8 	l.sw 0xfffffff8(r1),r14
    5614:	d7 e1 17 f4 	l.sw 0xfffffff4(r1),r2
    5618:	9c 21 ff bc 	l.addi r1,r1,0xffffffbc
    561c:	9d c1 00 14 	l.addi r14,r1,0x14
    5620:	d4 01 18 30 	l.sw 0x30(r1),r3
    5624:	d4 01 20 34 	l.sw 0x34(r1),r4
    5628:	9c 61 00 30 	l.addi r3,r1,0x30
    562c:	d4 01 28 28 	l.sw 0x28(r1),r5
    5630:	d4 01 30 2c 	l.sw 0x2c(r1),r6
    5634:	07 ff fc f3 	l.jal 4a00 <__unpack_d>
    5638:	a8 8e 00 00 	l.ori r4,r14,0x0
    563c:	9c 61 00 28 	l.addi r3,r1,0x28
    5640:	07 ff fc f0 	l.jal 4a00 <__unpack_d>
    5644:	a8 81 00 00 	l.ori r4,r1,0x0
    5648:	84 61 00 14 	l.lwz r3,0x14(r1)
    564c:	bc a3 00 01 	l.sfleui r3,0x1
    5650:	10 00 00 08 	l.bf 5670 <__gedf2+0x64>
    5654:	9d 60 ff ff 	l.addi r11,r0,0xffffffff
    5658:	84 61 00 00 	l.lwz r3,0x0(r1)
    565c:	bc a3 00 01 	l.sfleui r3,0x1
    5660:	10 00 00 04 	l.bf 5670 <__gedf2+0x64>
    5664:	a8 6e 00 00 	l.ori r3,r14,0x0
    5668:	07 ff ff 25 	l.jal 52fc <__fpcmp_parts_d>
    566c:	a8 81 00 00 	l.ori r4,r1,0x0
    5670:	9c 21 00 44 	l.addi r1,r1,0x44
    5674:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    5678:	84 41 ff f4 	l.lwz r2,0xfffffff4(r1)
    567c:	44 00 48 00 	l.jr r9
    5680:	85 c1 ff f8 	l.lwz r14,0xfffffff8(r1)

00005684 <__ltdf2>:
    5684:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
    5688:	d7 e1 77 f8 	l.sw 0xfffffff8(r1),r14
    568c:	d7 e1 17 f4 	l.sw 0xfffffff4(r1),r2
    5690:	9c 21 ff bc 	l.addi r1,r1,0xffffffbc
    5694:	9d c1 00 14 	l.addi r14,r1,0x14
    5698:	d4 01 18 30 	l.sw 0x30(r1),r3
    569c:	d4 01 20 34 	l.sw 0x34(r1),r4
    56a0:	9c 61 00 30 	l.addi r3,r1,0x30
    56a4:	d4 01 28 28 	l.sw 0x28(r1),r5
    56a8:	d4 01 30 2c 	l.sw 0x2c(r1),r6
    56ac:	07 ff fc d5 	l.jal 4a00 <__unpack_d>
    56b0:	a8 8e 00 00 	l.ori r4,r14,0x0
    56b4:	9c 61 00 28 	l.addi r3,r1,0x28
    56b8:	07 ff fc d2 	l.jal 4a00 <__unpack_d>
    56bc:	a8 81 00 00 	l.ori r4,r1,0x0
    56c0:	9d 60 00 01 	l.addi r11,r0,0x1
    56c4:	84 61 00 14 	l.lwz r3,0x14(r1)
    56c8:	e4 a3 58 00 	l.sfleu r3,r11
    56cc:	10 00 00 07 	l.bf 56e8 <__ltdf2+0x64>
    56d0:	84 61 00 00 	l.lwz r3,0x0(r1)
    56d4:	e4 a3 58 00 	l.sfleu r3,r11
    56d8:	10 00 00 04 	l.bf 56e8 <__ltdf2+0x64>
    56dc:	a8 6e 00 00 	l.ori r3,r14,0x0
    56e0:	07 ff ff 07 	l.jal 52fc <__fpcmp_parts_d>
    56e4:	a8 81 00 00 	l.ori r4,r1,0x0
    56e8:	9c 21 00 44 	l.addi r1,r1,0x44
    56ec:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    56f0:	84 41 ff f4 	l.lwz r2,0xfffffff4(r1)
    56f4:	44 00 48 00 	l.jr r9
    56f8:	85 c1 ff f8 	l.lwz r14,0xfffffff8(r1)

000056fc <__ledf2>:
    56fc:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
    5700:	d7 e1 77 f8 	l.sw 0xfffffff8(r1),r14
    5704:	d7 e1 17 f4 	l.sw 0xfffffff4(r1),r2
    5708:	9c 21 ff bc 	l.addi r1,r1,0xffffffbc
    570c:	9d c1 00 14 	l.addi r14,r1,0x14
    5710:	d4 01 18 30 	l.sw 0x30(r1),r3
    5714:	d4 01 20 34 	l.sw 0x34(r1),r4
    5718:	9c 61 00 30 	l.addi r3,r1,0x30
    571c:	d4 01 28 28 	l.sw 0x28(r1),r5
    5720:	d4 01 30 2c 	l.sw 0x2c(r1),r6
    5724:	07 ff fc b7 	l.jal 4a00 <__unpack_d>
    5728:	a8 8e 00 00 	l.ori r4,r14,0x0
    572c:	9c 61 00 28 	l.addi r3,r1,0x28
    5730:	07 ff fc b4 	l.jal 4a00 <__unpack_d>
    5734:	a8 81 00 00 	l.ori r4,r1,0x0
    5738:	9d 60 00 01 	l.addi r11,r0,0x1
    573c:	84 61 00 14 	l.lwz r3,0x14(r1)
    5740:	e4 a3 58 00 	l.sfleu r3,r11
    5744:	10 00 00 07 	l.bf 5760 <__ledf2+0x64>
    5748:	84 61 00 00 	l.lwz r3,0x0(r1)
    574c:	e4 a3 58 00 	l.sfleu r3,r11
    5750:	10 00 00 04 	l.bf 5760 <__ledf2+0x64>
    5754:	a8 6e 00 00 	l.ori r3,r14,0x0
    5758:	07 ff fe e9 	l.jal 52fc <__fpcmp_parts_d>
    575c:	a8 81 00 00 	l.ori r4,r1,0x0
    5760:	9c 21 00 44 	l.addi r1,r1,0x44
    5764:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    5768:	84 41 ff f4 	l.lwz r2,0xfffffff4(r1)
    576c:	44 00 48 00 	l.jr r9
    5770:	85 c1 ff f8 	l.lwz r14,0xfffffff8(r1)

00005774 <__unorddf2>:
    5774:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
    5778:	9c 21 ff c4 	l.addi r1,r1,0xffffffc4
    577c:	d4 01 18 30 	l.sw 0x30(r1),r3
    5780:	d4 01 20 34 	l.sw 0x34(r1),r4
    5784:	9c 61 00 30 	l.addi r3,r1,0x30
    5788:	d4 01 28 28 	l.sw 0x28(r1),r5
    578c:	d4 01 30 2c 	l.sw 0x2c(r1),r6
    5790:	07 ff fc 9c 	l.jal 4a00 <__unpack_d>
    5794:	9c 81 00 14 	l.addi r4,r1,0x14
    5798:	9c 61 00 28 	l.addi r3,r1,0x28
    579c:	07 ff fc 99 	l.jal 4a00 <__unpack_d>
    57a0:	a8 81 00 00 	l.ori r4,r1,0x0
    57a4:	9d 60 00 01 	l.addi r11,r0,0x1
    57a8:	84 61 00 14 	l.lwz r3,0x14(r1)
    57ac:	e4 a3 58 00 	l.sfleu r3,r11
    57b0:	10 00 00 05 	l.bf 57c4 <__unorddf2+0x50>
    57b4:	84 61 00 00 	l.lwz r3,0x0(r1)
    57b8:	e4 a3 58 00 	l.sfleu r3,r11
    57bc:	0c 00 00 06 	l.bnf 57d4 <__unorddf2+0x60>
    57c0:	15 00 00 00 	l.nop 0x0
    57c4:	9c 21 00 3c 	l.addi r1,r1,0x3c
    57c8:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    57cc:	44 00 48 00 	l.jr r9
    57d0:	15 00 00 00 	l.nop 0x0
    57d4:	9c 21 00 3c 	l.addi r1,r1,0x3c
    57d8:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    57dc:	44 00 48 00 	l.jr r9
    57e0:	9d 60 00 00 	l.addi r11,r0,0x0

000057e4 <__floatsidf>:
    57e4:	b8 83 00 5f 	l.srli r4,r3,0x1f
    57e8:	d7 e1 17 f8 	l.sw 0xfffffff8(r1),r2
    57ec:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
    57f0:	9c 40 00 03 	l.addi r2,r0,0x3
    57f4:	9c 21 ff e4 	l.addi r1,r1,0xffffffe4
    57f8:	bc 23 00 00 	l.sfnei r3,0x0
    57fc:	d4 01 10 00 	l.sw 0x0(r1),r2
    5800:	10 00 00 0a 	l.bf 5828 <__floatsidf+0x44>
    5804:	d4 01 20 04 	l.sw 0x4(r1),r4
    5808:	9c 40 00 02 	l.addi r2,r0,0x2
    580c:	d4 01 10 00 	l.sw 0x0(r1),r2
    5810:	07 ff fb c3 	l.jal 471c <__pack_d>
    5814:	a8 61 00 00 	l.ori r3,r1,0x0
    5818:	9c 21 00 1c 	l.addi r1,r1,0x1c
    581c:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    5820:	44 00 48 00 	l.jr r9
    5824:	84 41 ff f8 	l.lwz r2,0xfffffff8(r1)
    5828:	a8 43 00 00 	l.ori r2,r3,0x0
    582c:	9c 60 00 3c 	l.addi r3,r0,0x3c
    5830:	bc 04 00 00 	l.sfeqi r4,0x0
    5834:	0c 00 00 15 	l.bnf 5888 <__floatsidf+0xa4>
    5838:	d4 01 18 08 	l.sw 0x8(r1),r3
    583c:	9c 80 00 00 	l.addi r4,r0,0x0
    5840:	a8 62 00 00 	l.ori r3,r2,0x0
    5844:	d4 01 20 0c 	l.sw 0xc(r1),r4
    5848:	04 00 01 7b 	l.jal 5e34 <__clzsi2>
    584c:	d4 01 10 10 	l.sw 0x10(r1),r2
    5850:	9c 8b 00 1d 	l.addi r4,r11,0x1d
    5854:	bd a4 00 00 	l.sflesi r4,0x0
    5858:	13 ff ff ee 	l.bf 5810 <__floatsidf+0x2c>
    585c:	9d 6b ff fd 	l.addi r11,r11,0xfffffffd
    5860:	bd 8b 00 00 	l.sfltsi r11,0x0
    5864:	10 00 00 0f 	l.bf 58a0 <__floatsidf+0xbc>
    5868:	e1 62 58 08 	l.sll r11,r2,r11
    586c:	9c 40 00 00 	l.addi r2,r0,0x0
    5870:	d4 01 58 0c 	l.sw 0xc(r1),r11
    5874:	d4 01 10 10 	l.sw 0x10(r1),r2
    5878:	9c 40 00 3c 	l.addi r2,r0,0x3c
    587c:	e0 82 20 02 	l.sub r4,r2,r4
    5880:	03 ff ff e4 	l.j 5810 <__floatsidf+0x2c>
    5884:	d4 01 20 08 	l.sw 0x8(r1),r4
    5888:	18 60 80 00 	l.movhi r3,0x8000
    588c:	e4 02 18 00 	l.sfeq r2,r3
    5890:	10 00 00 0c 	l.bf 58c0 <__floatsidf+0xdc>
    5894:	19 60 c1 e0 	l.movhi r11,0xc1e0
    5898:	03 ff ff e9 	l.j 583c <__floatsidf+0x58>
    589c:	e0 40 10 02 	l.sub r2,r0,r2
    58a0:	9c a0 00 1f 	l.addi r5,r0,0x1f
    58a4:	b8 62 00 41 	l.srli r3,r2,0x1
    58a8:	e0 a5 20 02 	l.sub r5,r5,r4
    58ac:	e0 42 20 08 	l.sll r2,r2,r4
    58b0:	e0 a3 28 48 	l.srl r5,r3,r5
    58b4:	d4 01 10 10 	l.sw 0x10(r1),r2
    58b8:	03 ff ff f0 	l.j 5878 <__floatsidf+0x94>
    58bc:	d4 01 28 0c 	l.sw 0xc(r1),r5
    58c0:	03 ff ff d6 	l.j 5818 <__floatsidf+0x34>
    58c4:	9d 80 00 00 	l.addi r12,r0,0x0

000058c8 <__floatunsidf>:
    58c8:	d7 e1 17 f8 	l.sw 0xfffffff8(r1),r2
    58cc:	9c 80 00 00 	l.addi r4,r0,0x0
    58d0:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
    58d4:	9c 21 ff e4 	l.addi r1,r1,0xffffffe4
    58d8:	a8 43 00 00 	l.ori r2,r3,0x0
    58dc:	e4 23 20 00 	l.sfne r3,r4
    58e0:	0c 00 00 23 	l.bnf 596c <__floatunsidf+0xa4>
    58e4:	d4 01 20 04 	l.sw 0x4(r1),r4
    58e8:	9c 80 00 03 	l.addi r4,r0,0x3
    58ec:	9c a0 00 00 	l.addi r5,r0,0x0
    58f0:	d4 01 20 00 	l.sw 0x0(r1),r4
    58f4:	9c 80 00 3c 	l.addi r4,r0,0x3c
    58f8:	d4 01 18 10 	l.sw 0x10(r1),r3
    58fc:	d4 01 20 08 	l.sw 0x8(r1),r4
    5900:	04 00 01 4d 	l.jal 5e34 <__clzsi2>
    5904:	d4 01 28 0c 	l.sw 0xc(r1),r5
    5908:	9c 6b 00 1d 	l.addi r3,r11,0x1d
    590c:	bd 63 00 00 	l.sfgesi r3,0x0
    5910:	0c 00 00 1a 	l.bnf 5978 <__floatunsidf+0xb0>
    5914:	bc 03 00 00 	l.sfeqi r3,0x0
    5918:	10 00 00 0b 	l.bf 5944 <__floatunsidf+0x7c>
    591c:	9d 6b ff fd 	l.addi r11,r11,0xfffffffd
    5920:	bd 8b 00 00 	l.sfltsi r11,0x0
    5924:	10 00 00 2a 	l.bf 59cc <__floatunsidf+0x104>
    5928:	e1 62 58 08 	l.sll r11,r2,r11
    592c:	9c 40 00 00 	l.addi r2,r0,0x0
    5930:	d4 01 58 0c 	l.sw 0xc(r1),r11
    5934:	d4 01 10 10 	l.sw 0x10(r1),r2
    5938:	9c 40 00 3c 	l.addi r2,r0,0x3c
    593c:	e0 62 18 02 	l.sub r3,r2,r3
    5940:	d4 01 18 08 	l.sw 0x8(r1),r3
    5944:	07 ff fb 76 	l.jal 471c <__pack_d>
    5948:	a8 61 00 00 	l.ori r3,r1,0x0
    594c:	9c 21 00 1c 	l.addi r1,r1,0x1c
    5950:	a8 4b 00 00 	l.ori r2,r11,0x0
    5954:	a8 6c 00 00 	l.ori r3,r12,0x0
    5958:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    595c:	e1 62 00 04 	l.or r11,r2,r0
    5960:	e1 83 00 04 	l.or r12,r3,r0
    5964:	44 00 48 00 	l.jr r9
    5968:	84 41 ff f8 	l.lwz r2,0xfffffff8(r1)
    596c:	9c 40 00 02 	l.addi r2,r0,0x2
    5970:	03 ff ff f5 	l.j 5944 <__floatunsidf+0x7c>
    5974:	d4 01 10 00 	l.sw 0x0(r1),r2
    5978:	e0 80 18 02 	l.sub r4,r0,r3
    597c:	9c c4 ff e0 	l.addi r6,r4,0xffffffe0
    5980:	bd 86 00 00 	l.sfltsi r6,0x0
    5984:	10 00 00 1a 	l.bf 59ec <__floatunsidf+0x124>
    5988:	9c a0 00 00 	l.addi r5,r0,0x0
    598c:	9c a5 ff ff 	l.addi r5,r5,0xffffffff
    5990:	e0 82 20 48 	l.srl r4,r2,r4
    5994:	e0 a5 10 03 	l.and r5,r5,r2
    5998:	b8 c6 00 9f 	l.srai r6,r6,0x1f
    599c:	e0 40 28 02 	l.sub r2,r0,r5
    59a0:	e0 a2 28 04 	l.or r5,r2,r5
    59a4:	e0 84 30 03 	l.and r4,r4,r6
    59a8:	b8 45 00 5f 	l.srli r2,r5,0x1f
    59ac:	9c a0 00 3c 	l.addi r5,r0,0x3c
    59b0:	e0 42 20 04 	l.or r2,r2,r4
    59b4:	e0 65 18 02 	l.sub r3,r5,r3
    59b8:	9c a0 00 00 	l.addi r5,r0,0x0
    59bc:	d4 01 18 08 	l.sw 0x8(r1),r3
    59c0:	d4 01 28 0c 	l.sw 0xc(r1),r5
    59c4:	03 ff ff e0 	l.j 5944 <__floatunsidf+0x7c>
    59c8:	d4 01 10 10 	l.sw 0x10(r1),r2
    59cc:	9c 80 00 1f 	l.addi r4,r0,0x1f
    59d0:	b8 a2 00 41 	l.srli r5,r2,0x1
    59d4:	e0 84 18 02 	l.sub r4,r4,r3
    59d8:	e0 42 18 08 	l.sll r2,r2,r3
    59dc:	e0 85 20 48 	l.srl r4,r5,r4
    59e0:	d4 01 10 10 	l.sw 0x10(r1),r2
    59e4:	03 ff ff d5 	l.j 5938 <__floatunsidf+0x70>
    59e8:	d4 01 20 0c 	l.sw 0xc(r1),r4
    59ec:	9c a0 00 01 	l.addi r5,r0,0x1
    59f0:	03 ff ff e7 	l.j 598c <__floatunsidf+0xc4>
    59f4:	e0 a5 20 08 	l.sll r5,r5,r4

000059f8 <__fixdfsi>:
    59f8:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
    59fc:	9c 21 ff e0 	l.addi r1,r1,0xffffffe0
    5a00:	d4 01 18 14 	l.sw 0x14(r1),r3
    5a04:	d4 01 20 18 	l.sw 0x18(r1),r4
    5a08:	9c 61 00 14 	l.addi r3,r1,0x14
    5a0c:	07 ff fb fd 	l.jal 4a00 <__unpack_d>
    5a10:	a8 81 00 00 	l.ori r4,r1,0x0
    5a14:	84 61 00 00 	l.lwz r3,0x0(r1)
    5a18:	bc 03 00 02 	l.sfeqi r3,0x2
    5a1c:	10 00 00 18 	l.bf 5a7c <__fixdfsi+0x84>
    5a20:	9d 60 00 00 	l.addi r11,r0,0x0
    5a24:	bc a3 00 01 	l.sfleui r3,0x1
    5a28:	10 00 00 15 	l.bf 5a7c <__fixdfsi+0x84>
    5a2c:	bc 23 00 04 	l.sfnei r3,0x4
    5a30:	0c 00 00 20 	l.bnf 5ab0 <__fixdfsi+0xb8>
    5a34:	84 61 00 08 	l.lwz r3,0x8(r1)
    5a38:	bd 83 00 00 	l.sfltsi r3,0x0
    5a3c:	10 00 00 10 	l.bf 5a7c <__fixdfsi+0x84>
    5a40:	bd a3 00 1e 	l.sflesi r3,0x1e
    5a44:	0c 00 00 12 	l.bnf 5a8c <__fixdfsi+0x94>
    5a48:	9d 60 00 3c 	l.addi r11,r0,0x3c
    5a4c:	e0 6b 18 02 	l.sub r3,r11,r3
    5a50:	9c 83 ff e0 	l.addi r4,r3,0xffffffe0
    5a54:	bd 84 00 00 	l.sfltsi r4,0x0
    5a58:	10 00 00 1e 	l.bf 5ad0 <__fixdfsi+0xd8>
    5a5c:	84 a1 00 0c 	l.lwz r5,0xc(r1)
    5a60:	85 61 00 0c 	l.lwz r11,0xc(r1)
    5a64:	e1 6b 20 48 	l.srl r11,r11,r4
    5a68:	84 61 00 04 	l.lwz r3,0x4(r1)
    5a6c:	bc 03 00 00 	l.sfeqi r3,0x0
    5a70:	10 00 00 03 	l.bf 5a7c <__fixdfsi+0x84>
    5a74:	15 00 00 00 	l.nop 0x0
    5a78:	e1 60 58 02 	l.sub r11,r0,r11
    5a7c:	9c 21 00 20 	l.addi r1,r1,0x20
    5a80:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    5a84:	44 00 48 00 	l.jr r9
    5a88:	15 00 00 00 	l.nop 0x0
    5a8c:	84 61 00 04 	l.lwz r3,0x4(r1)
    5a90:	bc 03 00 00 	l.sfeqi r3,0x0
    5a94:	0c 00 00 0b 	l.bnf 5ac0 <__fixdfsi+0xc8>
    5a98:	15 00 00 00 	l.nop 0x0
    5a9c:	9c 21 00 20 	l.addi r1,r1,0x20
    5aa0:	19 60 7f ff 	l.movhi r11,0x7fff
    5aa4:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    5aa8:	44 00 48 00 	l.jr r9
    5aac:	a9 6b ff ff 	l.ori r11,r11,0xffff
    5ab0:	84 61 00 04 	l.lwz r3,0x4(r1)
    5ab4:	e4 03 58 00 	l.sfeq r3,r11
    5ab8:	13 ff ff f9 	l.bf 5a9c <__fixdfsi+0xa4>
    5abc:	15 00 00 00 	l.nop 0x0
    5ac0:	9c 21 00 20 	l.addi r1,r1,0x20
    5ac4:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    5ac8:	44 00 48 00 	l.jr r9
    5acc:	19 60 80 00 	l.movhi r11,0x8000
    5ad0:	9c 80 00 1f 	l.addi r4,r0,0x1f
    5ad4:	b8 a5 00 01 	l.slli r5,r5,0x1
    5ad8:	e0 84 18 02 	l.sub r4,r4,r3
    5adc:	85 61 00 10 	l.lwz r11,0x10(r1)
    5ae0:	e0 85 20 08 	l.sll r4,r5,r4
    5ae4:	e1 6b 18 48 	l.srl r11,r11,r3
    5ae8:	03 ff ff e0 	l.j 5a68 <__fixdfsi+0x70>
    5aec:	e1 64 58 04 	l.or r11,r4,r11

00005af0 <__negdf2>:
    5af0:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
    5af4:	d7 e1 17 f8 	l.sw 0xfffffff8(r1),r2
    5af8:	9c 21 ff dc 	l.addi r1,r1,0xffffffdc
    5afc:	d4 01 18 14 	l.sw 0x14(r1),r3
    5b00:	d4 01 20 18 	l.sw 0x18(r1),r4
    5b04:	9c 61 00 14 	l.addi r3,r1,0x14
    5b08:	07 ff fb be 	l.jal 4a00 <__unpack_d>
    5b0c:	a8 81 00 00 	l.ori r4,r1,0x0
    5b10:	84 81 00 04 	l.lwz r4,0x4(r1)
    5b14:	a8 61 00 00 	l.ori r3,r1,0x0
    5b18:	e0 40 20 02 	l.sub r2,r0,r4
    5b1c:	e0 42 20 04 	l.or r2,r2,r4
    5b20:	ac 42 ff ff 	l.xori r2,r2,0xffffffff
    5b24:	b8 42 00 5f 	l.srli r2,r2,0x1f
    5b28:	07 ff fa fd 	l.jal 471c <__pack_d>
    5b2c:	d4 01 10 04 	l.sw 0x4(r1),r2
    5b30:	9c 21 00 24 	l.addi r1,r1,0x24
    5b34:	a8 4b 00 00 	l.ori r2,r11,0x0
    5b38:	a8 6c 00 00 	l.ori r3,r12,0x0
    5b3c:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    5b40:	e1 62 00 04 	l.or r11,r2,r0
    5b44:	e1 83 00 04 	l.or r12,r3,r0
    5b48:	44 00 48 00 	l.jr r9
    5b4c:	84 41 ff f8 	l.lwz r2,0xfffffff8(r1)

00005b50 <__make_dp>:
    5b50:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
    5b54:	d7 e1 17 f8 	l.sw 0xfffffff8(r1),r2
    5b58:	9c 21 ff e4 	l.addi r1,r1,0xffffffe4
    5b5c:	d4 01 18 00 	l.sw 0x0(r1),r3
    5b60:	d4 01 20 04 	l.sw 0x4(r1),r4
    5b64:	d4 01 28 08 	l.sw 0x8(r1),r5
    5b68:	d4 01 38 0c 	l.sw 0xc(r1),r7
    5b6c:	d4 01 40 10 	l.sw 0x10(r1),r8
    5b70:	07 ff fa eb 	l.jal 471c <__pack_d>
    5b74:	a8 61 00 00 	l.ori r3,r1,0x0
    5b78:	9c 21 00 1c 	l.addi r1,r1,0x1c
    5b7c:	a8 4b 00 00 	l.ori r2,r11,0x0
    5b80:	a8 6c 00 00 	l.ori r3,r12,0x0
    5b84:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    5b88:	e1 62 00 04 	l.or r11,r2,r0
    5b8c:	e1 83 00 04 	l.or r12,r3,r0
    5b90:	44 00 48 00 	l.jr r9
    5b94:	84 41 ff f8 	l.lwz r2,0xfffffff8(r1)

00005b98 <__truncdfsf2>:
    5b98:	d7 e1 17 f8 	l.sw 0xfffffff8(r1),r2
    5b9c:	d7 e1 4f fc 	l.sw 0xfffffffc(r1),r9
    5ba0:	9c 21 ff dc 	l.addi r1,r1,0xffffffdc
    5ba4:	18 40 3f ff 	l.movhi r2,0x3fff
    5ba8:	d4 01 18 14 	l.sw 0x14(r1),r3
    5bac:	d4 01 20 18 	l.sw 0x18(r1),r4
    5bb0:	9c 61 00 14 	l.addi r3,r1,0x14
    5bb4:	a8 81 00 00 	l.ori r4,r1,0x0
    5bb8:	07 ff fb 92 	l.jal 4a00 <__unpack_d>
    5bbc:	a8 42 ff ff 	l.ori r2,r2,0xffff
    5bc0:	84 61 00 10 	l.lwz r3,0x10(r1)
    5bc4:	84 c1 00 0c 	l.lwz r6,0xc(r1)
    5bc8:	b8 83 00 5e 	l.srli r4,r3,0x1e
    5bcc:	b8 c6 00 02 	l.slli r6,r6,0x2
    5bd0:	e0 63 10 03 	l.and r3,r3,r2
    5bd4:	bc 03 00 00 	l.sfeqi r3,0x0
    5bd8:	10 00 00 03 	l.bf 5be4 <__truncdfsf2+0x4c>
    5bdc:	e0 c6 20 04 	l.or r6,r6,r4
    5be0:	a8 c6 00 01 	l.ori r6,r6,0x1
    5be4:	84 61 00 00 	l.lwz r3,0x0(r1)
    5be8:	84 81 00 04 	l.lwz r4,0x4(r1)
    5bec:	07 ff f9 8b 	l.jal 4218 <__make_fp>
    5bf0:	84 a1 00 08 	l.lwz r5,0x8(r1)
    5bf4:	9c 21 00 24 	l.addi r1,r1,0x24
    5bf8:	85 21 ff fc 	l.lwz r9,0xfffffffc(r1)
    5bfc:	44 00 48 00 	l.jr r9
    5c00:	84 41 ff f8 	l.lwz r2,0xfffffff8(r1)

00005c04 <__udivsi3>:
    5c04:	9c 21 ff fc 	l.addi r1,r1,0xfffffffc
    5c08:	d4 01 48 00 	l.sw 0x0(r1),r9
    5c0c:	9d 60 00 00 	l.addi r11,r0,0x0
    5c10:	9d 04 00 00 	l.addi r8,r4,0x0
    5c14:	9c a3 00 00 	l.addi r5,r3,0x0
    5c18:	e4 28 58 00 	l.sfne r8,r11
    5c1c:	0c 00 00 36 	l.bnf 5cf4 <__udivsi3+0xf0>
    5c20:	9c e0 00 00 	l.addi r7,r0,0x0
    5c24:	e4 48 28 00 	l.sfgtu r8,r5
    5c28:	10 00 00 32 	l.bf 5cf0 <__udivsi3+0xec>
    5c2c:	e4 08 28 00 	l.sfeq r8,r5
    5c30:	10 00 00 2e 	l.bf 5ce8 <__udivsi3+0xe4>
    5c34:	e4 8b 40 00 	l.sfltu r11,r8
    5c38:	0c 00 00 0d 	l.bnf 5c6c <__udivsi3+0x68>
    5c3c:	9d a0 00 20 	l.addi r13,r0,0x20
    5c40:	19 20 80 00 	l.movhi r9,0x8000
    5c44:	9c c0 ff ff 	l.addi r6,r0,0xffffffff
    5c48:	e0 65 48 03 	l.and r3,r5,r9
    5c4c:	b8 87 00 01 	l.slli r4,r7,0x1
    5c50:	9d e5 00 00 	l.addi r15,r5,0x0
    5c54:	b8 63 00 5f 	l.srli r3,r3,0x1f
    5c58:	e1 ad 30 00 	l.add r13,r13,r6
    5c5c:	e0 e4 18 04 	l.or r7,r4,r3
    5c60:	e4 87 40 00 	l.sfltu r7,r8
    5c64:	13 ff ff f9 	l.bf 5c48 <__udivsi3+0x44>
    5c68:	b8 a5 00 01 	l.slli r5,r5,0x1
    5c6c:	b8 e7 00 41 	l.srli r7,r7,0x1
    5c70:	9d ad 00 01 	l.addi r13,r13,0x1
    5c74:	9d 20 00 00 	l.addi r9,r0,0x0
    5c78:	e4 89 68 00 	l.sfltu r9,r13
    5c7c:	0c 00 00 1e 	l.bnf 5cf4 <__udivsi3+0xf0>
    5c80:	9c af 00 00 	l.addi r5,r15,0x0
    5c84:	19 e0 80 00 	l.movhi r15,0x8000
    5c88:	9e 20 00 00 	l.addi r17,r0,0x0
    5c8c:	e0 65 78 03 	l.and r3,r5,r15
    5c90:	b8 87 00 01 	l.slli r4,r7,0x1
    5c94:	b8 63 00 5f 	l.srli r3,r3,0x1f
    5c98:	e0 e4 18 04 	l.or r7,r4,r3
    5c9c:	e0 c7 40 02 	l.sub r6,r7,r8
    5ca0:	e0 66 78 03 	l.and r3,r6,r15
    5ca4:	b8 63 00 5f 	l.srli r3,r3,0x1f
    5ca8:	9c 80 00 00 	l.addi r4,r0,0x0
    5cac:	e4 23 20 00 	l.sfne r3,r4
    5cb0:	10 00 00 03 	l.bf 5cbc <__udivsi3+0xb8>
    5cb4:	b8 6b 00 01 	l.slli r3,r11,0x1
    5cb8:	9c 80 00 01 	l.addi r4,r0,0x1
    5cbc:	b8 a5 00 01 	l.slli r5,r5,0x1
    5cc0:	e4 24 88 00 	l.sfne r4,r17
    5cc4:	0c 00 00 03 	l.bnf 5cd0 <__udivsi3+0xcc>
    5cc8:	e1 63 20 04 	l.or r11,r3,r4
    5ccc:	9c e6 00 00 	l.addi r7,r6,0x0
    5cd0:	9d 29 00 01 	l.addi r9,r9,0x1
    5cd4:	e4 89 68 00 	l.sfltu r9,r13
    5cd8:	13 ff ff ed 	l.bf 5c8c <__udivsi3+0x88>
    5cdc:	15 00 00 00 	l.nop 0x0
    5ce0:	00 00 00 05 	l.j 5cf4 <__udivsi3+0xf0>
    5ce4:	15 00 00 00 	l.nop 0x0
    5ce8:	00 00 00 03 	l.j 5cf4 <__udivsi3+0xf0>
    5cec:	9d 60 00 01 	l.addi r11,r0,0x1
    5cf0:	9c e5 00 00 	l.addi r7,r5,0x0
    5cf4:	85 21 00 00 	l.lwz r9,0x0(r1)
    5cf8:	44 00 48 00 	l.jr r9
    5cfc:	9c 21 00 04 	l.addi r1,r1,0x4

00005d00 <__umodsi3>:
    5d00:	9c 21 ff fc 	l.addi r1,r1,0xfffffffc
    5d04:	d4 01 48 00 	l.sw 0x0(r1),r9
    5d08:	07 ff ff bf 	l.jal 5c04 <__udivsi3>
    5d0c:	15 00 00 00 	l.nop 0x0
    5d10:	9d 67 00 00 	l.addi r11,r7,0x0
    5d14:	85 21 00 00 	l.lwz r9,0x0(r1)
    5d18:	44 00 48 00 	l.jr r9
    5d1c:	9c 21 00 04 	l.addi r1,r1,0x4

00005d20 <__muldi3>:
    5d20:	a4 e4 ff ff 	l.andi r7,r4,0xffff
    5d24:	b9 04 00 50 	l.srli r8,r4,0x10
    5d28:	a5 66 ff ff 	l.andi r11,r6,0xffff
    5d2c:	b9 86 00 50 	l.srli r12,r6,0x10
    5d30:	e1 ab 3b 06 	l.mul r13,r11,r7
    5d34:	e1 6b 43 06 	l.mul r11,r11,r8
    5d38:	e0 ec 3b 06 	l.mul r7,r12,r7
    5d3c:	b9 ed 00 50 	l.srli r15,r13,0x10
    5d40:	e0 eb 38 00 	l.add r7,r11,r7
    5d44:	d7 e1 17 fc 	l.sw 0xfffffffc(r1),r2
    5d48:	e0 e7 78 00 	l.add r7,r7,r15
    5d4c:	9c 21 ff fc 	l.addi r1,r1,0xfffffffc
    5d50:	e4 ab 38 00 	l.sfleu r11,r7
    5d54:	10 00 00 04 	l.bf 5d64 <__muldi3+0x44>
    5d58:	e1 0c 43 06 	l.mul r8,r12,r8
    5d5c:	18 40 00 01 	l.movhi r2,0x1
    5d60:	e1 08 10 00 	l.add r8,r8,r2
    5d64:	e0 c6 1b 06 	l.mul r6,r6,r3
    5d68:	e0 84 2b 06 	l.mul r4,r4,r5
    5d6c:	b8 67 00 50 	l.srli r3,r7,0x10
    5d70:	b8 e7 00 10 	l.slli r7,r7,0x10
    5d74:	a5 ad ff ff 	l.andi r13,r13,0xffff
    5d78:	e1 08 18 00 	l.add r8,r8,r3
    5d7c:	e1 64 30 00 	l.add r11,r4,r6
    5d80:	9c 21 00 04 	l.addi r1,r1,0x4
    5d84:	e1 87 68 00 	l.add r12,r7,r13
    5d88:	e1 6b 40 00 	l.add r11,r11,r8
    5d8c:	44 00 48 00 	l.jr r9
    5d90:	84 41 ff fc 	l.lwz r2,0xfffffffc(r1)

00005d94 <__lshrdi3>:
    5d94:	bc 05 00 00 	l.sfeqi r5,0x0
    5d98:	10 00 00 0b 	l.bf 5dc4 <__lshrdi3+0x30>
    5d9c:	9c c0 00 20 	l.addi r6,r0,0x20
    5da0:	e0 c6 28 02 	l.sub r6,r6,r5
    5da4:	bd 46 00 00 	l.sfgtsi r6,0x0
    5da8:	0c 00 00 0a 	l.bnf 5dd0 <__lshrdi3+0x3c>
    5dac:	15 00 00 00 	l.nop 0x0
    5db0:	e0 c3 30 08 	l.sll r6,r3,r6
    5db4:	e0 84 28 48 	l.srl r4,r4,r5
    5db8:	e0 a3 28 48 	l.srl r5,r3,r5
    5dbc:	e0 86 20 04 	l.or r4,r6,r4
    5dc0:	a8 65 00 00 	l.ori r3,r5,0x0
    5dc4:	a9 63 00 00 	l.ori r11,r3,0x0
    5dc8:	44 00 48 00 	l.jr r9
    5dcc:	a9 84 00 00 	l.ori r12,r4,0x0
    5dd0:	e0 80 30 02 	l.sub r4,r0,r6
    5dd4:	9c a0 00 00 	l.addi r5,r0,0x0
    5dd8:	e0 83 20 48 	l.srl r4,r3,r4
    5ddc:	03 ff ff fa 	l.j 5dc4 <__lshrdi3+0x30>
    5de0:	a8 65 00 00 	l.ori r3,r5,0x0

00005de4 <__ashldi3>:
    5de4:	bc 05 00 00 	l.sfeqi r5,0x0
    5de8:	10 00 00 0b 	l.bf 5e14 <__ashldi3+0x30>
    5dec:	9c c0 00 20 	l.addi r6,r0,0x20
    5df0:	e0 c6 28 02 	l.sub r6,r6,r5
    5df4:	bd 46 00 00 	l.sfgtsi r6,0x0
    5df8:	0c 00 00 0a 	l.bnf 5e20 <__ashldi3+0x3c>
    5dfc:	15 00 00 00 	l.nop 0x0
    5e00:	e0 c4 30 48 	l.srl r6,r4,r6
    5e04:	e0 63 28 08 	l.sll r3,r3,r5
    5e08:	e0 a4 28 08 	l.sll r5,r4,r5
    5e0c:	e0 66 18 04 	l.or r3,r6,r3
    5e10:	a8 85 00 00 	l.ori r4,r5,0x0
    5e14:	a9 63 00 00 	l.ori r11,r3,0x0
    5e18:	44 00 48 00 	l.jr r9
    5e1c:	a9 84 00 00 	l.ori r12,r4,0x0
    5e20:	e0 60 30 02 	l.sub r3,r0,r6
    5e24:	9c a0 00 00 	l.addi r5,r0,0x0
    5e28:	e0 64 18 08 	l.sll r3,r4,r3
    5e2c:	03 ff ff fa 	l.j 5e14 <__ashldi3+0x30>
    5e30:	a8 85 00 00 	l.ori r4,r5,0x0

00005e34 <__clzsi2>:
    5e34:	d7 e1 17 fc 	l.sw 0xfffffffc(r1),r2
    5e38:	a8 40 ff ff 	l.ori r2,r0,0xffff
    5e3c:	e4 43 10 00 	l.sfgtu r3,r2
    5e40:	10 00 00 10 	l.bf 5e80 <__clzsi2+0x4c>
    5e44:	9c 21 ff fc 	l.addi r1,r1,0xfffffffc
    5e48:	bc 43 00 ff 	l.sfgtui r3,0xff
    5e4c:	0c 00 00 18 	l.bnf 5eac <__clzsi2+0x78>
    5e50:	9c 80 00 20 	l.addi r4,r0,0x20
    5e54:	9c 80 00 18 	l.addi r4,r0,0x18
    5e58:	9c a0 00 08 	l.addi r5,r0,0x8
    5e5c:	18 40 00 00 	l.movhi r2,0x0
    5e60:	e0 63 28 48 	l.srl r3,r3,r5
    5e64:	a8 42 60 5c 	l.ori r2,r2,0x605c
    5e68:	9c 21 00 04 	l.addi r1,r1,0x4
    5e6c:	e0 63 10 00 	l.add r3,r3,r2
    5e70:	84 41 ff fc 	l.lwz r2,0xfffffffc(r1)
    5e74:	8d 63 00 00 	l.lbz r11,0x0(r3)
    5e78:	44 00 48 00 	l.jr r9
    5e7c:	e1 64 58 02 	l.sub r11,r4,r11
    5e80:	18 40 00 ff 	l.movhi r2,0xff
    5e84:	a8 42 ff ff 	l.ori r2,r2,0xffff
    5e88:	e4 43 10 00 	l.sfgtu r3,r2
    5e8c:	10 00 00 05 	l.bf 5ea0 <__clzsi2+0x6c>
    5e90:	15 00 00 00 	l.nop 0x0
    5e94:	9c 80 00 10 	l.addi r4,r0,0x10
    5e98:	03 ff ff f1 	l.j 5e5c <__clzsi2+0x28>
    5e9c:	a8 a4 00 00 	l.ori r5,r4,0x0
    5ea0:	9c 80 00 08 	l.addi r4,r0,0x8
    5ea4:	03 ff ff ee 	l.j 5e5c <__clzsi2+0x28>
    5ea8:	9c a0 00 18 	l.addi r5,r0,0x18
    5eac:	03 ff ff ec 	l.j 5e5c <__clzsi2+0x28>
    5eb0:	9c a0 00 00 	l.addi r5,r0,0x0

00005eb4 <__CTOR_LIST__>:
	...

00005ebc <__CTOR_END__>:
	...
